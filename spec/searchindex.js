Search.setIndex({"docnames": ["architecture", "elements/element_list", "elements/oneCCL/source/definitions", "elements/oneCCL/source/index", "elements/oneCCL/source/introduction", "elements/oneCCL/source/namespaces", "elements/oneCCL/source/programming_model", "elements/oneCCL/source/spec/collective_operations", "elements/oneCCL/source/spec/datatypes", "elements/oneCCL/source/spec/error_handling", "elements/oneCCL/source/spec/generic_workflow", "elements/oneCCL/source/spec/main_objects", "elements/oneCCL/source/spec/operation_attributes", "elements/oneCCL/source/spec/operation_progress", "elements/oneCCL/source/spec/operations", "elements/oneCCL/source/spec/reductions", "elements/oneCCL/source/spec_version", "elements/oneDAL/source/algorithms/clustering/index", "elements/oneDAL/source/algorithms/clustering/kmeans", "elements/oneDAL/source/algorithms/clustering/kmeans_init", "elements/oneDAL/source/algorithms/decomposition/index", "elements/oneDAL/source/algorithms/decomposition/pca", "elements/oneDAL/source/algorithms/index", "elements/oneDAL/source/algorithms/nearest_neighbors/index", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification", "elements/oneDAL/source/appendix/index", "elements/oneDAL/source/appendix/kd_tree", "elements/oneDAL/source/bibliography", "elements/oneDAL/source/common_interface/common_type_definitions", "elements/oneDAL/source/common_interface/error_handling", "elements/oneDAL/source/common_interface/header_files_and_namespaces", "elements/oneDAL/source/common_interface/index", "elements/oneDAL/source/common_interface/spec_version", "elements/oneDAL/source/data_management/accessor/column", "elements/oneDAL/source/data_management/accessor/row", "elements/oneDAL/source/data_management/accessors", "elements/oneDAL/source/data_management/array", "elements/oneDAL/source/data_management/csv_data_source", "elements/oneDAL/source/data_management/data_sources", "elements/oneDAL/source/data_management/index", "elements/oneDAL/source/data_management/table/homogen", "elements/oneDAL/source/data_management/tables", "elements/oneDAL/source/glossary", "elements/oneDAL/source/index", "elements/oneDAL/source/introduction", "elements/oneDAL/source/notations", "elements/oneDAL/source/programming_model/computational_modes", "elements/oneDAL/source/programming_model/descriptors", "elements/oneDAL/source/programming_model/end_to_end_example", "elements/oneDAL/source/programming_model/index", "elements/oneDAL/source/programming_model/operations/index", "elements/oneDAL/source/programming_model/operations/support", "elements/oneDNN/source/conventions", "elements/oneDNN/source/data_model/data_types/bfloat16", "elements/oneDNN/source/data_model/data_types/index", "elements/oneDNN/source/data_model/data_types/int8", "elements/oneDNN/source/data_model/index", "elements/oneDNN/source/data_model/memory/formats", "elements/oneDNN/source/data_model/memory/index", "elements/oneDNN/source/data_model/memory/objects", "elements/oneDNN/source/execution_model/index", "elements/oneDNN/source/graph/data_model", "elements/oneDNN/source/graph/general", "elements/oneDNN/source/graph/index", "elements/oneDNN/source/graph/ops/Abs", "elements/oneDNN/source/graph/ops/AbsBackward", "elements/oneDNN/source/graph/ops/Add", "elements/oneDNN/source/graph/ops/AvgPool", "elements/oneDNN/source/graph/ops/AvgPoolBackward", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining", "elements/oneDNN/source/graph/ops/BatchNormInference", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward", "elements/oneDNN/source/graph/ops/BiasAdd", "elements/oneDNN/source/graph/ops/BiasAddBackward", "elements/oneDNN/source/graph/ops/Clamp", "elements/oneDNN/source/graph/ops/ClampBackward", "elements/oneDNN/source/graph/ops/Concat", "elements/oneDNN/source/graph/ops/ConvTranspose", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights", "elements/oneDNN/source/graph/ops/Convolution", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights", "elements/oneDNN/source/graph/ops/Dequantize", "elements/oneDNN/source/graph/ops/Divide", "elements/oneDNN/source/graph/ops/DynamicDequantize", "elements/oneDNN/source/graph/ops/DynamicQuantize", "elements/oneDNN/source/graph/ops/Elu", "elements/oneDNN/source/graph/ops/EluBackward", "elements/oneDNN/source/graph/ops/End", "elements/oneDNN/source/graph/ops/Exp", "elements/oneDNN/source/graph/ops/GELU", "elements/oneDNN/source/graph/ops/GELUBackward", "elements/oneDNN/source/graph/ops/HardSigmoid", "elements/oneDNN/source/graph/ops/HardSigmoidBackward", "elements/oneDNN/source/graph/ops/HardSwish", "elements/oneDNN/source/graph/ops/HardSwishBackward", "elements/oneDNN/source/graph/ops/Interpolate", "elements/oneDNN/source/graph/ops/InterpolateBackward", "elements/oneDNN/source/graph/ops/LayerNorm", "elements/oneDNN/source/graph/ops/LayerNormBackward", "elements/oneDNN/source/graph/ops/LeakyReLU", "elements/oneDNN/source/graph/ops/Log", "elements/oneDNN/source/graph/ops/LogSoftmax", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward", "elements/oneDNN/source/graph/ops/MatMul", "elements/oneDNN/source/graph/ops/MaxPool", "elements/oneDNN/source/graph/ops/MaxPoolBackward", "elements/oneDNN/source/graph/ops/Maximum", "elements/oneDNN/source/graph/ops/Minimum", "elements/oneDNN/source/graph/ops/Mish", "elements/oneDNN/source/graph/ops/MishBackward", "elements/oneDNN/source/graph/ops/Multiply", "elements/oneDNN/source/graph/ops/PReLU", "elements/oneDNN/source/graph/ops/PReLUBackward", "elements/oneDNN/source/graph/ops/Pow", "elements/oneDNN/source/graph/ops/Quantize", "elements/oneDNN/source/graph/ops/ReLU", "elements/oneDNN/source/graph/ops/ReLUBackward", "elements/oneDNN/source/graph/ops/Reciprocal", "elements/oneDNN/source/graph/ops/ReduceL1", "elements/oneDNN/source/graph/ops/ReduceL2", "elements/oneDNN/source/graph/ops/ReduceMax", "elements/oneDNN/source/graph/ops/ReduceMean", "elements/oneDNN/source/graph/ops/ReduceMin", "elements/oneDNN/source/graph/ops/ReduceProd", "elements/oneDNN/source/graph/ops/ReduceSum", "elements/oneDNN/source/graph/ops/Reorder", "elements/oneDNN/source/graph/ops/Round", "elements/oneDNN/source/graph/ops/Select", "elements/oneDNN/source/graph/ops/Sigmoid", "elements/oneDNN/source/graph/ops/SigmoidBackward", "elements/oneDNN/source/graph/ops/SoftPlus", "elements/oneDNN/source/graph/ops/SoftPlusBackward", "elements/oneDNN/source/graph/ops/Softmax", "elements/oneDNN/source/graph/ops/SoftmaxBackward", "elements/oneDNN/source/graph/ops/Sqrt", "elements/oneDNN/source/graph/ops/SqrtBackward", "elements/oneDNN/source/graph/ops/Square", "elements/oneDNN/source/graph/ops/SquaredDifference", "elements/oneDNN/source/graph/ops/StaticReshape", "elements/oneDNN/source/graph/ops/StaticTranspose", "elements/oneDNN/source/graph/ops/Subtract", "elements/oneDNN/source/graph/ops/Tanh", "elements/oneDNN/source/graph/ops/TanhBackward", "elements/oneDNN/source/graph/ops/TypeCast", "elements/oneDNN/source/graph/ops/Wildcard", "elements/oneDNN/source/graph/ops/index", "elements/oneDNN/source/graph/programming_model", "elements/oneDNN/source/index", "elements/oneDNN/source/introduction", "elements/oneDNN/source/primitives/attributes/index", "elements/oneDNN/source/primitives/attributes/post-ops", "elements/oneDNN/source/primitives/batch_normalization", "elements/oneDNN/source/primitives/binary", "elements/oneDNN/source/primitives/concat", "elements/oneDNN/source/primitives/convolution", "elements/oneDNN/source/primitives/eltwise", "elements/oneDNN/source/primitives/general", "elements/oneDNN/source/primitives/index", "elements/oneDNN/source/primitives/inner-product", "elements/oneDNN/source/primitives/layer_normalization", "elements/oneDNN/source/primitives/lrn", "elements/oneDNN/source/primitives/matmul", "elements/oneDNN/source/primitives/pooling", "elements/oneDNN/source/primitives/prelu", "elements/oneDNN/source/primitives/reduction", "elements/oneDNN/source/primitives/reorder", "elements/oneDNN/source/primitives/resampling", "elements/oneDNN/source/primitives/rnn", "elements/oneDNN/source/primitives/shuffle", "elements/oneDNN/source/primitives/softmax", "elements/oneDNN/source/primitives/sum", "elements/oneDPL/source/common", "elements/oneDPL/source/index", "elements/oneDPL/source/parallel_api", "elements/oneDPL/source/parallel_api/algorithms", "elements/oneDPL/source/parallel_api/buffer_wrappers", "elements/oneDPL/source/parallel_api/execution_policies", "elements/oneDPL/source/parallel_api/iterators", "elements/oneDPL/source/parallel_api/parallel_range_api", "elements/oneDPL/source/sycl_kernels_api", "elements/oneMKL/source/appendix/appendix", "elements/oneMKL/source/architecture/architecture", "elements/oneMKL/source/domains/blas/asum", "elements/oneMKL/source/domains/blas/axpby", "elements/oneMKL/source/domains/blas/axpy", "elements/oneMKL/source/domains/blas/axpy_batch", "elements/oneMKL/source/domains/blas/blas", "elements/oneMKL/source/domains/blas/blas-level-1-routines", "elements/oneMKL/source/domains/blas/blas-level-2-routines", "elements/oneMKL/source/domains/blas/blas-level-3-routines", "elements/oneMKL/source/domains/blas/blas-like-extensions", "elements/oneMKL/source/domains/blas/copy", "elements/oneMKL/source/domains/blas/copy_batch", "elements/oneMKL/source/domains/blas/dgmm_batch", "elements/oneMKL/source/domains/blas/dot", "elements/oneMKL/source/domains/blas/dotc", "elements/oneMKL/source/domains/blas/dotu", "elements/oneMKL/source/domains/blas/gbmv", "elements/oneMKL/source/domains/blas/gemm", "elements/oneMKL/source/domains/blas/gemm_batch", "elements/oneMKL/source/domains/blas/gemm_bias", "elements/oneMKL/source/domains/blas/gemmt", "elements/oneMKL/source/domains/blas/gemv", "elements/oneMKL/source/domains/blas/gemv_batch", "elements/oneMKL/source/domains/blas/ger", "elements/oneMKL/source/domains/blas/gerc", "elements/oneMKL/source/domains/blas/geru", "elements/oneMKL/source/domains/blas/hbmv", "elements/oneMKL/source/domains/blas/hemm", "elements/oneMKL/source/domains/blas/hemv", "elements/oneMKL/source/domains/blas/her", "elements/oneMKL/source/domains/blas/her2", "elements/oneMKL/source/domains/blas/her2k", "elements/oneMKL/source/domains/blas/herk", "elements/oneMKL/source/domains/blas/hpmv", "elements/oneMKL/source/domains/blas/hpr", "elements/oneMKL/source/domains/blas/hpr2", "elements/oneMKL/source/domains/blas/iamax", "elements/oneMKL/source/domains/blas/iamin", "elements/oneMKL/source/domains/blas/imatcopy", "elements/oneMKL/source/domains/blas/imatcopy_batch", "elements/oneMKL/source/domains/blas/nrm2", "elements/oneMKL/source/domains/blas/omatadd", "elements/oneMKL/source/domains/blas/omatadd_batch", "elements/oneMKL/source/domains/blas/omatcopy", "elements/oneMKL/source/domains/blas/omatcopy2", "elements/oneMKL/source/domains/blas/omatcopy_batch", "elements/oneMKL/source/domains/blas/rot", "elements/oneMKL/source/domains/blas/rotg", "elements/oneMKL/source/domains/blas/rotm", "elements/oneMKL/source/domains/blas/rotmg", "elements/oneMKL/source/domains/blas/sbmv", "elements/oneMKL/source/domains/blas/scal", "elements/oneMKL/source/domains/blas/sdsdot", "elements/oneMKL/source/domains/blas/spmv", "elements/oneMKL/source/domains/blas/spr", "elements/oneMKL/source/domains/blas/spr2", "elements/oneMKL/source/domains/blas/swap", "elements/oneMKL/source/domains/blas/symm", "elements/oneMKL/source/domains/blas/symv", "elements/oneMKL/source/domains/blas/syr", "elements/oneMKL/source/domains/blas/syr2", "elements/oneMKL/source/domains/blas/syr2k", "elements/oneMKL/source/domains/blas/syrk", "elements/oneMKL/source/domains/blas/syrk_batch", "elements/oneMKL/source/domains/blas/tbmv", "elements/oneMKL/source/domains/blas/tbsv", "elements/oneMKL/source/domains/blas/tpmv", "elements/oneMKL/source/domains/blas/tpsv", "elements/oneMKL/source/domains/blas/trmm", "elements/oneMKL/source/domains/blas/trmv", "elements/oneMKL/source/domains/blas/trsm", "elements/oneMKL/source/domains/blas/trsm_batch", "elements/oneMKL/source/domains/blas/trsv", "elements/oneMKL/source/domains/dft/compute_backward", "elements/oneMKL/source/domains/dft/compute_forward", "elements/oneMKL/source/domains/dft/config_params/data_layouts", "elements/oneMKL/source/domains/dft/config_params/storage_formats", "elements/oneMKL/source/domains/dft/config_params/workspace_placement", "elements/oneMKL/source/domains/dft/descriptor", "elements/oneMKL/source/domains/dft/dft", "elements/oneMKL/source/domains/dft/enums_and_config_params", "elements/oneMKL/source/domains/domains", "elements/oneMKL/source/domains/lapack/gebrd", "elements/oneMKL/source/domains/lapack/gebrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/geqrf", "elements/oneMKL/source/domains/lapack/geqrf_batch", "elements/oneMKL/source/domains/lapack/geqrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/geqrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/gerqf", "elements/oneMKL/source/domains/lapack/gerqf_scratchpad_size", "elements/oneMKL/source/domains/lapack/gesvd", "elements/oneMKL/source/domains/lapack/gesvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrf", "elements/oneMKL/source/domains/lapack/getrf_batch", "elements/oneMKL/source/domains/lapack/getrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/getri", "elements/oneMKL/source/domains/lapack/getri_batch", "elements/oneMKL/source/domains/lapack/getri_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getri_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrs", "elements/oneMKL/source/domains/lapack/getrs_batch", "elements/oneMKL/source/domains/lapack/getrs_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/getrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/heevd", "elements/oneMKL/source/domains/lapack/heevd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hegvd", "elements/oneMKL/source/domains/lapack/hegvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hetrd", "elements/oneMKL/source/domains/lapack/hetrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/hetrf", "elements/oneMKL/source/domains/lapack/hetrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/lapack", "elements/oneMKL/source/domains/lapack/orgbr", "elements/oneMKL/source/domains/lapack/orgbr_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgqr", "elements/oneMKL/source/domains/lapack/orgqr_batch", "elements/oneMKL/source/domains/lapack/orgqr_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/orgtr", "elements/oneMKL/source/domains/lapack/orgtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormqr", "elements/oneMKL/source/domains/lapack/ormqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormrq", "elements/oneMKL/source/domains/lapack/ormrq_scratchpad_size", "elements/oneMKL/source/domains/lapack/ormtr", "elements/oneMKL/source/domains/lapack/ormtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrf", "elements/oneMKL/source/domains/lapack/potrf_batch", "elements/oneMKL/source/domains/lapack/potrf_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/potri", "elements/oneMKL/source/domains/lapack/potri_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrs", "elements/oneMKL/source/domains/lapack/potrs_batch", "elements/oneMKL/source/domains/lapack/potrs_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/potrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/syevd", "elements/oneMKL/source/domains/lapack/syevd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sygvd", "elements/oneMKL/source/domains/lapack/sygvd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sytrd", "elements/oneMKL/source/domains/lapack/sytrd_scratchpad_size", "elements/oneMKL/source/domains/lapack/sytrf", "elements/oneMKL/source/domains/lapack/sytrf_scratchpad_size", "elements/oneMKL/source/domains/lapack/trtrs", "elements/oneMKL/source/domains/lapack/trtrs_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungbr", "elements/oneMKL/source/domains/lapack/ungbr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungqr", "elements/oneMKL/source/domains/lapack/ungqr_batch", "elements/oneMKL/source/domains/lapack/ungqr_batch_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/ungtr", "elements/oneMKL/source/domains/lapack/ungtr_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmqr", "elements/oneMKL/source/domains/lapack/unmqr_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmrq", "elements/oneMKL/source/domains/lapack/unmrq_scratchpad_size", "elements/oneMKL/source/domains/lapack/unmtr", "elements/oneMKL/source/domains/lapack/unmtr_scratchpad_size", "elements/oneMKL/source/domains/matrix-storage", "elements/oneMKL/source/domains/rng/bibliography", "elements/oneMKL/source/domains/rng/device_api/device-distributions", "elements/oneMKL/source/domains/rng/device_api/device-distributions-template-parameter-method", "elements/oneMKL/source/domains/rng/device_api/device-engines", "elements/oneMKL/source/domains/rng/device_api/device-rng-bernoulli", "elements/oneMKL/source/domains/rng/device_api/device-rng-beta", "elements/oneMKL/source/domains/rng/device_api/device-rng-bits", "elements/oneMKL/source/domains/rng/device_api/device-rng-exponential", "elements/oneMKL/source/domains/rng/device_api/device-rng-gamma", "elements/oneMKL/source/domains/rng/device_api/device-rng-gaussian", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate-routines", "elements/oneMKL/source/domains/rng/device_api/device-rng-lognormal", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg31m1", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg59", "elements/oneMKL/source/domains/rng/device_api/device-rng-mrg32k3a", "elements/oneMKL/source/domains/rng/device_api/device-rng-philox4x32x10", "elements/oneMKL/source/domains/rng/device_api/device-rng-poisson", "elements/oneMKL/source/domains/rng/device_api/device-rng-skip-ahead", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-bits", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-continuous", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-discrete", "elements/oneMKL/source/domains/rng/device_api/device-rng-usage-model", "elements/oneMKL/source/domains/rng/device_api/device-routines", "elements/oneMKL/source/domains/rng/device_api/device-service-routines", "elements/oneMKL/source/domains/rng/host_api/distributions", "elements/oneMKL/source/domains/rng/host_api/distributions-template-parameter-mkl-rng-method-values", "elements/oneMKL/source/domains/rng/host_api/engines-basic-random-number-generators", "elements/oneMKL/source/domains/rng/host_api/generate-routine", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-ars5", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bernoulli", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-beta", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-binomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bits", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-cauchy", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-chi_square", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-default_engine", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-exponential", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gamma", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian_mv", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-generate", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-geometric", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gumbel", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-hypergeometric", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-laplace", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-leapfrog", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-lognormal", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg31m1", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg59", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mrg32k3a", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt19937", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt2203", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-multinomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-negbinomial", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-niederreiter", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-nondeterministic", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-philox4x32x10", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson_v", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-r250", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-rayleigh", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sfmt19937", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-skip_ahead", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sobol", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-continuous", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-discrete", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform_bits", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-weibull", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-wichmann_hill", "elements/oneMKL/source/domains/rng/host_api/onemkl-rng-usage-model", "elements/oneMKL/source/domains/rng/host_api/rng-host-routines", "elements/oneMKL/source/domains/rng/host_api/service-routines", "elements/oneMKL/source/domains/rng/onemkl-rng-overview", "elements/oneMKL/source/domains/spblas/data_types/data_handles", "elements/oneMKL/source/domains/spblas/data_types/format-descriptions", "elements/oneMKL/source/domains/spblas/data_types/init_coo_matrix", "elements/oneMKL/source/domains/spblas/data_types/init_csr_matrix", "elements/oneMKL/source/domains/spblas/data_types/init_dense_matrix", "elements/oneMKL/source/domains/spblas/data_types/init_dense_vector", "elements/oneMKL/source/domains/spblas/data_types/release_dense_matrix", "elements/oneMKL/source/domains/spblas/data_types/release_dense_vector", "elements/oneMKL/source/domains/spblas/data_types/release_sparse_matrix", "elements/oneMKL/source/domains/spblas/data_types/set_coo_matrix_data", "elements/oneMKL/source/domains/spblas/data_types/set_csr_matrix_data", "elements/oneMKL/source/domains/spblas/data_types/set_dense_matrix_data", "elements/oneMKL/source/domains/spblas/data_types/set_dense_vector_data", "elements/oneMKL/source/domains/spblas/data_types/set_matrix_property", "elements/oneMKL/source/domains/spblas/matrix_view", "elements/oneMKL/source/domains/spblas/operations/spmm", "elements/oneMKL/source/domains/spblas/operations/spmv", "elements/oneMKL/source/domains/spblas/operations/spsv", "elements/oneMKL/source/domains/spblas/spblas", "elements/oneMKL/source/domains/spblas/supported-types", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_dataset", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_make_dataset", "elements/oneMKL/source/domains/stats/onemkl_stats_max", "elements/oneMKL/source/domains/stats/onemkl_stats_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_min", "elements/oneMKL/source/domains/stats/onemkl_stats_min_max", "elements/oneMKL/source/domains/stats/onemkl_stats_overview", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_moment", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_sum", "elements/oneMKL/source/domains/stats/onemkl_stats_routines", "elements/oneMKL/source/domains/stats/onemkl_stats_service_routines", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness_user_mean", "elements/oneMKL/source/domains/stats/onemkl_stats_usage_model", "elements/oneMKL/source/domains/stats/onemkl_stats_variation", "elements/oneMKL/source/domains/stats/onemkl_stats_variation_user_mean", "elements/oneMKL/source/domains/value_or_pointer", "elements/oneMKL/source/domains/vm/abs", "elements/oneMKL/source/domains/vm/acos", "elements/oneMKL/source/domains/vm/acosh", "elements/oneMKL/source/domains/vm/acospi", "elements/oneMKL/source/domains/vm/add", "elements/oneMKL/source/domains/vm/arg", "elements/oneMKL/source/domains/vm/asin", "elements/oneMKL/source/domains/vm/asinh", "elements/oneMKL/source/domains/vm/asinpi", "elements/oneMKL/source/domains/vm/atan", "elements/oneMKL/source/domains/vm/atan2", "elements/oneMKL/source/domains/vm/atan2pi", "elements/oneMKL/source/domains/vm/atanh", "elements/oneMKL/source/domains/vm/atanpi", "elements/oneMKL/source/domains/vm/bibliography", "elements/oneMKL/source/domains/vm/cbrt", "elements/oneMKL/source/domains/vm/cdfnorm", "elements/oneMKL/source/domains/vm/cdfnorminv", "elements/oneMKL/source/domains/vm/ceil", "elements/oneMKL/source/domains/vm/cis", "elements/oneMKL/source/domains/vm/clear_status", "elements/oneMKL/source/domains/vm/conj", "elements/oneMKL/source/domains/vm/copysign", "elements/oneMKL/source/domains/vm/cos", "elements/oneMKL/source/domains/vm/cosd", "elements/oneMKL/source/domains/vm/cosh", "elements/oneMKL/source/domains/vm/cospi", "elements/oneMKL/source/domains/vm/create_error_handler", "elements/oneMKL/source/domains/vm/div", "elements/oneMKL/source/domains/vm/erf", "elements/oneMKL/source/domains/vm/erfc", "elements/oneMKL/source/domains/vm/erfcinv", "elements/oneMKL/source/domains/vm/erfinv", "elements/oneMKL/source/domains/vm/exp", "elements/oneMKL/source/domains/vm/exp10", "elements/oneMKL/source/domains/vm/exp2", "elements/oneMKL/source/domains/vm/expint1", "elements/oneMKL/source/domains/vm/expm1", "elements/oneMKL/source/domains/vm/fdim", "elements/oneMKL/source/domains/vm/floor", "elements/oneMKL/source/domains/vm/fmax", "elements/oneMKL/source/domains/vm/fmin", "elements/oneMKL/source/domains/vm/fmod", "elements/oneMKL/source/domains/vm/frac", "elements/oneMKL/source/domains/vm/get_mode", "elements/oneMKL/source/domains/vm/get_status", "elements/oneMKL/source/domains/vm/hypot", "elements/oneMKL/source/domains/vm/inv", "elements/oneMKL/source/domains/vm/invcbrt", "elements/oneMKL/source/domains/vm/invsqrt", "elements/oneMKL/source/domains/vm/lgamma", "elements/oneMKL/source/domains/vm/linearfrac", "elements/oneMKL/source/domains/vm/ln", "elements/oneMKL/source/domains/vm/log10", "elements/oneMKL/source/domains/vm/log1p", "elements/oneMKL/source/domains/vm/log2", "elements/oneMKL/source/domains/vm/logb", "elements/oneMKL/source/domains/vm/maxmag", "elements/oneMKL/source/domains/vm/minmag", "elements/oneMKL/source/domains/vm/modf", "elements/oneMKL/source/domains/vm/mul", "elements/oneMKL/source/domains/vm/mulbyconj", "elements/oneMKL/source/domains/vm/nearbyint", "elements/oneMKL/source/domains/vm/nextafter", "elements/oneMKL/source/domains/vm/pow", "elements/oneMKL/source/domains/vm/pow2o3", "elements/oneMKL/source/domains/vm/pow3o2", "elements/oneMKL/source/domains/vm/powr", "elements/oneMKL/source/domains/vm/powx", "elements/oneMKL/source/domains/vm/remainder", "elements/oneMKL/source/domains/vm/rint", "elements/oneMKL/source/domains/vm/round", "elements/oneMKL/source/domains/vm/set_status", "elements/oneMKL/source/domains/vm/setmode", "elements/oneMKL/source/domains/vm/sin", "elements/oneMKL/source/domains/vm/sincos", "elements/oneMKL/source/domains/vm/sind", "elements/oneMKL/source/domains/vm/sinh", "elements/oneMKL/source/domains/vm/sinpi", "elements/oneMKL/source/domains/vm/special-value-notations", "elements/oneMKL/source/domains/vm/sqr", "elements/oneMKL/source/domains/vm/sqrt", "elements/oneMKL/source/domains/vm/sub", "elements/oneMKL/source/domains/vm/tan", "elements/oneMKL/source/domains/vm/tand", "elements/oneMKL/source/domains/vm/tanh", "elements/oneMKL/source/domains/vm/tanpi", "elements/oneMKL/source/domains/vm/tgamma", "elements/oneMKL/source/domains/vm/trunc", "elements/oneMKL/source/domains/vm/vm", "elements/oneMKL/source/domains/vm/vm-exceptions", "elements/oneMKL/source/domains/vm/vm-mathematical-functions", "elements/oneMKL/source/domains/vm/vm-service-functions", "elements/oneMKL/source/index", "elements/oneTBB/source/algorithms", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_nd_range_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls", "elements/oneTBB/source/algorithms/functions/feeder", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func", "elements/oneTBB/source/algorithms/functions/parallel_for_func", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func", "elements/oneTBB/source/algorithms/functions/parallel_scan_func", "elements/oneTBB/source/algorithms/functions/parallel_sort_func", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner", "elements/oneTBB/source/algorithms/partitioners/static_partitioner", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls", "elements/oneTBB/source/algorithms/split_tags/split_cls", "elements/oneTBB/source/configuration", "elements/oneTBB/source/configuration/enabling_debugging_features", "elements/oneTBB/source/configuration/feature_macros", "elements/oneTBB/source/configuration/namespaces", "elements/oneTBB/source/configuration/version_information", "elements/oneTBB/source/containers", "elements/oneTBB/source/containers/auxiliary/node_handles_cls", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_hash_map_cls", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_map_cls/observers", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_queue_cls", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions", "elements/oneTBB/source/containers/concurrent_set_cls", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_set_cls/observers", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers", "elements/oneTBB/source/containers/concurrent_vector_cls", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations", "elements/oneTBB/source/deprecated/task_arena_attach_tag", "elements/oneTBB/source/flow_graph", "elements/oneTBB/source/flow_graph/async_node_cls", "elements/oneTBB/source/flow_graph/broadcast_node_cls", "elements/oneTBB/source/flow_graph/buffer_node_cls", "elements/oneTBB/source/flow_graph/composite_node_cls", "elements/oneTBB/source/flow_graph/continue_msg_cls", "elements/oneTBB/source/flow_graph/continue_node_cls", "elements/oneTBB/source/flow_graph/copy_body_func", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example", "elements/oneTBB/source/flow_graph/forwarding_and_buffering", "elements/oneTBB/source/flow_graph/func_node_cls", "elements/oneTBB/source/flow_graph/functional_node_policies", "elements/oneTBB/source/flow_graph/graph_cls", "elements/oneTBB/source/flow_graph/graph_node_cls", "elements/oneTBB/source/flow_graph/indexer_node_cls", "elements/oneTBB/source/flow_graph/input_node_cls", "elements/oneTBB/source/flow_graph/input_port_func", "elements/oneTBB/source/flow_graph/join_node_cls", "elements/oneTBB/source/flow_graph/join_node_policies", "elements/oneTBB/source/flow_graph/limiter_node_cls", "elements/oneTBB/source/flow_graph/make_edge_func", "elements/oneTBB/source/flow_graph/message_flow_graph_example", "elements/oneTBB/source/flow_graph/multifunc_node_cls", "elements/oneTBB/source/flow_graph/node_priorities", "elements/oneTBB/source/flow_graph/output_port_func", "elements/oneTBB/source/flow_graph/overwrite_node_cls", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits", "elements/oneTBB/source/flow_graph/priority_queue_node_cls", "elements/oneTBB/source/flow_graph/queue_node_cls", "elements/oneTBB/source/flow_graph/receiver", "elements/oneTBB/source/flow_graph/remove_edge_func", "elements/oneTBB/source/flow_graph/reset_flags_enum", "elements/oneTBB/source/flow_graph/sender", "elements/oneTBB/source/flow_graph/sequencer_node_cls", "elements/oneTBB/source/flow_graph/split_node_cls", "elements/oneTBB/source/flow_graph/tagged_msg_cls", "elements/oneTBB/source/flow_graph/write_once_node_cls", "elements/oneTBB/source/identifiers", "elements/oneTBB/source/info_namespace", "elements/oneTBB/source/intro", "elements/oneTBB/source/memory_allocation", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls", "elements/oneTBB/source/mutual_exclusion", "elements/oneTBB/source/mutual_exclusion/mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls", "elements/oneTBB/source/named_requirements", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence", "elements/oneTBB/source/named_requirements/algorithms/filter_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body", "elements/oneTBB/source/named_requirements/algorithms/par_for_func", "elements/oneTBB/source/named_requirements/algorithms/par_for_index", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func", "elements/oneTBB/source/named_requirements/algorithms/range", "elements/oneTBB/source/named_requirements/algorithms/splittable", "elements/oneTBB/source/named_requirements/containers/container_range", "elements/oneTBB/source/named_requirements/containers/hash_compare", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body", "elements/oneTBB/source/named_requirements/flow_graph/sequencer", "elements/oneTBB/source/named_requirements/mutexes/mutex", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func", "elements/oneTBB/source/nested-aux-interfaces", "elements/oneTBB/source/nested-depr-interfaces", "elements/oneTBB/source/nested-gen-info", "elements/oneTBB/source/nested-index", "elements/oneTBB/source/nested-interfaces", "elements/oneTBB/source/notation", "elements/oneTBB/source/task_scheduler", "elements/oneTBB/source/task_scheduler/attach_tag_type", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum", "elements/oneTBB/source/task_scheduler/task_group/task_handle", "elements/oneTBB/source/thread_local_storage", "elements/oneTBB/source/thread_local_storage/combinable_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers", "elements/oneTBB/source/thread_local_storage/flattened2d_cls", "elements/oneTBB/source/thread_safety", "elements/oneTBB/source/timing", "elements/oneTBB/source/timing/tick_count_cls", "index", "introduction", "notices"], "filenames": ["architecture.rst", "elements/element_list.rst", "elements/oneCCL/source/definitions.rst", "elements/oneCCL/source/index.rst", "elements/oneCCL/source/introduction.rst", "elements/oneCCL/source/namespaces.rst", "elements/oneCCL/source/programming_model.rst", "elements/oneCCL/source/spec/collective_operations.rst", "elements/oneCCL/source/spec/datatypes.rst", "elements/oneCCL/source/spec/error_handling.rst", "elements/oneCCL/source/spec/generic_workflow.rst", "elements/oneCCL/source/spec/main_objects.rst", "elements/oneCCL/source/spec/operation_attributes.rst", "elements/oneCCL/source/spec/operation_progress.rst", "elements/oneCCL/source/spec/operations.rst", "elements/oneCCL/source/spec/reductions.rst", "elements/oneCCL/source/spec_version.rst", "elements/oneDAL/source/algorithms/clustering/index.rst", "elements/oneDAL/source/algorithms/clustering/kmeans.rst", "elements/oneDAL/source/algorithms/clustering/kmeans_init.rst", "elements/oneDAL/source/algorithms/decomposition/index.rst", "elements/oneDAL/source/algorithms/decomposition/pca.rst", "elements/oneDAL/source/algorithms/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/index.rst", "elements/oneDAL/source/algorithms/nearest_neighbors/knn_classification.rst", "elements/oneDAL/source/appendix/index.rst", "elements/oneDAL/source/appendix/kd_tree.rst", "elements/oneDAL/source/bibliography.rst", "elements/oneDAL/source/common_interface/common_type_definitions.rst", "elements/oneDAL/source/common_interface/error_handling.rst", "elements/oneDAL/source/common_interface/header_files_and_namespaces.rst", "elements/oneDAL/source/common_interface/index.rst", "elements/oneDAL/source/common_interface/spec_version.rst", "elements/oneDAL/source/data_management/accessor/column.rst", "elements/oneDAL/source/data_management/accessor/row.rst", "elements/oneDAL/source/data_management/accessors.rst", "elements/oneDAL/source/data_management/array.rst", "elements/oneDAL/source/data_management/csv_data_source.rst", "elements/oneDAL/source/data_management/data_sources.rst", "elements/oneDAL/source/data_management/index.rst", "elements/oneDAL/source/data_management/table/homogen.rst", "elements/oneDAL/source/data_management/tables.rst", "elements/oneDAL/source/glossary.rst", "elements/oneDAL/source/index.rst", "elements/oneDAL/source/introduction.rst", "elements/oneDAL/source/notations.rst", "elements/oneDAL/source/programming_model/computational_modes.rst", "elements/oneDAL/source/programming_model/descriptors.rst", "elements/oneDAL/source/programming_model/end_to_end_example.rst", "elements/oneDAL/source/programming_model/index.rst", "elements/oneDAL/source/programming_model/operations/index.rst", "elements/oneDAL/source/programming_model/operations/support.rst", "elements/oneDNN/source/conventions.rst", "elements/oneDNN/source/data_model/data_types/bfloat16.rst", "elements/oneDNN/source/data_model/data_types/index.rst", "elements/oneDNN/source/data_model/data_types/int8.rst", "elements/oneDNN/source/data_model/index.rst", "elements/oneDNN/source/data_model/memory/formats.rst", "elements/oneDNN/source/data_model/memory/index.rst", "elements/oneDNN/source/data_model/memory/objects.rst", "elements/oneDNN/source/execution_model/index.rst", "elements/oneDNN/source/graph/data_model.rst", "elements/oneDNN/source/graph/general.rst", "elements/oneDNN/source/graph/index.rst", "elements/oneDNN/source/graph/ops/Abs.rst", "elements/oneDNN/source/graph/ops/AbsBackward.rst", "elements/oneDNN/source/graph/ops/Add.rst", "elements/oneDNN/source/graph/ops/AvgPool.rst", "elements/oneDNN/source/graph/ops/AvgPoolBackward.rst", "elements/oneDNN/source/graph/ops/BatchNormForwardTraining.rst", "elements/oneDNN/source/graph/ops/BatchNormInference.rst", "elements/oneDNN/source/graph/ops/BatchNormTrainingBackward.rst", "elements/oneDNN/source/graph/ops/BiasAdd.rst", "elements/oneDNN/source/graph/ops/BiasAddBackward.rst", "elements/oneDNN/source/graph/ops/Clamp.rst", "elements/oneDNN/source/graph/ops/ClampBackward.rst", "elements/oneDNN/source/graph/ops/Concat.rst", "elements/oneDNN/source/graph/ops/ConvTranspose.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvTransposeBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Convolution.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardData.rst", "elements/oneDNN/source/graph/ops/ConvolutionBackwardWeights.rst", "elements/oneDNN/source/graph/ops/Dequantize.rst", "elements/oneDNN/source/graph/ops/Divide.rst", "elements/oneDNN/source/graph/ops/DynamicDequantize.rst", "elements/oneDNN/source/graph/ops/DynamicQuantize.rst", "elements/oneDNN/source/graph/ops/Elu.rst", "elements/oneDNN/source/graph/ops/EluBackward.rst", "elements/oneDNN/source/graph/ops/End.rst", "elements/oneDNN/source/graph/ops/Exp.rst", "elements/oneDNN/source/graph/ops/GELU.rst", "elements/oneDNN/source/graph/ops/GELUBackward.rst", "elements/oneDNN/source/graph/ops/HardSigmoid.rst", "elements/oneDNN/source/graph/ops/HardSigmoidBackward.rst", "elements/oneDNN/source/graph/ops/HardSwish.rst", "elements/oneDNN/source/graph/ops/HardSwishBackward.rst", "elements/oneDNN/source/graph/ops/Interpolate.rst", "elements/oneDNN/source/graph/ops/InterpolateBackward.rst", "elements/oneDNN/source/graph/ops/LayerNorm.rst", "elements/oneDNN/source/graph/ops/LayerNormBackward.rst", "elements/oneDNN/source/graph/ops/LeakyReLU.rst", "elements/oneDNN/source/graph/ops/Log.rst", "elements/oneDNN/source/graph/ops/LogSoftmax.rst", "elements/oneDNN/source/graph/ops/LogSoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/MatMul.rst", "elements/oneDNN/source/graph/ops/MaxPool.rst", "elements/oneDNN/source/graph/ops/MaxPoolBackward.rst", "elements/oneDNN/source/graph/ops/Maximum.rst", "elements/oneDNN/source/graph/ops/Minimum.rst", "elements/oneDNN/source/graph/ops/Mish.rst", "elements/oneDNN/source/graph/ops/MishBackward.rst", "elements/oneDNN/source/graph/ops/Multiply.rst", "elements/oneDNN/source/graph/ops/PReLU.rst", "elements/oneDNN/source/graph/ops/PReLUBackward.rst", "elements/oneDNN/source/graph/ops/Pow.rst", "elements/oneDNN/source/graph/ops/Quantize.rst", "elements/oneDNN/source/graph/ops/ReLU.rst", "elements/oneDNN/source/graph/ops/ReLUBackward.rst", "elements/oneDNN/source/graph/ops/Reciprocal.rst", "elements/oneDNN/source/graph/ops/ReduceL1.rst", "elements/oneDNN/source/graph/ops/ReduceL2.rst", "elements/oneDNN/source/graph/ops/ReduceMax.rst", "elements/oneDNN/source/graph/ops/ReduceMean.rst", "elements/oneDNN/source/graph/ops/ReduceMin.rst", "elements/oneDNN/source/graph/ops/ReduceProd.rst", "elements/oneDNN/source/graph/ops/ReduceSum.rst", "elements/oneDNN/source/graph/ops/Reorder.rst", "elements/oneDNN/source/graph/ops/Round.rst", "elements/oneDNN/source/graph/ops/Select.rst", "elements/oneDNN/source/graph/ops/Sigmoid.rst", "elements/oneDNN/source/graph/ops/SigmoidBackward.rst", "elements/oneDNN/source/graph/ops/SoftPlus.rst", "elements/oneDNN/source/graph/ops/SoftPlusBackward.rst", "elements/oneDNN/source/graph/ops/Softmax.rst", "elements/oneDNN/source/graph/ops/SoftmaxBackward.rst", "elements/oneDNN/source/graph/ops/Sqrt.rst", "elements/oneDNN/source/graph/ops/SqrtBackward.rst", "elements/oneDNN/source/graph/ops/Square.rst", "elements/oneDNN/source/graph/ops/SquaredDifference.rst", "elements/oneDNN/source/graph/ops/StaticReshape.rst", "elements/oneDNN/source/graph/ops/StaticTranspose.rst", "elements/oneDNN/source/graph/ops/Subtract.rst", "elements/oneDNN/source/graph/ops/Tanh.rst", "elements/oneDNN/source/graph/ops/TanhBackward.rst", "elements/oneDNN/source/graph/ops/TypeCast.rst", "elements/oneDNN/source/graph/ops/Wildcard.rst", "elements/oneDNN/source/graph/ops/index.rst", "elements/oneDNN/source/graph/programming_model.rst", "elements/oneDNN/source/index.rst", "elements/oneDNN/source/introduction.rst", "elements/oneDNN/source/primitives/attributes/index.rst", "elements/oneDNN/source/primitives/attributes/post-ops.rst", "elements/oneDNN/source/primitives/batch_normalization.rst", "elements/oneDNN/source/primitives/binary.rst", "elements/oneDNN/source/primitives/concat.rst", "elements/oneDNN/source/primitives/convolution.rst", "elements/oneDNN/source/primitives/eltwise.rst", "elements/oneDNN/source/primitives/general.rst", "elements/oneDNN/source/primitives/index.rst", "elements/oneDNN/source/primitives/inner-product.rst", "elements/oneDNN/source/primitives/layer_normalization.rst", "elements/oneDNN/source/primitives/lrn.rst", "elements/oneDNN/source/primitives/matmul.rst", "elements/oneDNN/source/primitives/pooling.rst", "elements/oneDNN/source/primitives/prelu.rst", "elements/oneDNN/source/primitives/reduction.rst", "elements/oneDNN/source/primitives/reorder.rst", "elements/oneDNN/source/primitives/resampling.rst", "elements/oneDNN/source/primitives/rnn.rst", "elements/oneDNN/source/primitives/shuffle.rst", "elements/oneDNN/source/primitives/softmax.rst", "elements/oneDNN/source/primitives/sum.rst", "elements/oneDPL/source/common.rst", "elements/oneDPL/source/index.rst", "elements/oneDPL/source/parallel_api.rst", "elements/oneDPL/source/parallel_api/algorithms.rst", "elements/oneDPL/source/parallel_api/buffer_wrappers.rst", "elements/oneDPL/source/parallel_api/execution_policies.rst", "elements/oneDPL/source/parallel_api/iterators.rst", "elements/oneDPL/source/parallel_api/parallel_range_api.rst", "elements/oneDPL/source/sycl_kernels_api.rst", "elements/oneMKL/source/appendix/appendix.rst", "elements/oneMKL/source/architecture/architecture.rst", "elements/oneMKL/source/domains/blas/asum.rst", "elements/oneMKL/source/domains/blas/axpby.rst", "elements/oneMKL/source/domains/blas/axpy.rst", "elements/oneMKL/source/domains/blas/axpy_batch.rst", "elements/oneMKL/source/domains/blas/blas.rst", "elements/oneMKL/source/domains/blas/blas-level-1-routines.rst", "elements/oneMKL/source/domains/blas/blas-level-2-routines.rst", "elements/oneMKL/source/domains/blas/blas-level-3-routines.rst", "elements/oneMKL/source/domains/blas/blas-like-extensions.rst", "elements/oneMKL/source/domains/blas/copy.rst", "elements/oneMKL/source/domains/blas/copy_batch.rst", "elements/oneMKL/source/domains/blas/dgmm_batch.rst", "elements/oneMKL/source/domains/blas/dot.rst", "elements/oneMKL/source/domains/blas/dotc.rst", "elements/oneMKL/source/domains/blas/dotu.rst", "elements/oneMKL/source/domains/blas/gbmv.rst", "elements/oneMKL/source/domains/blas/gemm.rst", "elements/oneMKL/source/domains/blas/gemm_batch.rst", "elements/oneMKL/source/domains/blas/gemm_bias.rst", "elements/oneMKL/source/domains/blas/gemmt.rst", "elements/oneMKL/source/domains/blas/gemv.rst", "elements/oneMKL/source/domains/blas/gemv_batch.rst", "elements/oneMKL/source/domains/blas/ger.rst", "elements/oneMKL/source/domains/blas/gerc.rst", "elements/oneMKL/source/domains/blas/geru.rst", "elements/oneMKL/source/domains/blas/hbmv.rst", "elements/oneMKL/source/domains/blas/hemm.rst", "elements/oneMKL/source/domains/blas/hemv.rst", "elements/oneMKL/source/domains/blas/her.rst", "elements/oneMKL/source/domains/blas/her2.rst", "elements/oneMKL/source/domains/blas/her2k.rst", "elements/oneMKL/source/domains/blas/herk.rst", "elements/oneMKL/source/domains/blas/hpmv.rst", "elements/oneMKL/source/domains/blas/hpr.rst", "elements/oneMKL/source/domains/blas/hpr2.rst", "elements/oneMKL/source/domains/blas/iamax.rst", "elements/oneMKL/source/domains/blas/iamin.rst", "elements/oneMKL/source/domains/blas/imatcopy.rst", "elements/oneMKL/source/domains/blas/imatcopy_batch.rst", "elements/oneMKL/source/domains/blas/nrm2.rst", "elements/oneMKL/source/domains/blas/omatadd.rst", "elements/oneMKL/source/domains/blas/omatadd_batch.rst", "elements/oneMKL/source/domains/blas/omatcopy.rst", "elements/oneMKL/source/domains/blas/omatcopy2.rst", "elements/oneMKL/source/domains/blas/omatcopy_batch.rst", "elements/oneMKL/source/domains/blas/rot.rst", "elements/oneMKL/source/domains/blas/rotg.rst", "elements/oneMKL/source/domains/blas/rotm.rst", "elements/oneMKL/source/domains/blas/rotmg.rst", "elements/oneMKL/source/domains/blas/sbmv.rst", "elements/oneMKL/source/domains/blas/scal.rst", "elements/oneMKL/source/domains/blas/sdsdot.rst", "elements/oneMKL/source/domains/blas/spmv.rst", "elements/oneMKL/source/domains/blas/spr.rst", "elements/oneMKL/source/domains/blas/spr2.rst", "elements/oneMKL/source/domains/blas/swap.rst", "elements/oneMKL/source/domains/blas/symm.rst", "elements/oneMKL/source/domains/blas/symv.rst", "elements/oneMKL/source/domains/blas/syr.rst", "elements/oneMKL/source/domains/blas/syr2.rst", "elements/oneMKL/source/domains/blas/syr2k.rst", "elements/oneMKL/source/domains/blas/syrk.rst", "elements/oneMKL/source/domains/blas/syrk_batch.rst", "elements/oneMKL/source/domains/blas/tbmv.rst", "elements/oneMKL/source/domains/blas/tbsv.rst", "elements/oneMKL/source/domains/blas/tpmv.rst", "elements/oneMKL/source/domains/blas/tpsv.rst", "elements/oneMKL/source/domains/blas/trmm.rst", "elements/oneMKL/source/domains/blas/trmv.rst", "elements/oneMKL/source/domains/blas/trsm.rst", "elements/oneMKL/source/domains/blas/trsm_batch.rst", "elements/oneMKL/source/domains/blas/trsv.rst", "elements/oneMKL/source/domains/dft/compute_backward.rst", "elements/oneMKL/source/domains/dft/compute_forward.rst", "elements/oneMKL/source/domains/dft/config_params/data_layouts.rst", "elements/oneMKL/source/domains/dft/config_params/storage_formats.rst", "elements/oneMKL/source/domains/dft/config_params/workspace_placement.rst", "elements/oneMKL/source/domains/dft/descriptor.rst", "elements/oneMKL/source/domains/dft/dft.rst", "elements/oneMKL/source/domains/dft/enums_and_config_params.rst", "elements/oneMKL/source/domains/domains.rst", "elements/oneMKL/source/domains/lapack/gebrd.rst", "elements/oneMKL/source/domains/lapack/gebrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/geqrf.rst", "elements/oneMKL/source/domains/lapack/geqrf_batch.rst", "elements/oneMKL/source/domains/lapack/geqrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/geqrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/gerqf.rst", "elements/oneMKL/source/domains/lapack/gerqf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/gesvd.rst", "elements/oneMKL/source/domains/lapack/gesvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrf.rst", "elements/oneMKL/source/domains/lapack/getrf_batch.rst", "elements/oneMKL/source/domains/lapack/getrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getri.rst", "elements/oneMKL/source/domains/lapack/getri_batch.rst", "elements/oneMKL/source/domains/lapack/getri_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getri_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrs.rst", "elements/oneMKL/source/domains/lapack/getrs_batch.rst", "elements/oneMKL/source/domains/lapack/getrs_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/getrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/heevd.rst", "elements/oneMKL/source/domains/lapack/heevd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hegvd.rst", "elements/oneMKL/source/domains/lapack/hegvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hetrd.rst", "elements/oneMKL/source/domains/lapack/hetrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/hetrf.rst", "elements/oneMKL/source/domains/lapack/hetrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/lapack.rst", "elements/oneMKL/source/domains/lapack/orgbr.rst", "elements/oneMKL/source/domains/lapack/orgbr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgqr.rst", "elements/oneMKL/source/domains/lapack/orgqr_batch.rst", "elements/oneMKL/source/domains/lapack/orgqr_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/orgtr.rst", "elements/oneMKL/source/domains/lapack/orgtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormqr.rst", "elements/oneMKL/source/domains/lapack/ormqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormrq.rst", "elements/oneMKL/source/domains/lapack/ormrq_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ormtr.rst", "elements/oneMKL/source/domains/lapack/ormtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrf.rst", "elements/oneMKL/source/domains/lapack/potrf_batch.rst", "elements/oneMKL/source/domains/lapack/potrf_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potri.rst", "elements/oneMKL/source/domains/lapack/potri_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrs.rst", "elements/oneMKL/source/domains/lapack/potrs_batch.rst", "elements/oneMKL/source/domains/lapack/potrs_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/potrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/syevd.rst", "elements/oneMKL/source/domains/lapack/syevd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sygvd.rst", "elements/oneMKL/source/domains/lapack/sygvd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sytrd.rst", "elements/oneMKL/source/domains/lapack/sytrd_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/sytrf.rst", "elements/oneMKL/source/domains/lapack/sytrf_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/trtrs.rst", "elements/oneMKL/source/domains/lapack/trtrs_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungbr.rst", "elements/oneMKL/source/domains/lapack/ungbr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungqr.rst", "elements/oneMKL/source/domains/lapack/ungqr_batch.rst", "elements/oneMKL/source/domains/lapack/ungqr_batch_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/ungtr.rst", "elements/oneMKL/source/domains/lapack/ungtr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmqr.rst", "elements/oneMKL/source/domains/lapack/unmqr_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmrq.rst", "elements/oneMKL/source/domains/lapack/unmrq_scratchpad_size.rst", "elements/oneMKL/source/domains/lapack/unmtr.rst", "elements/oneMKL/source/domains/lapack/unmtr_scratchpad_size.rst", "elements/oneMKL/source/domains/matrix-storage.rst", "elements/oneMKL/source/domains/rng/bibliography.rst", "elements/oneMKL/source/domains/rng/device_api/device-distributions.rst", "elements/oneMKL/source/domains/rng/device_api/device-distributions-template-parameter-method.rst", "elements/oneMKL/source/domains/rng/device_api/device-engines.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-bernoulli.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-beta.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-bits.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-exponential.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-gamma.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-gaussian.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-generate-routines.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-lognormal.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg31m1.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mcg59.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-mrg32k3a.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-philox4x32x10.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-poisson.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-skip-ahead.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-bits.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-continuous.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-uniform-discrete.rst", "elements/oneMKL/source/domains/rng/device_api/device-rng-usage-model.rst", "elements/oneMKL/source/domains/rng/device_api/device-routines.rst", "elements/oneMKL/source/domains/rng/device_api/device-service-routines.rst", "elements/oneMKL/source/domains/rng/host_api/distributions.rst", "elements/oneMKL/source/domains/rng/host_api/distributions-template-parameter-mkl-rng-method-values.rst", "elements/oneMKL/source/domains/rng/host_api/engines-basic-random-number-generators.rst", "elements/oneMKL/source/domains/rng/host_api/generate-routine.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-ars5.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bernoulli.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-beta.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-binomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-bits.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-cauchy.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-chi_square.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-default_engine.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-exponential.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gamma.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gaussian_mv.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-generate.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-geometric.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-gumbel.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-hypergeometric.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-laplace.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-leapfrog.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-lognormal.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg31m1.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mcg59.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mrg32k3a.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt19937.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-mt2203.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-multinomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-negbinomial.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-niederreiter.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-nondeterministic.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-philox4x32x10.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-poisson_v.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-r250.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-rayleigh.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sfmt19937.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-skip_ahead.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-sobol.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-continuous.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform-discrete.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-uniform_bits.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-weibull.rst", "elements/oneMKL/source/domains/rng/host_api/mkl-rng-wichmann_hill.rst", "elements/oneMKL/source/domains/rng/host_api/onemkl-rng-usage-model.rst", "elements/oneMKL/source/domains/rng/host_api/rng-host-routines.rst", "elements/oneMKL/source/domains/rng/host_api/service-routines.rst", "elements/oneMKL/source/domains/rng/onemkl-rng-overview.rst", "elements/oneMKL/source/domains/spblas/data_types/data_handles.rst", "elements/oneMKL/source/domains/spblas/data_types/format-descriptions.rst", "elements/oneMKL/source/domains/spblas/data_types/init_coo_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/init_csr_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/init_dense_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/init_dense_vector.rst", "elements/oneMKL/source/domains/spblas/data_types/release_dense_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/release_dense_vector.rst", "elements/oneMKL/source/domains/spblas/data_types/release_sparse_matrix.rst", "elements/oneMKL/source/domains/spblas/data_types/set_coo_matrix_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_csr_matrix_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_dense_matrix_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_dense_vector_data.rst", "elements/oneMKL/source/domains/spblas/data_types/set_matrix_property.rst", "elements/oneMKL/source/domains/spblas/matrix_view.rst", "elements/oneMKL/source/domains/spblas/operations/spmm.rst", "elements/oneMKL/source/domains/spblas/operations/spmv.rst", "elements/oneMKL/source/domains/spblas/operations/spsv.rst", "elements/oneMKL/source/domains/spblas/spblas.rst", "elements/oneMKL/source/domains/spblas/supported-types.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_moment_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_central_sum_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_dataset.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_kurtosis_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_make_dataset.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_max.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_min.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_min_max.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_overview.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_moment.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_raw_sum.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_routines.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_service_routines.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_skewness_user_mean.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_usage_model.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_variation.rst", "elements/oneMKL/source/domains/stats/onemkl_stats_variation_user_mean.rst", "elements/oneMKL/source/domains/value_or_pointer.rst", "elements/oneMKL/source/domains/vm/abs.rst", "elements/oneMKL/source/domains/vm/acos.rst", "elements/oneMKL/source/domains/vm/acosh.rst", "elements/oneMKL/source/domains/vm/acospi.rst", "elements/oneMKL/source/domains/vm/add.rst", "elements/oneMKL/source/domains/vm/arg.rst", "elements/oneMKL/source/domains/vm/asin.rst", "elements/oneMKL/source/domains/vm/asinh.rst", "elements/oneMKL/source/domains/vm/asinpi.rst", "elements/oneMKL/source/domains/vm/atan.rst", "elements/oneMKL/source/domains/vm/atan2.rst", "elements/oneMKL/source/domains/vm/atan2pi.rst", "elements/oneMKL/source/domains/vm/atanh.rst", "elements/oneMKL/source/domains/vm/atanpi.rst", "elements/oneMKL/source/domains/vm/bibliography.rst", "elements/oneMKL/source/domains/vm/cbrt.rst", "elements/oneMKL/source/domains/vm/cdfnorm.rst", "elements/oneMKL/source/domains/vm/cdfnorminv.rst", "elements/oneMKL/source/domains/vm/ceil.rst", "elements/oneMKL/source/domains/vm/cis.rst", "elements/oneMKL/source/domains/vm/clear_status.rst", "elements/oneMKL/source/domains/vm/conj.rst", "elements/oneMKL/source/domains/vm/copysign.rst", "elements/oneMKL/source/domains/vm/cos.rst", "elements/oneMKL/source/domains/vm/cosd.rst", "elements/oneMKL/source/domains/vm/cosh.rst", "elements/oneMKL/source/domains/vm/cospi.rst", "elements/oneMKL/source/domains/vm/create_error_handler.rst", "elements/oneMKL/source/domains/vm/div.rst", "elements/oneMKL/source/domains/vm/erf.rst", "elements/oneMKL/source/domains/vm/erfc.rst", "elements/oneMKL/source/domains/vm/erfcinv.rst", "elements/oneMKL/source/domains/vm/erfinv.rst", "elements/oneMKL/source/domains/vm/exp.rst", "elements/oneMKL/source/domains/vm/exp10.rst", "elements/oneMKL/source/domains/vm/exp2.rst", "elements/oneMKL/source/domains/vm/expint1.rst", "elements/oneMKL/source/domains/vm/expm1.rst", "elements/oneMKL/source/domains/vm/fdim.rst", "elements/oneMKL/source/domains/vm/floor.rst", "elements/oneMKL/source/domains/vm/fmax.rst", "elements/oneMKL/source/domains/vm/fmin.rst", "elements/oneMKL/source/domains/vm/fmod.rst", "elements/oneMKL/source/domains/vm/frac.rst", "elements/oneMKL/source/domains/vm/get_mode.rst", "elements/oneMKL/source/domains/vm/get_status.rst", "elements/oneMKL/source/domains/vm/hypot.rst", "elements/oneMKL/source/domains/vm/inv.rst", "elements/oneMKL/source/domains/vm/invcbrt.rst", "elements/oneMKL/source/domains/vm/invsqrt.rst", "elements/oneMKL/source/domains/vm/lgamma.rst", "elements/oneMKL/source/domains/vm/linearfrac.rst", "elements/oneMKL/source/domains/vm/ln.rst", "elements/oneMKL/source/domains/vm/log10.rst", "elements/oneMKL/source/domains/vm/log1p.rst", "elements/oneMKL/source/domains/vm/log2.rst", "elements/oneMKL/source/domains/vm/logb.rst", "elements/oneMKL/source/domains/vm/maxmag.rst", "elements/oneMKL/source/domains/vm/minmag.rst", "elements/oneMKL/source/domains/vm/modf.rst", "elements/oneMKL/source/domains/vm/mul.rst", "elements/oneMKL/source/domains/vm/mulbyconj.rst", "elements/oneMKL/source/domains/vm/nearbyint.rst", "elements/oneMKL/source/domains/vm/nextafter.rst", "elements/oneMKL/source/domains/vm/pow.rst", "elements/oneMKL/source/domains/vm/pow2o3.rst", "elements/oneMKL/source/domains/vm/pow3o2.rst", "elements/oneMKL/source/domains/vm/powr.rst", "elements/oneMKL/source/domains/vm/powx.rst", "elements/oneMKL/source/domains/vm/remainder.rst", "elements/oneMKL/source/domains/vm/rint.rst", "elements/oneMKL/source/domains/vm/round.rst", "elements/oneMKL/source/domains/vm/set_status.rst", "elements/oneMKL/source/domains/vm/setmode.rst", "elements/oneMKL/source/domains/vm/sin.rst", "elements/oneMKL/source/domains/vm/sincos.rst", "elements/oneMKL/source/domains/vm/sind.rst", "elements/oneMKL/source/domains/vm/sinh.rst", "elements/oneMKL/source/domains/vm/sinpi.rst", "elements/oneMKL/source/domains/vm/special-value-notations.rst", "elements/oneMKL/source/domains/vm/sqr.rst", "elements/oneMKL/source/domains/vm/sqrt.rst", "elements/oneMKL/source/domains/vm/sub.rst", "elements/oneMKL/source/domains/vm/tan.rst", "elements/oneMKL/source/domains/vm/tand.rst", "elements/oneMKL/source/domains/vm/tanh.rst", "elements/oneMKL/source/domains/vm/tanpi.rst", "elements/oneMKL/source/domains/vm/tgamma.rst", "elements/oneMKL/source/domains/vm/trunc.rst", "elements/oneMKL/source/domains/vm/vm.rst", "elements/oneMKL/source/domains/vm/vm-exceptions.rst", "elements/oneMKL/source/domains/vm/vm-mathematical-functions.rst", "elements/oneMKL/source/domains/vm/vm-service-functions.rst", "elements/oneMKL/source/index.rst", "elements/oneTBB/source/algorithms.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_nd_range_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range2d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range3d_cls.rst", "elements/oneTBB/source/algorithms/blocked_ranges/blocked_range_cls.rst", "elements/oneTBB/source/algorithms/functions/collaborative_call_once_func.rst", "elements/oneTBB/source/algorithms/functions/collaborative_once_flag_cls.rst", "elements/oneTBB/source/algorithms/functions/feeder.rst", "elements/oneTBB/source/algorithms/functions/parallel_deterministic_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_each_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_for_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_invoke_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/filter_mode_enum.rst", "elements/oneTBB/source/algorithms/functions/parallel_pipeline_func/flow_control_cls.rst", "elements/oneTBB/source/algorithms/functions/parallel_reduce_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_scan_func.rst", "elements/oneTBB/source/algorithms/functions/parallel_sort_func.rst", "elements/oneTBB/source/algorithms/functions/pre_scan_tag_and_final_scan_tag_clses.rst", "elements/oneTBB/source/algorithms/partitioners/affinity_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/auto_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/simple_partitioner.rst", "elements/oneTBB/source/algorithms/partitioners/static_partitioner.rst", "elements/oneTBB/source/algorithms/split_tags/proportional_split_cls.rst", "elements/oneTBB/source/algorithms/split_tags/split_cls.rst", "elements/oneTBB/source/configuration.rst", "elements/oneTBB/source/configuration/enabling_debugging_features.rst", "elements/oneTBB/source/configuration/feature_macros.rst", "elements/oneTBB/source/configuration/namespaces.rst", "elements/oneTBB/source/configuration/version_information.rst", "elements/oneTBB/source/containers.rst", "elements/oneTBB/source/containers/auxiliary/node_handles_cls.rst", "elements/oneTBB/source/containers/auxiliary/tbb_hash_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_bounded_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/accessors.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/modifiers.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_hash_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls.rst", "elements/oneTBB/source/containers/concurrent_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_map_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multimap_cls/value_compare_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_priority_queue_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_queue_cls.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/safe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_queue_cls/unsafe_member_functions.rst", "elements/oneTBB/source/containers/concurrent_set_cls.rst", "elements/oneTBB/source/containers/concurrent_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_map_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multimap_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_multiset_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/bucket_interface.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/construction_destruction_copying.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/hash_policy.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/lookup.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/observers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/safe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_unordered_set_cls/unsafe_modifiers.rst", "elements/oneTBB/source/containers/concurrent_vector_cls.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/concurrent_growth.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/construct_destroy_copy.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/deduction_guides.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/element_access.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/iterators.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_binary_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_lexicographical_comparisons.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/non_member_swap.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/parallel_iteration.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/size_and_capacity.rst", "elements/oneTBB/source/containers/concurrent_vector_cls/unsafe_operations.rst", "elements/oneTBB/source/deprecated/task_arena_attach_tag.rst", "elements/oneTBB/source/flow_graph.rst", "elements/oneTBB/source/flow_graph/async_node_cls.rst", "elements/oneTBB/source/flow_graph/broadcast_node_cls.rst", "elements/oneTBB/source/flow_graph/buffer_node_cls.rst", "elements/oneTBB/source/flow_graph/composite_node_cls.rst", "elements/oneTBB/source/flow_graph/continue_msg_cls.rst", "elements/oneTBB/source/flow_graph/continue_node_cls.rst", "elements/oneTBB/source/flow_graph/copy_body_func.rst", "elements/oneTBB/source/flow_graph/dependency_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/forwarding_and_buffering.rst", "elements/oneTBB/source/flow_graph/func_node_cls.rst", "elements/oneTBB/source/flow_graph/functional_node_policies.rst", "elements/oneTBB/source/flow_graph/graph_cls.rst", "elements/oneTBB/source/flow_graph/graph_node_cls.rst", "elements/oneTBB/source/flow_graph/indexer_node_cls.rst", "elements/oneTBB/source/flow_graph/input_node_cls.rst", "elements/oneTBB/source/flow_graph/input_port_func.rst", "elements/oneTBB/source/flow_graph/join_node_cls.rst", "elements/oneTBB/source/flow_graph/join_node_policies.rst", "elements/oneTBB/source/flow_graph/limiter_node_cls.rst", "elements/oneTBB/source/flow_graph/make_edge_func.rst", "elements/oneTBB/source/flow_graph/message_flow_graph_example.rst", "elements/oneTBB/source/flow_graph/multifunc_node_cls.rst", "elements/oneTBB/source/flow_graph/node_priorities.rst", "elements/oneTBB/source/flow_graph/output_port_func.rst", "elements/oneTBB/source/flow_graph/overwrite_node_cls.rst", "elements/oneTBB/source/flow_graph/predefined_concurrency_limits.rst", "elements/oneTBB/source/flow_graph/priority_queue_node_cls.rst", "elements/oneTBB/source/flow_graph/queue_node_cls.rst", "elements/oneTBB/source/flow_graph/receiver.rst", "elements/oneTBB/source/flow_graph/remove_edge_func.rst", "elements/oneTBB/source/flow_graph/reset_flags_enum.rst", "elements/oneTBB/source/flow_graph/sender.rst", "elements/oneTBB/source/flow_graph/sequencer_node_cls.rst", "elements/oneTBB/source/flow_graph/split_node_cls.rst", "elements/oneTBB/source/flow_graph/tagged_msg_cls.rst", "elements/oneTBB/source/flow_graph/write_once_node_cls.rst", "elements/oneTBB/source/identifiers.rst", "elements/oneTBB/source/info_namespace.rst", "elements/oneTBB/source/intro.rst", "elements/oneTBB/source/memory_allocation.rst", "elements/oneTBB/source/memory_allocation/c_interface_to_scalable_allocator.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/cache_aligned_resource_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_allocator_cls.rst", "elements/oneTBB/source/memory_allocation/scalable_memory_resource_func.rst", "elements/oneTBB/source/memory_allocation/tbb_allocator_cls.rst", "elements/oneTBB/source/mutual_exclusion.rst", "elements/oneTBB/source/mutual_exclusion/mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/null_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/queuing_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/speculative_spin_rw_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_mutex_cls.rst", "elements/oneTBB/source/mutual_exclusion/spin_rw_mutex_cls.rst", "elements/oneTBB/source/named_requirements.rst", "elements/oneTBB/source/named_requirements/algorithms/blocked_range_val.rst", "elements/oneTBB/source/named_requirements/algorithms/container_based_sequence.rst", "elements/oneTBB/source/named_requirements/algorithms/filter_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_each_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_for_index.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_func.rst", "elements/oneTBB/source/named_requirements/algorithms/par_reduce_reduction.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_body.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_combine.rst", "elements/oneTBB/source/named_requirements/algorithms/par_scan_func.rst", "elements/oneTBB/source/named_requirements/algorithms/range.rst", "elements/oneTBB/source/named_requirements/algorithms/splittable.rst", "elements/oneTBB/source/named_requirements/containers/container_range.rst", "elements/oneTBB/source/named_requirements/containers/hash_compare.rst", "elements/oneTBB/source/named_requirements/flow_graph/async_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/continue_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/function_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/gateway_type.rst", "elements/oneTBB/source/named_requirements/flow_graph/input_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/join_node_func_obj.rst", "elements/oneTBB/source/named_requirements/flow_graph/multifunction_node_body.rst", "elements/oneTBB/source/named_requirements/flow_graph/sequencer.rst", "elements/oneTBB/source/named_requirements/mutexes/mutex.rst", "elements/oneTBB/source/named_requirements/mutexes/rw_mutex.rst", "elements/oneTBB/source/named_requirements/task_scheduler/suspend_func.rst", "elements/oneTBB/source/nested-aux-interfaces.rst", "elements/oneTBB/source/nested-depr-interfaces.rst", "elements/oneTBB/source/nested-gen-info.rst", "elements/oneTBB/source/nested-index.rst", "elements/oneTBB/source/nested-interfaces.rst", "elements/oneTBB/source/notation.rst", "elements/oneTBB/source/task_scheduler.rst", "elements/oneTBB/source/task_scheduler/attach_tag_type.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/global_control_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/resumable_tasks.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_group_context_cls.rst", "elements/oneTBB/source/task_scheduler/scheduling_controls/task_scheduler_handle_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_arena_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/task_scheduler_observer_cls.rst", "elements/oneTBB/source/task_scheduler/task_arena/this_task_arena_ns.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_cls.rst", "elements/oneTBB/source/task_scheduler/task_group/task_group_status_enum.rst", "elements/oneTBB/source/task_scheduler/task_group/task_handle.rst", "elements/oneTBB/source/thread_local_storage.rst", "elements/oneTBB/source/thread_local_storage/combinable_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/combining.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/construct_destroy_copy.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/iteration.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/safe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/size_and_capacity.rst", "elements/oneTBB/source/thread_local_storage/enumerable_thread_specific_cls/unsafe_modifiers.rst", "elements/oneTBB/source/thread_local_storage/flattened2d_cls.rst", "elements/oneTBB/source/thread_safety.rst", "elements/oneTBB/source/timing.rst", "elements/oneTBB/source/timing/tick_count_cls.rst", "index.rst", "introduction.rst", "notices.rst"], "titles": ["Software Architecture", "&lt;no title&gt;", "Definitions", "oneCCL", "Introduction", "Namespaces", "Programming Model", "Collective Operations", "Datatypes", "Error handling", "Generic Workflow", "oneCCL Concepts", "Operation Attributes", "Operation Progress Tracking", "Communication Operations", "Reductions", "Current Version of this oneCCL Specification", "Clustering", "K-Means", "K-Means initialization", "Decomposition", "Principal Components Analysis (PCA)", "Algorithms", "Nearest Neighbors (kNN)", "k-Nearest Neighbors Classification (k-NN)", "Appendix", "k-d Tree", "Bibliography", "Common type definitions", "Error handling", "Header files", "Common Interface", "Current Version of this oneDAL Specification", "Column accessor", "Row accessor", "Accessors", "Array", "CSV data source", "Data Sources", "Data management", "Homogeneous table", "Tables", "Glossary", "oneDAL", "Introduction", "Mathematical Notations", "Computational modes", "Descriptors", "End-to-end example", "Programming model", "Operations", "Supported operations", "Conventions", "Bfloat16", "Data types", "Int8", "Data model", "Memory Formats", "Memory", "Memory Descriptors and Objects", "Execution Model", "Data Model", "Common Definitions", "Graph extension", "Abs", "AbsBackward", "Add", "AvgPool", "AvgPoolBackward", "BatchNormForwardTraining", "BatchNormInference", "BatchNormTrainingBackward", "BiasAdd", "BiasAddBackward", "Clamp", "ClampBackward", "Concat", "ConvTranspose", "ConvTransposeBackwardData", "ConvTransposeBackwardWeights", "Convolution", "ConvolutionBackwardData", "ConvolutionBackwardWeights", "Dequantize", "Divide", "DynamicDequantize", "DynamicQuantize", "Elu", "EluBackward", "End", "Exp", "GELU", "GELUBackward", "HardSigmoid", "HardSigmoidBackward", "HardSwish", "HardSwishBackward", "Interpolate", "InterpolateBackward", "LayerNorm", "LayerNormBackward", "LeakyReLU", "Log", "LogSoftmax", "LogSoftmaxBackward", "MatMul", "MaxPool", "MaxPoolBackward", "Maximum", "Minimum", "Mish", "MishBackward", "Multiply", "PReLU", "PReLUBackward", "Pow", "Quantize", "ReLU", "ReLUBackward", "Reciprocal", "ReduceL1", "ReduceL2", "ReduceMax", "ReduceMean", "ReduceMin", "ReduceProd", "ReduceSum", "Reorder", "Round", "Select", "Sigmoid", "SigmoidBackward", "SoftPlus", "SoftPlusBackward", "SoftMax", "SoftMaxBackward", "Sqrt", "SqrtBackward", "Square", "SquaredDifference", "StaticReshape", "StaticTranspose", "Subtract", "Tanh", "TanhBackward", "TypeCast", "Wildcard", "Operation Set", "Programming Model", "oneDNN", "Introduction", "Attributes", "Post-ops", "Batch Normalization", "Binary", "Concat", "Convolution and Deconvolution", "Elementwise", "Common Definitions", "Primitives", "Inner Product", "Layer normalization", "Local Response Normalization", "Matrix Multiplication", "Pooling", "Prelu", "Reduction", "Reorder", "Resampling", "RNN", "Shuffle", "Softmax", "Sum", "General Information", "oneDPL", "Parallel API", "Parallel Algorithms", "Buffer Wrappers", "Execution Policies", "Iterators", "Parallel Range Algorithms", "SYCL Kernels API", "oneMKL Appendix", "oneMKL Architecture", "asum", "axpby", "axpy", "axpy_batch", "BLAS Routines", "BLAS Level 1 Routines", "BLAS Level 2 Routines", "BLAS Level 3 Routines", "BLAS-like Extensions", "copy", "copy_batch", "dgmm_batch", "dot", "dotc", "dotu", "gbmv", "gemm", "gemm_batch", "gemm_bias", "gemmt", "gemv", "gemv_batch", "ger", "gerc", "geru", "hbmv", "hemm", "hemv", "her", "her2", "her2k", "herk", "hpmv", "hpr", "hpr2", "iamax", "iamin", "imatcopy", "imatcopy_batch", "nrm2", "omatadd", "omatadd_batch", "omatcopy", "omatcopy2", "omatcopy_batch", "rot", "rotg", "rotm", "rotmg", "sbmv", "scal", "sdsdot", "spmv", "spr", "spr2", "swap", "symm", "symv", "syr", "syr2", "syr2k", "syrk", "syrk_batch", "tbmv", "tbsv", "tpmv", "tpsv", "trmm", "trmv", "trsm", "trsm_batch", "trsv", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_backward</span></code> function templates", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">compute_forward</span></code> function templates", "Configuration of data layouts", "Data storage", "Workspace placement", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">descriptor</span></code> class template", "Discrete Fourier Transform Functions", "DFT-related scoped enumeration types", "oneMKL Domains", "gebrd", "gebrd_scratchpad_size", "geqrf", "geqrf_batch", "geqrf_batch_scratchpad_size", "geqrf_scratchpad_size", "gerqf", "gerqf_scratchpad_size", "gesvd", "gesvd_scratchpad_size", "getrf", "getrf_batch", "getrf_batch_scratchpad_size", "getrf_scratchpad_size", "getri", "getri_batch", "getri_batch_scratchpad_size", "getri_scratchpad_size", "getrs", "getrs_batch", "getrs_batch_scratchpad_size", "getrs_scratchpad_size", "heevd", "heevd_scratchpad_size", "hegvd", "hegvd_scratchpad_size", "hetrd", "hetrd_scratchpad_size", "hetrf", "hetrf_scratchpad_size", "LAPACK Routines", "orgbr", "orgbr_scratchpad_size", "orgqr", "orgqr_batch", "orgqr_batch_scratchpad_size", "orgqr_scratchpad_size", "orgtr", "orgtr_scratchpad_size", "ormqr", "ormqr_scratchpad_size", "ormrq", "ormrq_scratchpad_size", "ormtr", "ormtr_scratchpad_size", "potrf", "potrf_batch", "potrf_batch_scratchpad_size", "potrf_scratchpad_size", "potri", "potri_scratchpad_size", "potrs", "potrs_batch", "potrs_batch_scratchpad_size", "potrs_scratchpad_size", "syevd", "syevd_scratchpad_size", "sygvd", "sygvd_scratchpad_size", "sytrd", "sytrd_scratchpad_size", "sytrf", "sytrf_scratchpad_size", "trtrs", "trtrs_scratchpad_size", "ungbr", "ungbr_scratchpad_size", "ungqr", "ungqr_batch", "ungqr_batch_scratchpad_size", "ungqr_scratchpad_size", "ungtr", "ungtr_scratchpad_size", "unmqr", "unmqr_scratchpad_size", "unmrq", "unmrq_scratchpad_size", "unmtr", "unmtr_scratchpad_size", "Matrix Storage", "Bibliography", "Device Distributions", "Distributions Template Parameter Method", "Device Engines (Basic Random Number Generators)", "bernoulli", "beta", "bits", "exponential", "gamma", "gaussian", "generate", "Device Generate Routines", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "philox4x32x10", "poisson", "skip_ahead", "uniform_bits", "uniform (Continuous)", "uniform (Discrete)", "oneMKL RNG Device Usage Model", "Random Number Generators Device Routines", "Device Service Routines", "Host Distributions", "Distributions Template Parameter Method", "Host Engines (Basic Random Number Generators)", "Host Generate Routine", "ars5", "bernoulli", "beta", "binomial", "bits", "cauchy", "chi_square", "default_engine", "exponential", "gamma", "gaussian", "gaussian_mv", "generate", "geometric", "gumbel", "hypergeometric", "laplace", "leapfrog", "lognormal", "mcg31m1", "mcg59", "mrg32k3a", "mt19937", "mt2203", "multinomial", "negative_binomial", "niederreiter", "nondeterministic", "philox4x32x10", "poisson", "poisson_v", "r250", "rayleigh", "sfmt19937", "skip_ahead", "sobol", "uniform (continuous)", "uniform (discrete)", "uniform_bits", "weibull", "wichmann_hill", "oneMKL RNG Host Usage Model", "Random Number Generators Host Routines", "Host Service Routines", "Random Number Generators (RNG)", "Data handles", "Sparse storage formats", "init_coo_matrix", "init_csr_matrix", "init_dense_matrix", "init_dense_vector", "release_dense_matrix", "release_dense_vector", "release_sparse_matrix", "set_coo_matrix_data", "set_csr_matrix_data", "set_dense_matrix_data", "set_dense_vector_data", "set_matrix_property", "Matrix view", "spmm", "spmv", "spsv", "Sparse BLAS", "Supported template types", "central_moment", "central_moment with provided mean", "central_sum", "central_sum with provided mean", "dataset", "kurtosis", "kurtosis with provided mean", "make_dataset", "max", "mean", "min", "min_max", "Summary Statistics", "raw_moment", "raw_sum", "Summary Statistics Routines", "Service Routines", "skewness", "skewness with provided mean", "oneMKL Summary Statistics Usage Model", "variation", "variation with provided mean", "Scalar Arguments in BLAS", "abs", "acos", "acosh", "acospi", "add", "arg", "asin", "asinh", "asinpi", "atan", "atan2", "atan2pi", "atanh", "atanpi", "Bibliography", "cbrt", "cdfnorm", "cdfnorminv", "ceil", "cis", "clear_status", "conj", "copysign", "cos", "cosd", "cosh", "cospi", "create_error_handler", "div", "erf", "erfc", "erfcinv", "erfinv", "exp", "exp10", "exp2", "expint1", "expm1", "fdim", "floor", "fmax", "fmin", "fmod", "frac", "get_mode", "get_status", "hypot", "inv", "invcbrt", "invsqrt", "lgamma", "linearfrac", "ln", "log10", "log1p", "log2", "logb", "maxmag", "minmag", "modf", "mul", "mulbyconj", "nearbyint", "nextafter", "pow", "pow2o3", "pow3o2", "powr", "powx", "remainder", "rint", "round", "set_status", "set_mode", "sin", "sincos", "sind", "sinh", "sinpi", "Special Value Notations", "sqr", "sqrt", "sub", "tan", "tand", "tanh", "tanpi", "tgamma", "trunc", "Vector Math", "Exceptions", "VM Mathematical Functions", "VM Service Functions", "oneMKL", "Algorithms", "blocked_nd_range", "blocked_range2d", "blocked_range3d", "blocked_range", "collaborative_call_once", "collaborative_once_flag", "feeder", "parallel_deterministic_reduce", "parallel_for_each", "parallel_for", "parallel_invoke", "parallel_pipeline", "filter", "filter_mode", "flow_control", "parallel_reduce", "parallel_scan", "parallel_sort", "pre_scan_tag and final_scan_tag", "affinity_partitioner", "auto_partitioner", "simple_partitioner", "static_partitioner", "proportional split", "split", "Configuration", "Enabling Debugging Features", "Feature Macros", "Namespaces", "Version Information", "Containers", "Node handles", "tbb_hash_compare", "concurrent_bounded_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_hash_map", "accessor and const_accessor", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Concurrently safe modifiers", "Non-member binary comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_map", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multimap", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "value_compare", "concurrent_multiset", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_priority_queue", "Construction, destruction, copying", "Deduction guides", "Non-member binary comparisons", "Non-member swap", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_queue", "Construction, destruction, copying", "Deduction guides", "Iterators", "Non-member binary comparisons", "Non-member swap", "Concurrently safe member functions", "Concurrently unsafe member functions", "concurrent_set", "Construction, destruction, copying", "Deduction guides", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_map", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Element access", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multimap", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_multiset", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_unordered_set", "Bucket interface", "Construction, destruction, copying", "Deduction guides", "Hash policy", "Iterators", "Lookup", "Non-member binary comparisons", "Non-member swap", "Observers", "Parallel iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "concurrent_vector", "Concurrent growth", "Construction, destruction, copying", "Deduction guides", "Element access", "Iterators", "Non-member binary comparisons", "Non-member lexicographical comparisons", "Non-member swap", "Parallel iteration", "Size and capacity", "Concurrently unsafe operations", "task_arena::attach", "Flow Graph", "async_node", "broadcast_node", "buffer_node", "composite_node", "continue_msg", "continue_node", "copy_body", "Dependency Flow Graph Example", "Forwarding and Buffering", "function_node", "Function Nodes Policies", "graph", "graph_node", "indexer_node", "input_node", "input_port", "join_node", "join_node Policies", "limiter_node", "make_edge", "Message Flow Graph Example", "multifunction_node", "Nodes Priorities", "output_port", "overwrite_node", "Predefined Concurrency Limits", "priority_queue_node", "queue_node", "receiver", "remove_edge", "reset_flags Enumeration", "sender", "sequencer_node", "split_node", "tagged_msg", "write_once_node", "Identifiers", "info Namespace", "Introduction", "Memory Allocation", "C Interface to Scalable Allocator", "cache_aligned_allocator", "cache_aligned_resource", "scalable_allocator", "scalable_memory_resource", "tbb_allocator", "Mutual Exclusion", "mutex", "null_mutex", "null_rw_mutex", "queuing_mutex", "queuing_rw_mutex", "rw_mutex", "speculative_spin_mutex", "speculative_spin_rw_mutex", "spin_mutex", "spin_rw_mutex", "Named Requirements", "BlockedRangeValue", "ContainerBasedSequence", "FilterBody", "ParallelForBody", "ParallelForEachBody", "ParallelForFunc", "ParallelForIndex", "ParallelReduceBody", "ParallelReduceFunc", "ParallelReduceReduction", "ParallelScanBody", "ParallelScanCombine", "ParallelScanFunc", "Range", "Splittable", "ContainerRange", "HashCompare", "AsyncNodeBody", "ContinueNodeBody", "FunctionNodeBody", "GatewayType", "InputNodeBody", "JoinNodeFunctionObject", "MultifunctionNodeBody", "Sequencer", "Mutex", "ReaderWriterMutex", "SuspendFunc", "oneTBB Auxiliary Interfaces", "oneTBB Deprecated Interfaces", "General Information", "oneTBB", "oneTBB Interfaces", "Notational Conventions", "Task Scheduler", "attach tag type", "global_control", "Resumable tasks", "task_group_context", "task_scheduler_handle", "task_arena", "task_scheduler_observer", "this_task_arena", "task_group", "task_group_status", "task_handle", "Thread Local Storage", "combinable", "enumerable_thread_specific", "Combining", "Construction, destruction, copying", "Iteration", "Concurrently safe modifiers", "Size and capacity", "Concurrently unsafe modifiers", "flattened2d", "Thread Safety", "Timing", "tick_count class", "oneAPI Specification", "Introduction", "Legal Notices and Disclaimers"], "terms": {"dpc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "librari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "4": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "provision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "rev": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "collect": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "commun": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 62, 63, 147, 148, 149, 150, 151, 152, 158, 159, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "analyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "oned": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "daal": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "deep": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "neural": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "network": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "level": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "zero": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "thread": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 868, 869, 870, 871, 872], "build": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "block": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "math": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "kernel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00bd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00bc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u215b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00be": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u215c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u215d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u215e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00b5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u03c9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00aa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00ba": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00b9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00b2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "\u00b3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "intel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "media": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "develop": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "kit": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "provid": [0, 4, 7, 9, 11, 12, 13, 30, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 47, 48, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 156, 158, 159, 161, 162, 163, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 192, 222, 225, 228, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 276, 280, 284, 291, 295, 311, 312, 317, 318, 324, 347, 348, 349, 350, 351, 352, 353, 354, 357, 362, 364, 365, 366, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 409, 410, 411, 412, 413, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 446, 454, 455, 461, 485, 486, 488, 489, 536, 537, 538, 540, 541, 545, 546, 548, 556, 564, 566, 569, 573, 577, 586, 587, 590, 591, 592, 598, 599, 600, 601, 604, 605, 611, 612, 613, 626, 627, 628, 640, 641, 642, 653, 654, 655, 661, 662, 663, 669, 670, 671, 682, 684, 685, 697, 699, 700, 711, 713, 714, 725, 727, 728, 739, 741, 742, 752, 753, 758, 762, 767, 770, 772, 774, 775, 779, 782, 785, 791, 792, 793, 794, 796, 798, 799, 806, 807, 824, 826, 827, 835, 845, 848, 851, 857, 858, 859, 863, 866, 868, 869, 870, 871, 872], "common": [0, 2, 3, 12, 30, 41, 43, 47, 49, 50, 63, 148, 151, 152, 159, 259, 263, 358, 359, 360, 361, 363, 371, 374, 393, 394, 395, 396, 397, 402, 405, 407, 414, 513, 772, 782, 857, 872], "interfac": [0, 11, 35, 38, 39, 42, 43, 44, 47, 63, 183, 188, 258, 262, 264, 295, 363, 554, 568, 586, 682, 697, 711, 725, 753, 775, 790, 791, 792, 828, 836, 842, 846, 849, 871], "across": [0, 1, 7, 39, 44, 46, 149, 158, 161, 163, 183, 264, 391, 557, 558, 559, 573, 579, 758, 824, 857, 859, 860, 870, 871], "rang": [0, 29, 30, 31, 33, 34, 35, 36, 41, 53, 55, 76, 83, 85, 86, 116, 120, 121, 122, 123, 124, 125, 126, 141, 152, 174, 175, 176, 181, 258, 261, 263, 368, 414, 438, 482, 489, 507, 526, 530, 534, 553, 557, 558, 559, 560, 564, 566, 572, 573, 576, 577, 578, 579, 580, 581, 598, 600, 603, 611, 612, 624, 626, 638, 640, 652, 669, 670, 681, 682, 684, 696, 697, 710, 711, 724, 725, 727, 738, 739, 785, 810, 811, 814, 817, 818, 819, 821, 823, 825, 826, 843, 859, 862, 866], "parallel": [0, 1, 42, 43, 151, 173, 174, 261, 264, 345, 372, 415, 561, 565, 566, 567, 568, 570, 572, 573, 577, 578, 579, 598, 611, 626, 640, 669, 682, 697, 711, 725, 739, 752, 769, 775, 785, 791, 806, 807, 824, 826, 843, 845, 848, 850, 851, 858, 859, 868, 870, 871], "acceler": [0, 1, 27, 39, 148, 162, 555, 870, 871], "see": [0, 7, 11, 18, 19, 21, 24, 36, 39, 40, 41, 42, 47, 57, 59, 60, 99, 150, 151, 152, 153, 157, 158, 161, 163, 164, 169, 177, 178, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 263, 293, 296, 297, 310, 311, 326, 330, 331, 349, 351, 352, 354, 355, 357, 362, 364, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 413, 419, 421, 422, 423, 424, 428, 429, 430, 431, 433, 451, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 558, 559, 560, 564, 566, 568, 571, 572, 573, 575, 576, 578, 579, 580, 581, 585, 682, 684, 696, 697, 699, 710, 711, 713, 724, 725, 727, 738, 739, 741, 750, 751, 756, 760, 766, 768, 776, 777, 787, 792, 795, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 829, 835, 836, 837, 838, 846, 847, 850, 851, 854, 871], "figur": [0, 169, 391, 408, 478, 479, 491, 492, 493, 494, 773], "below": [0, 7, 10, 11, 30, 35, 39, 47, 48, 54, 57, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 156, 157, 160, 161, 163, 164, 170, 178, 179, 183, 202, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 291, 308, 309, 324, 342, 346, 370, 421, 422, 432, 461, 467, 482, 507, 513, 534, 554, 564, 566, 572, 573, 583, 586, 682, 684, 696, 697, 699, 710, 711, 713, 724, 725, 727, 738, 741, 750, 760, 761, 763, 771, 773, 793, 810, 845], "programm": [0, 36, 183, 871], "us": [0, 4, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 24, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 69, 75, 80, 81, 83, 84, 85, 86, 88, 89, 97, 98, 99, 100, 108, 109, 112, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 137, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 190, 192, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 216, 221, 222, 224, 225, 226, 227, 228, 240, 246, 247, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 295, 296, 298, 299, 302, 303, 304, 306, 308, 309, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364, 365, 366, 368, 370, 371, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 403, 404, 406, 409, 410, 411, 412, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 467, 478, 479, 485, 486, 488, 491, 492, 493, 494, 513, 526, 532, 536, 537, 538, 540, 545, 546, 548, 552, 555, 557, 558, 559, 560, 562, 563, 564, 568, 569, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 588, 589, 590, 591, 592, 596, 598, 599, 600, 601, 605, 611, 612, 613, 620, 622, 625, 626, 627, 628, 634, 636, 639, 640, 641, 642, 648, 650, 653, 654, 655, 658, 661, 662, 663, 667, 669, 670, 671, 677, 679, 682, 683, 684, 685, 694, 697, 698, 699, 700, 708, 711, 712, 713, 714, 722, 725, 726, 727, 728, 736, 739, 740, 741, 742, 751, 752, 753, 756, 757, 758, 760, 761, 762, 763, 765, 766, 767, 769, 770, 771, 773, 774, 775, 778, 785, 786, 787, 788, 789, 790, 791, 793, 794, 796, 797, 798, 800, 801, 802, 805, 806, 808, 810, 812, 817, 824, 825, 826, 827, 833, 836, 844, 845, 846, 847, 848, 849, 851, 852, 853, 856, 858, 859, 860, 861, 866, 869, 871, 872], "sycl": [0, 10, 11, 27, 33, 34, 36, 38, 40, 42, 48, 50, 51, 59, 60, 149, 158, 174, 175, 177, 178, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 355, 358, 359, 360, 361, 367, 368, 374, 386, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "both": [0, 4, 36, 42, 44, 47, 53, 56, 57, 59, 61, 62, 66, 68, 69, 71, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 100, 108, 109, 112, 116, 142, 148, 151, 153, 157, 161, 171, 176, 180, 183, 214, 222, 225, 227, 228, 244, 258, 259, 271, 273, 368, 416, 432, 495, 554, 560, 564, 573, 756, 760, 773, 793, 853], "The": [0, 4, 5, 7, 8, 11, 12, 13, 18, 19, 21, 22, 24, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 596, 598, 599, 600, 601, 603, 608, 609, 610, 611, 612, 613, 615, 622, 623, 624, 625, 626, 627, 628, 629, 636, 637, 638, 639, 640, 641, 642, 643, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 667, 669, 670, 671, 672, 679, 680, 681, 682, 684, 685, 688, 694, 695, 696, 697, 699, 700, 702, 708, 709, 710, 711, 713, 714, 716, 722, 723, 724, 725, 727, 728, 730, 736, 737, 738, 739, 741, 742, 743, 744, 750, 751, 752, 753, 754, 755, 756, 758, 760, 761, 762, 763, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 818, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 856, 858, 859, 860, 861, 862, 864, 865, 866, 868, 869, 871, 872], "capabl": [0, 4, 49, 61, 62, 178, 785, 791], "ar": [0, 7, 9, 11, 18, 21, 24, 29, 30, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 77, 78, 79, 80, 81, 82, 99, 100, 105, 106, 107, 120, 121, 122, 123, 124, 125, 126, 129, 139, 140, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 236, 238, 240, 241, 243, 244, 245, 246, 248, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 271, 273, 274, 275, 276, 283, 284, 287, 288, 289, 290, 291, 293, 295, 296, 311, 312, 316, 317, 318, 320, 321, 322, 323, 324, 326, 328, 329, 330, 333, 344, 346, 347, 350, 352, 354, 358, 361, 365, 366, 368, 370, 371, 372, 374, 376, 378, 393, 397, 400, 402, 405, 407, 409, 410, 411, 414, 416, 418, 420, 421, 422, 428, 429, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 466, 468, 471, 472, 478, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 507, 512, 513, 516, 522, 526, 529, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 544, 545, 546, 548, 549, 551, 553, 554, 555, 557, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 575, 579, 584, 585, 588, 589, 590, 592, 596, 598, 599, 601, 606, 608, 611, 613, 617, 621, 622, 624, 625, 626, 628, 630, 631, 635, 636, 638, 639, 640, 642, 644, 645, 649, 650, 652, 653, 655, 661, 663, 669, 671, 673, 674, 678, 679, 681, 682, 685, 690, 693, 694, 696, 697, 698, 700, 703, 704, 707, 708, 710, 711, 712, 714, 717, 718, 721, 722, 724, 725, 728, 732, 735, 736, 738, 739, 742, 745, 748, 752, 753, 754, 755, 756, 760, 761, 762, 763, 764, 766, 767, 769, 770, 771, 773, 774, 775, 777, 780, 783, 785, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 798, 806, 807, 810, 811, 815, 817, 824, 836, 837, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 860, 861, 862, 866, 867, 869, 871, 872], "determin": [0, 24, 62, 148, 156, 176, 179, 210, 240, 251, 260, 261, 262, 266, 269, 270, 272, 274, 277, 278, 279, 280, 281, 282, 285, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 342, 343, 390, 557, 558, 559, 560, 574, 682, 697, 711, 725, 769, 771, 779, 785, 787, 815, 853], "which": [0, 7, 8, 11, 12, 24, 28, 29, 30, 32, 33, 34, 36, 39, 40, 41, 42, 44, 53, 55, 57, 59, 60, 61, 62, 67, 76, 80, 83, 85, 86, 99, 100, 101, 103, 104, 116, 120, 121, 122, 123, 124, 125, 126, 134, 135, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 189, 190, 191, 200, 222, 225, 228, 256, 257, 258, 261, 262, 265, 268, 287, 289, 298, 299, 311, 320, 322, 332, 333, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 412, 413, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 485, 486, 488, 489, 536, 537, 538, 540, 545, 546, 548, 553, 557, 558, 559, 560, 561, 563, 570, 573, 574, 578, 580, 586, 590, 598, 599, 600, 603, 605, 611, 612, 622, 624, 626, 627, 630, 638, 640, 641, 644, 652, 653, 661, 669, 670, 679, 682, 683, 684, 687, 694, 697, 698, 699, 701, 703, 710, 711, 712, 713, 715, 717, 724, 725, 726, 727, 729, 736, 739, 753, 756, 761, 763, 766, 767, 769, 771, 773, 775, 783, 794, 795, 796, 798, 810, 811, 815, 824, 825, 827, 828, 829, 830, 832, 833, 834, 835, 836, 845, 850, 851, 852, 853, 857, 862, 868, 869], "system": [0, 11, 30, 49, 60, 148, 150, 151, 170, 183, 190, 248, 250, 254, 255, 264, 275, 276, 283, 284, 293, 295, 316, 317, 326, 328, 358, 393, 397, 436, 437, 583, 584, 790, 793, 870, 871], "abstract": [0, 11, 29, 42, 44, 47, 50, 57, 58, 60, 148, 150, 159, 183, 792], "devic": [0, 1, 2, 3, 4, 7, 10, 27, 29, 39, 42, 44, 46, 48, 60, 148, 149, 150, 174, 175, 181, 258, 259, 261, 262, 266, 268, 269, 270, 271, 272, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 292, 294, 297, 299, 300, 301, 303, 305, 307, 309, 311, 312, 313, 315, 317, 318, 319, 321, 323, 325, 327, 329, 331, 333, 334, 335, 337, 339, 341, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 401, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 461, 552, 555, 870], "A": [0, 1, 7, 11, 18, 19, 21, 26, 28, 30, 36, 37, 38, 39, 41, 42, 45, 46, 47, 50, 57, 59, 60, 62, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 97, 98, 106, 107, 116, 120, 121, 122, 123, 124, 125, 126, 141, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 179, 180, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 270, 271, 272, 273, 274, 275, 278, 279, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 301, 302, 308, 310, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 335, 336, 342, 344, 345, 361, 367, 372, 377, 389, 396, 402, 407, 415, 420, 432, 434, 435, 436, 458, 461, 489, 556, 557, 558, 559, 560, 564, 566, 568, 569, 570, 572, 573, 574, 577, 578, 583, 588, 751, 752, 753, 754, 755, 756, 758, 760, 762, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 791, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 850, 851, 852, 853, 854, 855, 858, 859, 860, 862, 863, 866, 869, 870, 871], "i": [0, 7, 8, 9, 10, 11, 13, 16, 18, 19, 21, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 129, 134, 135, 139, 140, 141, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 555, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 579, 581, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 614, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 630, 631, 632, 634, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 648, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 686, 687, 689, 690, 694, 695, 696, 697, 698, 699, 701, 703, 704, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 736, 737, 738, 739, 740, 741, 742, 743, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 773, 774, 775, 777, 779, 780, 781, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 815, 817, 821, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "compris": [0, 174, 389, 740], "host": [0, 7, 9, 10, 11, 29, 38, 42, 50, 59, 148, 178, 261, 367, 368, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 418, 434, 435, 436, 461, 552, 555], "typic": [0, 36, 42, 44, 45, 48, 49, 50, 55, 59, 105, 146, 148, 152, 153, 162, 167, 170, 171, 180, 181, 264, 367, 368, 415, 416, 458, 560, 566, 572, 573, 588, 753, 824, 852], "multi": [0, 44, 66, 84, 108, 109, 112, 139, 142, 150, 183, 258, 262, 264, 397, 443, 451, 756, 772, 782, 791, 871], "core": [0, 151, 183, 790, 791, 851, 871], "cpu": [0, 11, 42, 59, 60, 150, 181, 183, 415, 555, 791, 871], "one": [0, 4, 7, 11, 18, 19, 21, 28, 35, 36, 38, 39, 40, 41, 42, 44, 47, 50, 53, 55, 57, 59, 60, 61, 62, 76, 81, 83, 85, 86, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 129, 140, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 164, 166, 167, 168, 169, 172, 176, 178, 179, 180, 181, 183, 191, 193, 194, 199, 200, 201, 202, 203, 204, 205, 210, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 304, 306, 308, 338, 340, 342, 344, 385, 398, 404, 420, 461, 484, 489, 525, 531, 553, 557, 558, 559, 564, 566, 568, 570, 572, 573, 606, 617, 630, 631, 638, 644, 645, 674, 690, 703, 704, 710, 717, 718, 732, 739, 751, 752, 753, 761, 762, 769, 770, 771, 773, 774, 775, 787, 788, 793, 812, 813, 815, 844, 847, 849, 850, 851, 858, 860, 869], "more": [0, 7, 11, 18, 19, 21, 24, 27, 38, 42, 46, 47, 50, 51, 53, 55, 57, 59, 61, 129, 140, 148, 149, 150, 151, 152, 153, 156, 159, 163, 169, 171, 178, 179, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 262, 263, 264, 345, 476, 489, 564, 566, 572, 573, 579, 585, 749, 752, 774, 793, 794, 795, 824, 834, 844, 850, 867], "gpu": [0, 11, 42, 48, 60, 149, 150, 183, 347, 555, 871], "fpga": [0, 555, 871], "other": [0, 7, 9, 10, 11, 28, 29, 30, 36, 37, 38, 41, 42, 47, 49, 50, 52, 54, 57, 59, 61, 62, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 162, 163, 164, 167, 169, 170, 171, 176, 177, 178, 179, 180, 181, 222, 225, 228, 231, 232, 239, 256, 257, 258, 261, 262, 263, 287, 320, 344, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 433, 446, 484, 551, 553, 555, 557, 561, 564, 570, 573, 576, 583, 588, 591, 593, 596, 597, 600, 603, 604, 605, 606, 610, 612, 616, 617, 622, 624, 627, 630, 631, 636, 638, 641, 644, 645, 650, 652, 654, 658, 660, 662, 664, 667, 668, 670, 673, 674, 679, 681, 683, 684, 689, 690, 694, 696, 698, 699, 703, 704, 708, 710, 712, 713, 717, 718, 722, 724, 726, 727, 731, 732, 736, 738, 740, 741, 743, 750, 751, 752, 756, 761, 763, 766, 769, 774, 775, 786, 793, 795, 807, 824, 837, 845, 848, 850, 851, 854, 858, 859, 861, 863, 865], "processor": [0, 42, 156, 397, 794, 796, 806, 807], "serv": [0, 7, 12, 42, 47, 177, 764, 787], "can": [0, 7, 9, 18, 19, 21, 24, 28, 30, 33, 34, 36, 39, 41, 42, 44, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 84, 85, 86, 99, 101, 103, 105, 108, 109, 112, 129, 140, 142, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 177, 178, 179, 181, 183, 201, 227, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 354, 364, 372, 374, 378, 385, 398, 400, 404, 409, 412, 420, 421, 422, 423, 424, 425, 426, 427, 432, 434, 435, 436, 461, 485, 486, 488, 489, 498, 525, 536, 537, 538, 540, 545, 546, 548, 551, 557, 558, 559, 560, 561, 563, 565, 566, 567, 569, 570, 572, 573, 577, 579, 583, 584, 585, 586, 590, 593, 596, 597, 598, 603, 604, 605, 609, 610, 611, 616, 622, 623, 624, 626, 630, 636, 637, 638, 640, 644, 650, 651, 652, 653, 658, 660, 661, 664, 667, 668, 669, 673, 679, 680, 681, 682, 683, 687, 689, 694, 695, 696, 697, 698, 701, 703, 708, 709, 710, 711, 712, 715, 717, 722, 723, 724, 725, 726, 729, 731, 736, 737, 738, 739, 740, 743, 749, 750, 752, 753, 755, 756, 758, 761, 762, 763, 764, 765, 766, 767, 769, 771, 773, 774, 777, 778, 780, 783, 785, 787, 788, 791, 794, 806, 807, 810, 811, 812, 815, 817, 821, 824, 825, 826, 837, 844, 847, 848, 851, 852, 853, 854, 858, 859, 861, 863, 865, 867, 869, 871], "also": [0, 7, 11, 28, 55, 57, 61, 62, 101, 148, 150, 151, 152, 153, 156, 158, 159, 163, 167, 173, 175, 178, 181, 182, 183, 256, 257, 258, 261, 289, 322, 368, 370, 372, 400, 409, 416, 420, 421, 422, 428, 429, 430, 431, 557, 558, 559, 560, 564, 565, 566, 568, 569, 571, 572, 573, 576, 578, 579, 580, 581, 606, 690, 732, 750, 751, 752, 753, 756, 760, 762, 766, 768, 769, 771, 774, 775, 776, 785, 787, 791, 794, 802, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 829, 835, 836, 837, 838, 846, 847, 850, 851, 853, 857], "target": [0, 49, 86, 148, 151, 176, 261, 466, 487, 489, 490, 495, 512, 522, 526, 539, 544, 549], "each": [0, 7, 11, 18, 19, 21, 24, 26, 35, 38, 41, 42, 46, 47, 49, 50, 51, 54, 55, 57, 59, 61, 62, 77, 78, 79, 81, 120, 121, 122, 123, 124, 125, 126, 129, 139, 148, 150, 151, 154, 156, 160, 164, 165, 168, 169, 170, 172, 176, 179, 181, 183, 187, 194, 201, 205, 222, 225, 228, 231, 239, 246, 254, 258, 259, 264, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 344, 346, 351, 364, 370, 372, 378, 407, 412, 419, 420, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 459, 460, 480, 489, 501, 502, 503, 504, 505, 513, 518, 519, 520, 521, 524, 527, 528, 529, 531, 532, 533, 550, 553, 557, 558, 559, 560, 564, 565, 566, 567, 568, 572, 577, 578, 586, 596, 604, 605, 606, 616, 617, 622, 630, 631, 636, 644, 645, 650, 658, 667, 673, 674, 679, 689, 690, 694, 703, 704, 708, 717, 718, 722, 731, 732, 736, 739, 740, 743, 752, 756, 758, 760, 761, 763, 766, 769, 770, 773, 785, 786, 793, 807, 847, 849, 850, 851, 852, 857, 858, 860, 861, 863, 871], "ha": [0, 13, 24, 26, 36, 39, 42, 45, 47, 52, 53, 55, 57, 59, 61, 62, 99, 100, 101, 148, 149, 150, 153, 154, 178, 179, 183, 201, 219, 220, 222, 225, 227, 228, 261, 264, 273, 275, 276, 293, 314, 315, 316, 319, 326, 350, 352, 353, 361, 372, 374, 396, 397, 402, 420, 434, 435, 436, 446, 461, 466, 485, 486, 488, 504, 506, 513, 522, 526, 530, 531, 535, 536, 537, 538, 540, 544, 545, 546, 548, 558, 559, 560, 562, 564, 565, 572, 573, 586, 704, 718, 739, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 766, 767, 769, 771, 774, 775, 777, 779, 780, 783, 786, 788, 793, 794, 796, 798, 810, 824, 825, 831, 847, 849, 851, 853, 856, 858, 859], "an": [0, 5, 7, 8, 9, 10, 11, 12, 13, 18, 19, 21, 24, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 367, 391, 409, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 445, 453, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 557, 560, 562, 564, 566, 568, 569, 570, 572, 573, 574, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 588, 590, 591, 592, 593, 598, 599, 600, 601, 603, 604, 605, 611, 612, 613, 615, 616, 620, 622, 624, 626, 627, 628, 629, 630, 634, 636, 638, 640, 641, 642, 643, 644, 648, 650, 652, 653, 654, 655, 661, 662, 663, 664, 669, 670, 671, 672, 673, 677, 679, 681, 682, 683, 684, 685, 688, 689, 690, 694, 696, 697, 698, 699, 700, 702, 703, 704, 708, 710, 711, 712, 713, 714, 716, 717, 718, 722, 724, 725, 726, 727, 728, 730, 731, 732, 736, 738, 739, 740, 741, 742, 744, 745, 751, 752, 753, 754, 755, 756, 757, 758, 762, 763, 764, 766, 767, 769, 770, 771, 772, 774, 777, 778, 779, 780, 782, 783, 785, 786, 787, 788, 791, 792, 793, 794, 796, 798, 800, 805, 806, 807, 808, 810, 812, 813, 815, 817, 821, 824, 825, 826, 827, 828, 831, 836, 837, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 863, 866, 868, 869, 870, 871, 872], "associ": [0, 7, 11, 22, 24, 26, 36, 59, 60, 61, 154, 155, 157, 165, 166, 167, 170, 171, 172, 176, 178, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 572, 573, 588, 589, 596, 598, 600, 611, 620, 626, 634, 648, 667, 677, 682, 692, 697, 706, 720, 734, 741, 763, 764, 843, 849, 851, 854, 856, 858, 860], "command": [0, 150, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 584, 793, 844], "queue": [0, 10, 11, 33, 34, 36, 38, 40, 41, 48, 50, 51, 60, 149, 150, 178, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 367, 368, 374, 391, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 408, 409, 414, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554, 653, 753, 761, 762, 770, 773, 774, 843], "applic": [0, 1, 4, 28, 30, 35, 39, 42, 44, 55, 149, 151, 156, 181, 183, 258, 261, 262, 370, 396, 405, 551, 555, 568, 573, 586, 763, 791, 815, 847, 848, 850, 851, 853, 859, 868, 870, 871], "emploi": [0, 57, 181, 791], "run": [0, 18, 19, 21, 24, 42, 47, 48, 57, 69, 148, 153, 156, 159, 163, 174, 178, 482, 507, 534, 560, 564, 566, 568, 572, 573, 586, 752, 760, 773, 793, 806, 807, 818, 821, 824, 825, 845, 847, 848, 849, 851, 853, 854, 868], "follow": [0, 4, 7, 8, 9, 11, 12, 15, 18, 21, 24, 27, 28, 29, 30, 36, 38, 39, 40, 41, 44, 45, 47, 48, 50, 52, 54, 55, 57, 58, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 353, 354, 357, 361, 362, 363, 365, 366, 374, 375, 376, 377, 379, 380, 382, 383, 384, 387, 388, 389, 390, 392, 396, 397, 399, 402, 403, 404, 406, 407, 410, 411, 413, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 561, 564, 565, 566, 567, 568, 570, 572, 573, 583, 588, 592, 593, 601, 603, 606, 613, 615, 624, 628, 629, 630, 638, 642, 643, 644, 652, 655, 663, 664, 671, 672, 681, 682, 683, 685, 688, 690, 696, 697, 698, 700, 702, 703, 704, 710, 711, 712, 714, 716, 717, 718, 724, 725, 726, 728, 730, 732, 738, 739, 742, 744, 759, 760, 761, 775, 783, 788, 789, 793, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 844, 850, 852, 854, 867], "standard": [0, 1, 8, 9, 28, 29, 42, 48, 52, 54, 61, 62, 64, 67, 74, 76, 80, 87, 90, 91, 93, 95, 101, 102, 105, 106, 117, 130, 132, 134, 143, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 345, 347, 354, 357, 365, 366, 371, 384, 390, 392, 410, 411, 476, 513, 561, 563, 565, 567, 572, 573, 574, 583, 590, 591, 592, 593, 596, 598, 600, 601, 603, 605, 611, 612, 613, 615, 622, 626, 627, 628, 629, 636, 640, 641, 642, 643, 650, 653, 654, 655, 658, 661, 662, 663, 664, 667, 669, 670, 671, 672, 679, 682, 683, 684, 685, 686, 688, 694, 697, 698, 699, 700, 702, 708, 711, 712, 713, 714, 716, 722, 725, 726, 727, 728, 730, 736, 739, 740, 741, 742, 744, 753, 755, 756, 758, 762, 763, 766, 767, 769, 771, 774, 777, 779, 780, 785, 787, 788, 789, 791, 792, 793, 798, 800, 805, 810, 815, 817, 851, 853, 854, 858, 860, 870, 871], "c": [0, 1, 7, 9, 18, 19, 24, 27, 28, 29, 30, 42, 43, 52, 57, 61, 62, 67, 69, 70, 72, 76, 99, 100, 106, 134, 148, 149, 151, 153, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 182, 195, 200, 201, 202, 203, 210, 214, 215, 221, 222, 224, 225, 229, 230, 239, 240, 244, 245, 246, 251, 253, 264, 304, 305, 306, 307, 308, 309, 338, 339, 340, 341, 342, 343, 345, 361, 371, 372, 374, 377, 385, 389, 398, 399, 400, 402, 404, 407, 409, 434, 554, 561, 563, 565, 567, 569, 572, 573, 574, 576, 577, 578, 579, 583, 590, 591, 592, 593, 596, 598, 600, 601, 603, 605, 611, 612, 613, 614, 615, 622, 625, 626, 627, 628, 629, 636, 639, 640, 641, 642, 643, 650, 653, 654, 655, 658, 661, 662, 663, 664, 667, 669, 670, 671, 672, 679, 682, 683, 684, 685, 686, 688, 694, 697, 698, 699, 700, 702, 708, 711, 712, 713, 714, 716, 722, 725, 726, 727, 728, 730, 736, 739, 740, 741, 742, 744, 753, 755, 756, 758, 760, 762, 763, 766, 767, 769, 771, 774, 777, 779, 780, 785, 787, 788, 789, 790, 791, 792, 794, 796, 798, 800, 802, 805, 808, 809, 810, 812, 815, 817, 836, 844, 851, 853, 854, 858, 860, 866, 870], "execut": [0, 4, 7, 10, 11, 29, 38, 42, 47, 50, 53, 54, 55, 57, 59, 61, 62, 63, 115, 147, 148, 149, 150, 151, 152, 159, 173, 174, 175, 177, 180, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 267, 273, 275, 279, 283, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 330, 332, 336, 338, 340, 342, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 561, 564, 565, 566, 567, 568, 570, 572, 573, 574, 576, 578, 579, 593, 597, 603, 604, 605, 608, 610, 616, 624, 630, 638, 644, 652, 660, 664, 668, 673, 681, 683, 689, 696, 698, 703, 710, 712, 717, 724, 726, 731, 738, 750, 752, 753, 758, 760, 761, 762, 763, 764, 767, 774, 775, 778, 783, 790, 791, 806, 807, 815, 824, 838, 845, 847, 848, 849, 850, 851, 852, 853, 854, 865], "semant": [0, 36, 52, 59, 61, 105, 113, 114, 151, 152, 154, 163, 165, 177, 178, 563, 591, 596, 600, 605, 612, 622, 627, 636, 641, 650, 654, 658, 662, 667, 670, 679, 684, 694, 699, 708, 713, 722, 727, 736, 740, 741, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 856], "To": [0, 2, 3, 21, 26, 30, 39, 47, 49, 50, 55, 60, 80, 129, 148, 150, 156, 162, 167, 168, 183, 296, 298, 299, 330, 332, 333, 408, 489, 564, 568, 583, 752, 793, 851, 859], "function": [0, 7, 9, 11, 12, 15, 18, 19, 21, 24, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 44, 45, 49, 50, 52, 55, 59, 60, 74, 90, 101, 103, 110, 120, 121, 122, 123, 124, 125, 126, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 192, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 402, 403, 404, 406, 408, 410, 411, 412, 413, 415, 416, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 561, 564, 565, 566, 567, 572, 573, 574, 593, 603, 610, 612, 622, 624, 627, 636, 638, 641, 650, 652, 655, 658, 660, 664, 670, 679, 681, 683, 684, 685, 692, 694, 696, 698, 699, 700, 706, 708, 710, 712, 713, 714, 720, 722, 724, 726, 727, 728, 734, 736, 738, 740, 743, 750, 759, 760, 761, 768, 770, 772, 773, 775, 776, 782, 783, 793, 797, 810, 815, 816, 825, 826, 827, 839, 840, 843, 844, 848, 853, 860, 863, 865, 867, 868], "object": [0, 7, 8, 10, 11, 12, 13, 18, 33, 34, 36, 38, 40, 41, 42, 44, 47, 50, 55, 56, 58, 60, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 183, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 357, 362, 363, 364, 365, 366, 367, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 489, 561, 562, 565, 566, 567, 568, 569, 571, 572, 576, 590, 598, 600, 606, 608, 611, 612, 617, 620, 621, 626, 627, 631, 634, 635, 640, 641, 645, 648, 649, 653, 661, 669, 670, 674, 677, 678, 682, 684, 690, 693, 697, 699, 704, 707, 711, 713, 718, 721, 725, 727, 732, 735, 739, 745, 748, 753, 754, 757, 758, 759, 760, 762, 767, 769, 770, 771, 773, 774, 777, 785, 786, 787, 788, 793, 794, 796, 798, 799, 812, 815, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 845, 847, 848, 849, 851, 852, 853, 854, 856, 858, 859, 860, 861, 866, 867, 869], "submit": [0, 36, 367, 368, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 753, 815, 828, 831, 847, 848, 851], "group": [0, 7, 11, 21, 27, 29, 36, 42, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 187, 192, 194, 195, 201, 205, 222, 225, 228, 246, 254, 268, 269, 276, 277, 280, 281, 284, 285, 295, 299, 300, 311, 312, 317, 318, 333, 334, 346, 370, 389, 551, 553, 704, 718, 843, 849, 853, 854, 855], "contain": [0, 5, 7, 8, 21, 28, 30, 33, 34, 36, 37, 39, 41, 42, 51, 61, 67, 68, 77, 78, 79, 80, 81, 82, 83, 97, 98, 106, 107, 116, 120, 121, 122, 123, 124, 125, 126, 141, 148, 149, 151, 153, 156, 158, 159, 164, 178, 183, 187, 194, 195, 201, 205, 219, 220, 222, 225, 228, 231, 232, 246, 254, 256, 257, 258, 259, 261, 263, 264, 265, 267, 268, 271, 273, 275, 276, 280, 283, 284, 287, 289, 291, 293, 295, 299, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 333, 338, 340, 342, 344, 346, 368, 370, 385, 389, 398, 404, 407, 416, 420, 421, 422, 428, 429, 432, 434, 435, 436, 443, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 557, 558, 559, 560, 565, 573, 574, 585, 588, 589, 590, 593, 594, 596, 597, 598, 602, 603, 605, 606, 608, 609, 610, 611, 614, 615, 617, 621, 622, 623, 624, 626, 629, 631, 635, 637, 638, 640, 643, 645, 649, 651, 652, 653, 656, 658, 659, 660, 661, 664, 665, 667, 668, 669, 672, 674, 678, 680, 681, 682, 683, 686, 687, 688, 690, 693, 694, 695, 696, 697, 698, 701, 702, 704, 707, 709, 710, 711, 712, 715, 716, 718, 721, 723, 724, 725, 726, 729, 730, 732, 735, 737, 738, 739, 740, 743, 745, 748, 750, 766, 769, 770, 773, 783, 788, 790, 815, 826, 841, 842, 843, 850, 853, 857, 859, 860, 862, 864, 866, 867, 872], "": [0, 7, 8, 10, 11, 12, 13, 21, 36, 39, 42, 44, 46, 47, 50, 51, 58, 59, 60, 61, 62, 99, 100, 106, 107, 140, 146, 148, 149, 151, 154, 156, 157, 159, 160, 163, 166, 167, 176, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 357, 368, 371, 385, 389, 392, 398, 400, 404, 408, 409, 414, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 560, 565, 566, 567, 568, 572, 573, 577, 588, 753, 758, 760, 762, 770, 771, 772, 773, 782, 785, 806, 807, 835, 847, 849, 851, 852, 871], "definit": [0, 3, 30, 31, 39, 41, 42, 43, 45, 47, 49, 51, 59, 61, 63, 148, 159, 169, 170, 178, 261, 289, 295, 310, 311, 314, 316, 317, 322, 370, 418, 419, 433, 434, 435, 436, 451, 482, 489, 507, 534, 541, 573], "togeth": [0, 51, 63, 152, 169], "variabl": [0, 36, 42, 47, 62, 64, 67, 74, 76, 80, 87, 90, 91, 93, 95, 101, 102, 105, 106, 117, 130, 132, 134, 143, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 344, 368, 416, 418, 489, 753, 758, 762, 767, 774, 785, 793, 847], "refer": [0, 27, 33, 34, 36, 40, 41, 42, 47, 49, 50, 51, 54, 55, 61, 148, 151, 153, 157, 159, 167, 170, 171, 174, 178, 179, 183, 260, 261, 262, 345, 368, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 451, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 565, 573, 585, 588, 590, 591, 598, 599, 600, 611, 612, 614, 624, 626, 627, 638, 640, 641, 652, 653, 654, 661, 662, 669, 670, 681, 682, 684, 685, 686, 696, 697, 699, 700, 710, 711, 713, 714, 724, 725, 727, 728, 738, 739, 741, 743, 753, 756, 758, 760, 762, 766, 767, 768, 769, 771, 774, 776, 786, 793, 810, 815, 825, 826, 844, 850, 851, 853, 856, 858, 859, 861, 863, 866], "simpli": [0, 59, 151, 155, 172], "through": [0, 11, 15, 21, 39, 44, 55, 57, 148, 151, 287, 289, 320, 322, 347, 434, 435, 436, 560, 765, 769, 771, 773, 779, 785, 786, 791, 815, 851, 871], "memori": [0, 7, 9, 11, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 46, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 185, 222, 224, 225, 227, 228, 258, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 367, 415, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 458, 461, 551, 552, 555, 591, 592, 600, 612, 627, 641, 654, 662, 663, 670, 684, 699, 713, 727, 739, 741, 742, 749, 750, 791, 793, 794, 795, 796, 797, 798, 806, 807, 839, 842], "defin": [0, 5, 7, 8, 9, 11, 12, 14, 15, 18, 21, 24, 26, 28, 29, 30, 35, 36, 38, 39, 40, 41, 42, 47, 49, 50, 51, 57, 58, 59, 61, 62, 76, 80, 83, 85, 86, 94, 99, 101, 105, 116, 147, 148, 149, 150, 151, 153, 155, 156, 159, 160, 161, 162, 164, 165, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 187, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 267, 268, 271, 291, 298, 299, 300, 301, 304, 305, 306, 307, 324, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 357, 362, 364, 365, 368, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 400, 401, 403, 404, 406, 407, 409, 410, 411, 412, 413, 416, 418, 419, 420, 421, 422, 434, 435, 436, 443, 462, 466, 468, 471, 478, 479, 482, 485, 489, 490, 491, 492, 493, 494, 498, 506, 507, 513, 522, 534, 535, 536, 541, 544, 545, 555, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 589, 590, 592, 598, 601, 611, 613, 626, 628, 640, 642, 653, 655, 661, 663, 669, 671, 682, 684, 685, 697, 699, 700, 711, 713, 714, 725, 727, 728, 739, 742, 751, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 780, 782, 783, 785, 786, 787, 788, 790, 791, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 824, 825, 836, 837, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 866, 869, 871], "sever": [0, 35, 36, 39, 44, 46, 156, 157, 159, 183, 188, 261, 262, 264, 295, 344, 351, 378, 555, 567, 787, 792, 844, 847], "mechan": [0, 9, 10, 11, 29, 36, 47, 55, 61, 150, 151, 152, 183], "share": [0, 33, 34, 36, 39, 41, 49, 148, 169, 178, 222, 225, 228, 259, 261, 458, 773, 794, 795, 802, 805, 809, 851, 853], "depend": [0, 7, 11, 36, 40, 42, 44, 45, 47, 49, 55, 57, 59, 61, 73, 129, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 169, 176, 177, 180, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 304, 306, 308, 338, 340, 342, 386, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 560, 568, 573, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 752, 753, 758, 761, 762, 774, 775, 794, 796, 798, 813, 824, 845, 869], "descript": [0, 9, 29, 30, 35, 36, 38, 39, 41, 45, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 148, 149, 150, 151, 153, 154, 156, 157, 160, 162, 163, 166, 167, 169, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 793, 836, 867], "buffer": [0, 7, 11, 59, 61, 148, 150, 151, 159, 174, 175, 178, 258, 259, 260, 261, 272, 274, 294, 327, 391, 425, 426, 427, 434, 435, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 755, 766, 767, 769, 770, 777, 779, 780, 783, 788, 793], "creat": [0, 7, 8, 10, 11, 12, 18, 19, 21, 24, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 55, 57, 59, 60, 62, 148, 149, 150, 151, 152, 153, 156, 159, 160, 163, 164, 167, 168, 169, 178, 183, 260, 261, 262, 367, 372, 391, 408, 415, 428, 429, 430, 431, 446, 455, 458, 461, 489, 551, 554, 563, 564, 577, 588, 751, 752, 756, 760, 767, 769, 772, 773, 774, 782, 783, 821, 824, 845, 847, 849, 850, 851, 852, 854, 856, 857, 858, 859, 860, 861, 866, 870, 871], "pass": [0, 7, 11, 12, 15, 38, 47, 50, 51, 55, 57, 59, 60, 61, 62, 99, 140, 148, 149, 150, 151, 152, 153, 156, 158, 159, 161, 162, 163, 164, 168, 169, 177, 178, 179, 183, 256, 257, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 461, 489, 560, 567, 568, 571, 573, 576, 752, 753, 758, 760, 762, 767, 769, 771, 773, 774, 779, 780, 783, 785, 786, 788, 815, 828, 829, 830, 832, 833, 834, 835, 848, 849, 851], "arrai": [0, 7, 28, 33, 34, 39, 41, 42, 43, 48, 55, 57, 148, 151, 156, 157, 164, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 265, 267, 268, 269, 271, 273, 275, 276, 277, 279, 280, 281, 283, 284, 285, 287, 289, 291, 293, 295, 296, 299, 300, 310, 311, 312, 313, 316, 317, 318, 320, 322, 324, 326, 328, 329, 330, 333, 334, 342, 344, 350, 353, 367, 375, 376, 377, 380, 382, 383, 387, 389, 390, 392, 396, 397, 399, 403, 404, 405, 406, 407, 410, 411, 413, 420, 421, 422, 428, 429, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 489, 551, 572, 742, 810, 821, 871], "accessor": [0, 42, 43, 183, 598, 604, 605], "identifi": [0, 5, 8, 12, 24, 26, 30, 61, 148, 176, 262, 585, 586, 766, 787, 790, 841, 842, 851, 859], "access": [0, 33, 34, 35, 36, 37, 39, 42, 47, 48, 50, 53, 59, 177, 178, 179, 180, 183, 256, 257, 258, 259, 261, 262, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 557, 558, 559, 560, 574, 604, 605, 611, 682, 739, 740, 744, 777, 794, 811, 859, 862], "thi": [0, 3, 5, 9, 14, 18, 19, 21, 24, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 52, 53, 55, 57, 59, 60, 62, 72, 73, 80, 83, 99, 100, 116, 140, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 351, 358, 359, 360, 361, 364, 370, 374, 378, 381, 389, 391, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 557, 560, 561, 565, 566, 567, 568, 569, 572, 573, 578, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 596, 597, 599, 600, 603, 604, 605, 610, 612, 616, 620, 622, 624, 626, 627, 630, 634, 636, 638, 640, 641, 644, 648, 650, 652, 654, 658, 660, 661, 662, 663, 664, 667, 668, 670, 673, 677, 679, 681, 682, 683, 684, 689, 692, 694, 696, 697, 698, 699, 703, 706, 708, 710, 711, 712, 713, 717, 720, 722, 724, 725, 726, 727, 731, 734, 736, 738, 740, 741, 742, 743, 750, 751, 752, 753, 756, 757, 758, 760, 761, 762, 763, 764, 767, 771, 773, 774, 775, 777, 783, 786, 788, 789, 791, 792, 793, 794, 795, 797, 810, 812, 815, 817, 818, 821, 824, 827, 842, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 867, 869, 871, 872], "call": [0, 7, 9, 18, 21, 29, 30, 36, 38, 40, 44, 47, 50, 52, 59, 62, 101, 148, 150, 151, 156, 160, 170, 180, 183, 187, 194, 195, 200, 201, 202, 203, 205, 210, 240, 246, 254, 260, 261, 263, 264, 265, 266, 270, 272, 274, 278, 279, 280, 282, 283, 284, 286, 288, 290, 292, 294, 297, 299, 301, 302, 303, 305, 307, 308, 309, 313, 314, 315, 316, 317, 319, 321, 323, 325, 327, 329, 331, 333, 335, 336, 337, 339, 341, 342, 343, 346, 350, 353, 367, 368, 370, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 408, 409, 414, 415, 418, 421, 422, 423, 424, 434, 435, 436, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 560, 561, 562, 563, 564, 574, 583, 591, 599, 600, 612, 625, 627, 639, 641, 654, 662, 670, 684, 699, 713, 727, 741, 750, 751, 753, 756, 758, 760, 762, 763, 764, 767, 769, 771, 774, 777, 778, 783, 787, 788, 793, 794, 796, 813, 815, 824, 832, 834, 845, 848, 849, 850, 851, 852, 853, 854, 858, 859, 860, 861, 864, 871], "runtim": [0, 11, 29, 41, 55, 69, 99, 153, 161, 183, 201, 261, 584, 586, 753, 787], "ensur": [0, 59, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 364, 386, 412, 432, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 572, 795, 871], "avail": [0, 18, 19, 21, 24, 27, 28, 33, 34, 36, 37, 39, 40, 41, 42, 46, 48, 120, 121, 122, 123, 124, 125, 126, 140, 156, 163, 173, 180, 183, 251, 253, 262, 263, 264, 391, 408, 420, 434, 435, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 563, 568, 585, 588, 596, 606, 690, 732, 767, 769, 770, 775, 779, 785, 790, 796, 798, 845], "all": [0, 7, 8, 9, 11, 12, 18, 19, 21, 24, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 73, 76, 77, 78, 79, 81, 105, 120, 121, 122, 123, 124, 125, 126, 129, 140, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 165, 168, 169, 171, 172, 173, 175, 176, 181, 183, 184, 187, 194, 195, 201, 205, 219, 220, 222, 225, 228, 246, 251, 253, 254, 256, 257, 258, 261, 262, 263, 268, 269, 273, 274, 276, 277, 280, 281, 284, 285, 287, 289, 295, 296, 299, 300, 311, 312, 317, 318, 320, 322, 330, 333, 334, 344, 368, 370, 391, 408, 416, 432, 434, 435, 436, 443, 446, 461, 466, 489, 522, 526, 529, 535, 544, 551, 552, 553, 557, 558, 559, 565, 566, 567, 568, 570, 572, 583, 585, 586, 591, 593, 594, 596, 597, 600, 603, 604, 605, 608, 610, 612, 616, 621, 622, 624, 627, 630, 635, 636, 638, 641, 644, 649, 650, 652, 654, 656, 658, 660, 662, 664, 665, 667, 668, 670, 673, 678, 679, 681, 683, 684, 689, 693, 694, 696, 698, 699, 703, 707, 708, 710, 712, 713, 717, 721, 722, 724, 726, 727, 731, 735, 736, 738, 739, 740, 741, 743, 748, 750, 752, 754, 760, 761, 764, 765, 766, 767, 769, 770, 771, 773, 777, 779, 781, 783, 784, 787, 788, 793, 795, 800, 802, 805, 807, 808, 809, 831, 837, 845, 847, 849, 850, 851, 852, 854, 855, 858, 859, 860, 861, 862, 863, 865, 866, 871, 872], "unifi": [0, 39, 178, 458], "address": [0, 10, 11, 57, 183, 222, 225, 228, 258, 261, 421, 422, 423, 424, 434, 435, 436, 765], "guarante": [0, 140, 141, 148, 183, 262, 370, 432, 513, 566, 574, 579, 739, 791, 793, 800, 805, 845, 846, 848, 850, 851, 852, 859], "space": [0, 24, 26, 42, 57, 59, 150, 151, 263, 298, 299, 332, 333, 418, 557, 558, 559, 564, 566, 572], "pointer": [0, 12, 33, 34, 35, 36, 40, 41, 48, 59, 148, 151, 178, 179, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 264, 265, 267, 268, 273, 275, 276, 279, 283, 284, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 336, 338, 340, 342, 386, 415, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 565, 569, 572, 573, 590, 598, 599, 611, 624, 626, 638, 640, 652, 661, 669, 681, 682, 696, 697, 710, 711, 724, 725, 738, 739, 753, 762, 765, 769, 773, 774, 785, 794, 795, 796, 797, 798, 811, 817, 859, 866], "valu": [0, 2, 3, 7, 8, 10, 12, 18, 19, 21, 24, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 144, 148, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 370, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 418, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 557, 558, 559, 560, 564, 566, 567, 568, 569, 570, 571, 572, 573, 583, 584, 586, 588, 590, 591, 596, 597, 598, 600, 602, 603, 604, 610, 611, 612, 624, 626, 627, 638, 640, 641, 652, 653, 654, 658, 660, 661, 662, 667, 668, 669, 670, 681, 682, 684, 687, 696, 697, 699, 701, 710, 711, 713, 715, 724, 725, 727, 729, 738, 739, 740, 741, 750, 753, 758, 762, 763, 766, 769, 771, 773, 774, 775, 777, 783, 787, 788, 793, 794, 810, 811, 817, 819, 820, 822, 823, 824, 828, 829, 830, 832, 847, 851, 853, 858, 859, 861, 864], "alwai": [0, 39, 54, 57, 59, 62, 148, 151, 153, 159, 160, 161, 163, 167, 169, 183, 262, 263, 533, 560, 564, 636, 650, 708, 722, 752, 754, 837, 850, 861], "same": [0, 7, 11, 35, 36, 38, 40, 41, 42, 44, 49, 50, 53, 54, 57, 59, 61, 62, 70, 72, 76, 77, 80, 99, 100, 140, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 176, 177, 178, 179, 180, 181, 183, 219, 220, 222, 224, 225, 228, 258, 259, 261, 262, 263, 273, 302, 303, 308, 309, 336, 337, 342, 343, 344, 367, 372, 428, 429, 430, 431, 432, 433, 434, 435, 436, 489, 504, 529, 530, 531, 551, 557, 558, 559, 560, 561, 563, 564, 565, 569, 572, 573, 574, 576, 587, 588, 590, 594, 598, 611, 617, 626, 631, 640, 645, 653, 656, 661, 665, 669, 674, 682, 697, 704, 711, 718, 725, 739, 745, 753, 754, 755, 758, 762, 767, 769, 771, 774, 779, 780, 783, 785, 786, 787, 791, 793, 794, 796, 798, 816, 819, 820, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 837, 848, 850, 851, 853, 854, 858, 859, 860, 861, 866, 867, 869, 871], "locat": [0, 30, 61, 158, 167, 222, 225, 228, 258, 551, 794], "enabl": [0, 4, 7, 12, 37, 39, 42, 44, 54, 55, 59, 148, 150, 156, 157, 163, 183, 256, 257, 261, 264, 461, 489, 554, 571, 573, 576, 579, 582, 584, 753, 767, 791, 793, 810, 843, 852, 862, 871], "without": [0, 11, 36, 39, 41, 42, 55, 59, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 178, 183, 261, 389, 391, 433, 570, 573, 588, 749, 756, 763, 806, 807, 836, 837, 844, 851, 872], "There": [0, 58, 148, 151, 154, 156, 157, 158, 160, 165, 166, 167, 168, 170, 171, 172, 183, 222, 225, 228, 251, 253, 420, 461, 566, 752, 761, 824, 836, 845, 847, 848, 851], "support": [0, 4, 7, 8, 9, 11, 28, 29, 33, 34, 35, 37, 39, 42, 44, 47, 49, 54, 57, 59, 62, 147, 148, 149, 150, 151, 158, 159, 173, 174, 180, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 349, 350, 351, 352, 353, 354, 357, 362, 363, 364, 365, 366, 370, 371, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 412, 413, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 579, 580, 583, 586, 588, 589, 592, 598, 601, 611, 613, 626, 628, 640, 642, 655, 663, 669, 671, 682, 685, 697, 700, 711, 714, 725, 728, 742, 752, 766, 769, 770, 773, 777, 791, 793, 806, 807, 851, 862, 866], "featur": [0, 18, 19, 21, 24, 26, 37, 39, 40, 42, 45, 152, 161, 372, 391, 555, 582, 585, 739, 752, 843], "underli": [0, 11, 13, 39, 44, 47, 59, 60, 62, 149, 346, 351, 370, 378, 421, 422, 423, 424, 428, 429, 430, 431, 461, 795, 859], "schedul": [0, 183, 579, 763, 841, 842, 843, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856], "when": [0, 7, 9, 13, 28, 29, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 52, 55, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 181, 258, 260, 261, 262, 302, 308, 336, 342, 344, 349, 350, 352, 353, 354, 357, 362, 364, 365, 366, 370, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 399, 400, 403, 404, 406, 409, 410, 411, 413, 414, 428, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 466, 487, 490, 495, 522, 526, 539, 544, 552, 565, 566, 568, 571, 572, 573, 576, 577, 578, 583, 584, 588, 739, 751, 753, 758, 760, 762, 763, 767, 770, 771, 774, 775, 783, 786, 794, 806, 807, 821, 824, 832, 837, 845, 847, 849, 850, 851, 852, 859, 871], "readi": [0, 36, 62, 262, 263, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "If": [0, 7, 9, 11, 21, 28, 29, 33, 34, 36, 41, 45, 47, 50, 59, 61, 62, 68, 71, 75, 79, 81, 82, 85, 86, 88, 118, 120, 121, 122, 123, 124, 125, 126, 129, 131, 137, 144, 148, 151, 152, 153, 158, 161, 167, 169, 176, 177, 178, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 267, 268, 271, 273, 274, 275, 276, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 350, 353, 371, 400, 405, 409, 414, 425, 426, 427, 434, 435, 436, 443, 446, 488, 489, 512, 513, 519, 520, 526, 531, 540, 541, 548, 549, 564, 565, 566, 568, 569, 572, 573, 574, 577, 583, 588, 591, 592, 596, 599, 600, 601, 602, 603, 604, 605, 612, 613, 614, 622, 624, 627, 628, 630, 636, 638, 641, 642, 644, 650, 652, 654, 655, 658, 662, 663, 667, 670, 671, 679, 681, 682, 684, 685, 686, 687, 694, 696, 697, 699, 700, 701, 703, 708, 710, 711, 713, 714, 715, 717, 722, 724, 725, 727, 728, 729, 736, 738, 739, 741, 742, 750, 751, 752, 753, 758, 761, 762, 764, 767, 769, 770, 771, 774, 777, 779, 783, 785, 787, 788, 790, 795, 796, 815, 824, 827, 836, 844, 847, 849, 850, 851, 852, 853, 858, 859, 860, 863], "method": [0, 11, 12, 28, 29, 30, 33, 34, 35, 36, 40, 41, 42, 44, 49, 50, 55, 62, 151, 158, 168, 177, 181, 183, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 352, 353, 354, 357, 362, 363, 365, 366, 368, 369, 370, 372, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 413, 416, 417, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 563, 564, 565, 572, 573, 587, 588, 593, 597, 603, 604, 605, 610, 616, 622, 624, 630, 636, 638, 644, 650, 652, 660, 664, 668, 673, 679, 681, 683, 689, 694, 696, 698, 703, 708, 710, 712, 717, 722, 724, 726, 731, 736, 738, 739, 740, 743, 750, 751, 756, 771, 787, 788, 794, 796, 797, 798, 818, 844, 849, 850, 851, 852, 854, 858, 863, 865, 867], "copi": [0, 33, 34, 35, 36, 39, 41, 42, 53, 59, 62, 140, 141, 148, 151, 152, 167, 177, 178, 180, 189, 192, 194, 221, 222, 225, 226, 227, 228, 261, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 552, 566, 569, 572, 580, 581, 588, 590, 592, 596, 598, 601, 611, 613, 620, 622, 624, 626, 628, 634, 636, 638, 640, 642, 648, 650, 652, 653, 655, 658, 661, 663, 667, 669, 671, 677, 679, 681, 682, 685, 692, 694, 696, 697, 700, 706, 708, 710, 711, 714, 720, 722, 724, 725, 728, 734, 736, 738, 739, 740, 742, 750, 753, 754, 755, 758, 759, 762, 766, 767, 769, 771, 773, 774, 777, 779, 780, 783, 785, 786, 788, 811, 814, 817, 824, 825, 827, 828, 829, 830, 832, 833, 834, 835, 838, 851, 858, 859, 863, 866], "necessari": [0, 42, 55, 59, 150, 156, 158, 160, 167, 169, 183, 261, 577, 704, 824, 850], "order": [0, 7, 21, 24, 38, 42, 50, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 183, 227, 258, 260, 261, 264, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 338, 340, 342, 360, 395, 418, 420, 432, 434, 435, 436, 439, 440, 441, 442, 451, 452, 453, 454, 461, 564, 566, 568, 570, 574, 653, 704, 718, 752, 755, 760, 763, 779, 780, 785, 794, 803, 804, 810, 824, 843], "soon": [0, 775], "prior": [0, 152, 183, 261, 262, 756], "finish": [0, 24, 60, 62, 148, 183, 256, 257, 851], "you": [0, 36, 48, 57, 149, 156, 169, 275, 276, 283, 293, 296, 316, 326, 330, 358, 393, 400, 409, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 554, 557, 572, 573, 584, 585, 810, 824, 844, 847, 852, 854, 871, 872], "must": [0, 7, 15, 21, 36, 54, 55, 57, 59, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 156, 158, 160, 161, 163, 164, 165, 167, 169, 173, 176, 178, 179, 180, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 421, 422, 423, 424, 428, 429, 430, 431, 432, 434, 435, 436, 461, 489, 526, 530, 557, 558, 559, 560, 561, 563, 565, 566, 567, 568, 569, 572, 573, 574, 586, 590, 591, 596, 598, 600, 605, 611, 612, 614, 622, 624, 626, 627, 636, 638, 640, 641, 650, 652, 653, 654, 658, 661, 662, 667, 669, 670, 679, 681, 682, 684, 686, 694, 696, 697, 699, 708, 710, 711, 713, 722, 724, 725, 727, 736, 738, 739, 740, 741, 753, 755, 756, 758, 760, 762, 763, 766, 767, 769, 771, 772, 774, 777, 779, 780, 782, 785, 786, 787, 788, 793, 795, 814, 816, 818, 819, 820, 822, 823, 828, 829, 830, 831, 832, 833, 834, 835, 848, 849, 851, 853, 854, 858, 860, 861, 866, 871], "specifi": [0, 7, 11, 15, 18, 19, 21, 24, 26, 28, 43, 47, 49, 51, 53, 55, 57, 59, 60, 61, 66, 67, 68, 76, 81, 82, 83, 84, 85, 86, 97, 98, 106, 107, 108, 109, 112, 116, 120, 121, 122, 123, 124, 125, 126, 129, 139, 140, 141, 142, 148, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 180, 181, 183, 185, 186, 187, 194, 195, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 294, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 325, 327, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 370, 400, 408, 409, 420, 423, 430, 433, 434, 435, 436, 443, 446, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 556, 557, 560, 564, 566, 568, 569, 572, 577, 578, 579, 580, 584, 752, 753, 758, 762, 763, 764, 766, 769, 771, 774, 775, 783, 786, 790, 791, 793, 824, 837, 844, 847, 848, 851, 852, 853, 866, 869, 871], "set": [0, 11, 12, 18, 19, 21, 24, 26, 28, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 52, 59, 61, 62, 63, 67, 80, 99, 100, 113, 120, 121, 122, 123, 124, 125, 126, 129, 148, 150, 151, 152, 153, 154, 156, 160, 161, 163, 166, 167, 174, 175, 176, 178, 179, 212, 213, 215, 216, 217, 218, 219, 220, 222, 225, 228, 231, 232, 251, 253, 254, 258, 259, 260, 261, 262, 263, 264, 345, 346, 349, 350, 352, 353, 354, 357, 362, 365, 366, 370, 372, 375, 376, 377, 379, 380, 382, 383, 384, 387, 388, 389, 390, 392, 397, 399, 400, 403, 405, 406, 409, 410, 411, 413, 414, 418, 420, 428, 429, 430, 431, 432, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 564, 568, 569, 570, 579, 586, 588, 596, 602, 604, 605, 687, 701, 715, 729, 751, 752, 753, 755, 758, 760, 761, 762, 763, 767, 769, 773, 774, 775, 777, 780, 785, 788, 792, 793, 799, 810, 824, 836, 837, 847, 849, 851, 858, 862, 863, 866, 871], "event": [0, 2, 3, 7, 10, 33, 34, 36, 40, 42, 149, 158, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 386, 415, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 577], "complet": [0, 7, 13, 39, 42, 57, 59, 146, 148, 151, 154, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 261, 262, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 350, 370, 376, 386, 425, 426, 427, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 482, 489, 507, 534, 739, 752, 757, 758, 760, 764, 831, 845, 847, 849, 850, 851, 852, 854, 855], "synchron": [0, 7, 11, 12, 57, 59, 60, 799, 806, 807, 851], "coordin": [0, 57, 97, 98, 230, 232, 420], "destruct": [0, 566, 588, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 777, 788, 836, 847, 850, 851, 859], "advanc": [0, 158, 345, 421, 422, 573, 752], "requir": [0, 7, 9, 18, 21, 28, 37, 38, 39, 43, 45, 47, 48, 49, 50, 52, 53, 54, 57, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 166, 167, 169, 172, 176, 177, 179, 180, 181, 183, 231, 232, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 358, 360, 393, 395, 415, 434, 435, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 576, 577, 578, 579, 580, 581, 589, 590, 591, 592, 593, 596, 598, 600, 601, 603, 605, 608, 611, 612, 613, 614, 615, 621, 622, 624, 626, 627, 628, 629, 635, 636, 638, 640, 641, 642, 643, 649, 650, 652, 653, 654, 655, 658, 661, 662, 663, 664, 667, 669, 670, 671, 672, 678, 679, 681, 682, 683, 684, 685, 686, 688, 693, 694, 696, 697, 698, 699, 700, 702, 707, 708, 710, 711, 712, 713, 714, 716, 721, 722, 724, 725, 726, 727, 728, 730, 735, 736, 738, 740, 741, 742, 744, 748, 752, 753, 755, 756, 758, 762, 763, 766, 767, 769, 771, 772, 774, 777, 779, 780, 782, 785, 786, 787, 788, 791, 792, 794, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 841, 842, 848, 851, 853, 854, 858, 860, 862, 866, 871], "strategi": [0, 36, 566, 792], "In": [0, 7, 9, 18, 29, 33, 34, 38, 39, 42, 45, 46, 47, 48, 49, 50, 53, 55, 57, 59, 60, 61, 80, 81, 105, 148, 149, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 183, 214, 224, 225, 227, 231, 232, 244, 258, 259, 262, 264, 271, 287, 296, 308, 309, 320, 342, 344, 345, 346, 351, 372, 378, 418, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 461, 466, 489, 490, 504, 522, 526, 544, 561, 566, 568, 572, 579, 583, 586, 592, 601, 613, 622, 626, 628, 640, 642, 655, 663, 671, 679, 682, 685, 694, 697, 700, 711, 714, 725, 728, 736, 742, 743, 752, 760, 761, 767, 773, 783, 787, 796, 797, 812, 815, 824, 848, 850, 871], "we": [0, 53, 55, 57, 80, 81, 129, 151, 153, 156, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 183, 222, 225, 228, 262, 871], "onemkl": [0, 1, 188, 195, 199, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 262, 263, 295, 344, 346, 348, 368, 370, 372, 416, 418, 421, 422, 451, 454, 461, 870], "matrix": [0, 21, 22, 45, 52, 55, 57, 105, 151, 158, 159, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 282, 283, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 385, 396, 397, 405, 420, 421, 422, 423, 428, 429, 434, 435, 436, 437, 443, 446, 461, 572], "multipli": [0, 42, 52, 59, 62, 147, 151, 152, 169, 172, 201, 253, 254, 293, 295, 304, 305, 306, 307, 308, 309, 326, 338, 339, 340, 341, 342, 343, 486, 488, 513, 538, 540, 546, 548, 553, 763], "routin": [0, 1, 9, 38, 50, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 372, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 555, 583, 793, 870], "gemm": [0, 151, 156, 183, 191, 201], "write": [0, 30, 36, 40, 59, 179, 183, 258, 261, 478, 479, 491, 492, 493, 494, 498, 512, 549, 566, 568, 599, 799, 802, 805, 809, 810, 837, 844, 871], "omit": [0, 11, 38, 50, 57, 150, 151, 158, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 374, 566, 824, 851], "irrelev": [0, 258, 844], "detail": [0, 18, 19, 21, 24, 30, 42, 47, 53, 59, 62, 149, 150, 151, 159, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 262, 263, 264, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 351, 355, 364, 368, 372, 386, 416, 421, 422, 428, 429, 432, 451, 461, 506, 682, 697, 711, 725, 739, 792, 810], "initi": [0, 4, 17, 18, 21, 22, 24, 36, 39, 40, 41, 43, 44, 47, 51, 52, 57, 59, 153, 156, 160, 161, 163, 166, 168, 169, 176, 183, 200, 201, 202, 203, 210, 240, 251, 253, 254, 259, 261, 262, 358, 359, 360, 361, 367, 374, 393, 394, 395, 396, 397, 400, 402, 405, 407, 409, 414, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 489, 557, 561, 562, 565, 577, 600, 654, 684, 699, 713, 727, 751, 753, 758, 762, 767, 769, 771, 774, 777, 786, 788, 810, 819, 851, 853], "gpu_selector": [0, 48, 149], "want": [0, 151, 400, 409], "comput": [0, 4, 11, 18, 21, 24, 27, 28, 29, 39, 42, 43, 44, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 65, 67, 69, 73, 75, 77, 78, 79, 80, 81, 82, 88, 92, 94, 96, 98, 99, 100, 104, 105, 106, 111, 114, 118, 131, 133, 135, 137, 144, 145, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 372, 386, 391, 397, 418, 434, 435, 437, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 564, 568, 572, 573, 752, 760, 762, 785, 788, 821, 823, 845, 848, 854, 858, 860, 869, 871], "perform": [0, 1, 7, 9, 18, 21, 24, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 49, 50, 51, 55, 57, 59, 63, 64, 66, 67, 69, 77, 80, 84, 85, 86, 97, 99, 100, 102, 106, 108, 109, 110, 112, 113, 115, 120, 121, 122, 123, 124, 125, 126, 129, 136, 138, 139, 142, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 183, 187, 189, 190, 191, 194, 195, 196, 197, 198, 201, 205, 214, 215, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231, 235, 237, 244, 245, 246, 254, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 292, 294, 295, 297, 299, 300, 301, 303, 305, 307, 309, 311, 312, 313, 315, 317, 318, 319, 321, 323, 325, 327, 329, 331, 333, 334, 335, 337, 339, 341, 343, 345, 370, 381, 397, 420, 421, 422, 423, 424, 434, 435, 436, 466, 482, 483, 485, 486, 488, 490, 504, 506, 507, 509, 513, 522, 523, 531, 534, 535, 536, 537, 538, 540, 542, 544, 545, 546, 548, 551, 553, 555, 562, 566, 572, 573, 577, 579, 583, 593, 596, 597, 603, 610, 622, 624, 636, 638, 650, 652, 658, 660, 664, 667, 668, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 740, 743, 750, 758, 762, 775, 783, 790, 793, 794, 806, 807, 829, 830, 834, 836, 850, 851, 863, 865, 870, 871], "hold": [0, 7, 12, 36, 41, 57, 59, 60, 120, 121, 122, 123, 124, 125, 126, 148, 151, 157, 176, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 368, 416, 423, 424, 432, 433, 446, 578, 596, 598, 609, 623, 637, 651, 680, 683, 695, 698, 709, 712, 723, 726, 737, 739, 749, 765, 777, 788, 836, 837, 850, 858], "alloc": [0, 9, 29, 30, 33, 34, 36, 44, 59, 148, 150, 151, 167, 183, 185, 187, 194, 225, 228, 256, 257, 258, 259, 260, 261, 262, 263, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 458, 461, 489, 552, 588, 590, 591, 592, 594, 595, 596, 597, 598, 599, 600, 601, 606, 607, 610, 611, 612, 613, 617, 618, 619, 620, 622, 624, 625, 626, 627, 628, 631, 632, 633, 634, 636, 638, 639, 640, 641, 642, 645, 646, 647, 648, 650, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 674, 675, 676, 677, 679, 681, 682, 684, 685, 690, 691, 692, 694, 696, 697, 699, 700, 704, 705, 706, 708, 710, 711, 713, 714, 718, 719, 720, 722, 724, 725, 727, 728, 732, 733, 734, 736, 738, 739, 741, 742, 745, 746, 747, 749, 750, 794, 795, 796, 797, 798, 839, 842, 859, 861], "compar": [0, 42, 53, 59, 62, 129, 176, 177, 178, 574, 589, 598, 600, 603, 604, 605, 611, 613, 616, 617, 618, 619, 620, 625, 626, 628, 630, 631, 632, 633, 634, 639, 640, 642, 644, 645, 646, 647, 648, 653, 654, 655, 656, 657, 669, 671, 673, 674, 675, 676, 677, 684, 699, 713, 727, 775, 779, 795, 797, 810, 827], "add": [0, 59, 62, 67, 68, 72, 77, 78, 79, 80, 81, 82, 106, 107, 147, 148, 154, 156, 158, 160, 163, 167, 185, 186, 187, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 233, 236, 237, 238, 240, 241, 242, 243, 253, 553, 563, 565, 755, 763, 773, 779, 780, 785, 794, 815, 824, 850, 854], "paramet": [0, 7, 18, 19, 21, 24, 28, 33, 34, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 55, 57, 59, 60, 61, 62, 80, 81, 99, 100, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 557, 560, 566, 567, 569, 572, 573, 622, 636, 650, 679, 682, 694, 697, 708, 711, 722, 725, 736, 751, 763, 766, 771, 775, 787, 793, 816, 819, 820, 822, 823, 824, 837, 847, 851, 853, 858, 859, 860, 862], "replac": [0, 36, 41, 74, 75, 152, 169, 170, 183, 231, 239, 389, 572, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 783, 794, 856], "otherwis": [0, 7, 33, 34, 36, 59, 62, 75, 88, 94, 118, 120, 121, 122, 123, 124, 125, 126, 131, 137, 144, 153, 157, 158, 174, 176, 177, 178, 181, 183, 195, 212, 213, 217, 218, 222, 226, 227, 230, 371, 421, 422, 428, 429, 434, 435, 436, 500, 502, 503, 513, 519, 520, 529, 541, 553, 557, 560, 563, 575, 583, 584, 586, 588, 589, 594, 596, 597, 599, 604, 605, 606, 609, 610, 616, 617, 622, 623, 624, 625, 630, 631, 636, 637, 638, 639, 644, 645, 650, 651, 652, 656, 658, 659, 660, 665, 667, 668, 673, 674, 679, 680, 681, 682, 689, 690, 694, 695, 696, 697, 703, 704, 708, 709, 710, 711, 717, 718, 722, 723, 724, 725, 731, 732, 736, 737, 738, 739, 745, 746, 749, 750, 753, 762, 764, 767, 769, 770, 774, 777, 779, 787, 788, 798, 800, 805, 806, 807, 808, 809, 836, 837, 849, 850, 851, 852, 854, 856, 858, 863, 864, 867, 872], "namespac": [0, 3, 10, 18, 19, 21, 24, 28, 31, 33, 34, 36, 37, 38, 40, 41, 43, 47, 48, 50, 51, 159, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 589, 590, 598, 599, 611, 625, 626, 639, 640, 653, 661, 669, 682, 697, 711, 725, 739, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 839, 842, 843, 844, 846, 847, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 866, 869], "cl": [0, 33, 34, 36, 59, 60, 158, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "declar": [0, 18, 19, 21, 24, 28, 33, 34, 36, 37, 38, 40, 41, 47, 48, 50, 151, 183, 256, 257, 261, 760, 790, 824, 844, 868], "doubl": [0, 7, 8, 18, 19, 21, 24, 33, 34, 40, 42, 47, 49, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 350, 352, 353, 354, 357, 362, 365, 370, 376, 377, 379, 380, 382, 383, 384, 385, 388, 390, 392, 398, 399, 403, 404, 406, 410, 413, 415, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 561, 775, 869], "new": [0, 11, 18, 19, 21, 24, 27, 33, 34, 36, 37, 39, 40, 41, 42, 43, 59, 62, 148, 150, 158, 177, 178, 183, 428, 429, 430, 431, 461, 534, 535, 564, 565, 596, 614, 658, 667, 686, 739, 740, 750, 751, 753, 758, 762, 767, 771, 774, 785, 788, 832, 844, 851, 858, 863], "m": [0, 18, 21, 24, 45, 57, 105, 163, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 221, 222, 224, 225, 226, 227, 228, 240, 241, 251, 253, 254, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 293, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 326, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 357, 358, 359, 371, 377, 389, 392, 393, 394, 398, 434, 435, 436, 461, 598, 611, 626, 640, 669, 682, 697, 711, 725, 836, 837, 844], "n": [0, 18, 19, 21, 24, 39, 45, 55, 57, 67, 68, 69, 70, 72, 76, 80, 97, 98, 99, 100, 103, 105, 106, 141, 149, 151, 152, 153, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 169, 172, 177, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 358, 359, 360, 361, 363, 367, 374, 377, 380, 385, 386, 389, 393, 394, 395, 396, 397, 398, 400, 402, 404, 405, 407, 408, 409, 414, 415, 434, 435, 446, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 557, 564, 566, 568, 572, 573, 574, 598, 600, 602, 682, 683, 687, 697, 698, 701, 711, 712, 715, 725, 726, 729, 739, 740, 741, 750, 756, 759, 760, 768, 769, 773, 776, 777, 785, 794, 795, 796, 798, 844, 848], "b": [0, 45, 52, 57, 148, 163, 169, 177, 195, 200, 201, 202, 203, 210, 214, 224, 225, 226, 227, 228, 230, 240, 244, 246, 248, 250, 251, 253, 254, 255, 258, 265, 273, 283, 284, 285, 286, 289, 290, 292, 316, 317, 318, 319, 322, 323, 328, 329, 345, 346, 350, 354, 357, 361, 365, 366, 370, 376, 379, 388, 390, 392, 402, 406, 407, 410, 411, 413, 434, 466, 472, 473, 484, 490, 500, 502, 503, 504, 508, 513, 519, 520, 522, 523, 525, 526, 529, 530, 531, 544, 553, 573, 760, 775, 821, 866], "p": [0, 18, 19, 21, 24, 27, 36, 39, 45, 158, 166, 265, 275, 295, 296, 297, 298, 299, 330, 331, 332, 333, 345, 349, 350, 360, 362, 366, 371, 375, 376, 377, 387, 395, 398, 399, 403, 404, 411, 513, 564, 566, 568, 572, 611, 622, 626, 636, 682, 694, 697, 708, 772, 782, 794, 795, 796, 798, 834, 844, 847], "q": [0, 183, 265, 267, 271, 291, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 324, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 367, 371, 376, 415], "1d": [0, 57, 72, 85, 86, 97, 98, 99, 100, 105, 113, 114, 120, 121, 122, 123, 124, 125, 126, 153, 156, 160, 162, 164, 168, 183], "matric": [0, 21, 27, 39, 183, 191, 192, 195, 200, 201, 202, 203, 205, 210, 214, 221, 222, 224, 225, 226, 227, 228, 240, 244, 246, 251, 253, 254, 264, 265, 268, 269, 276, 277, 280, 281, 284, 285, 289, 290, 291, 292, 293, 295, 296, 299, 300, 311, 312, 317, 318, 322, 323, 324, 325, 326, 328, 330, 333, 334, 344, 420, 421, 422, 437], "bound": [0, 36, 62, 74, 75, 151, 177, 180, 354, 365, 366, 410, 411, 560, 565, 566, 567, 568, 572, 577, 590, 608, 621, 635, 649, 678, 693, 707, 721, 735, 748, 756, 764, 793, 845, 849, 862], "mkl": [0, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552], "transpos": [0, 57, 105, 170, 183, 192, 199, 200, 201, 202, 203, 204, 205, 214, 215, 221, 222, 224, 225, 226, 227, 228, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 283, 284, 285, 286, 304, 305, 306, 307, 308, 309, 328, 329, 338, 339, 340, 341, 342, 343, 432, 434, 435, 436], "nt": [0, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "nontran": [0, 183, 214, 215, 221, 224, 225, 226, 227, 244, 245, 283, 284, 285, 286, 304, 305, 306, 307, 308, 309, 328, 329, 338, 339, 340, 341, 342, 343, 434, 435, 436], "syntax": [0, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 766, 769, 839], "void": [0, 7, 8, 10, 11, 12, 13, 36, 40, 42, 59, 62, 151, 152, 158, 167, 176, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 363, 386, 391, 408, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 588, 590, 591, 595, 596, 597, 598, 599, 602, 605, 607, 610, 611, 619, 622, 624, 626, 633, 636, 638, 640, 647, 650, 652, 653, 654, 657, 658, 660, 661, 662, 666, 667, 668, 669, 676, 679, 681, 682, 687, 691, 694, 696, 697, 701, 705, 708, 710, 711, 715, 719, 722, 724, 725, 729, 733, 736, 738, 739, 741, 747, 750, 751, 756, 758, 760, 764, 767, 772, 775, 777, 782, 788, 793, 794, 795, 796, 798, 800, 801, 802, 805, 808, 809, 810, 811, 813, 814, 816, 818, 821, 828, 831, 834, 836, 837, 838, 848, 849, 850, 851, 852, 853, 854, 858, 859, 860, 865], "exec_queu": [0, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "transa": [0, 200, 201, 202, 203, 224, 225, 251, 253, 328], "transb": [0, 200, 201, 202, 203, 224, 225], "int64_t": [0, 18, 19, 21, 24, 28, 33, 34, 36, 40, 41, 42, 48, 58, 158, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 366, 386, 421, 422, 423, 424, 428, 429, 430, 431, 438, 443, 446, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "k": [0, 17, 22, 23, 25, 43, 51, 105, 151, 158, 162, 163, 191, 195, 200, 201, 202, 203, 209, 214, 215, 233, 244, 245, 246, 247, 248, 250, 258, 276, 293, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 326, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 361, 362, 366, 371, 374, 377, 387, 389, 398, 399, 402, 403, 404, 405, 407, 411, 434, 557, 559, 589, 598, 603, 604, 605, 611, 616, 624, 626, 630, 638, 640, 644, 652, 669, 673, 681, 682, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 738, 739, 769, 770, 811, 817, 827, 833, 844], "t": [0, 18, 21, 27, 33, 34, 39, 52, 57, 59, 61, 62, 99, 100, 148, 151, 152, 158, 161, 169, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 385, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 569, 573, 590, 594, 595, 596, 598, 599, 601, 606, 607, 611, 613, 617, 618, 619, 622, 625, 626, 628, 631, 632, 633, 636, 639, 640, 645, 646, 647, 650, 653, 655, 656, 657, 658, 661, 665, 666, 667, 669, 674, 675, 676, 679, 682, 685, 690, 691, 694, 697, 700, 704, 705, 708, 711, 714, 718, 719, 722, 725, 728, 732, 733, 736, 739, 745, 746, 747, 754, 755, 756, 764, 766, 769, 771, 777, 779, 780, 781, 784, 785, 787, 788, 794, 796, 798, 810, 815, 831, 835, 858, 859, 860, 861], "alpha": [0, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 185, 186, 187, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 251, 253, 254, 264, 350, 353, 371, 376, 383, 406, 413, 434, 435, 436, 461], "lda": [0, 57, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 225, 226, 227, 228, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 461], "ldb": [0, 200, 201, 202, 203, 210, 214, 224, 225, 226, 227, 228, 240, 244, 251, 253, 254, 283, 284, 285, 286, 289, 290, 316, 317, 318, 319, 322, 323, 328, 329], "beta": [0, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 185, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 214, 215, 216, 224, 225, 233, 236, 240, 241, 244, 245, 246, 251, 253, 264, 346, 352, 353, 357, 370, 371, 379, 382, 383, 388, 390, 392, 406, 413, 434, 435, 461], "ldc": [0, 195, 200, 201, 202, 203, 210, 214, 215, 224, 225, 240, 244, 245, 246, 251, 253, 304, 305, 306, 307, 308, 309, 338, 339, 340, 341, 342, 343], "bla": [0, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 344, 419, 420, 421, 422, 423, 424, 433, 434, 435, 436, 438, 871], "0": [0, 10, 11, 16, 18, 19, 21, 24, 28, 32, 33, 34, 36, 37, 40, 41, 45, 48, 57, 59, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 165, 167, 168, 169, 170, 172, 176, 178, 179, 181, 183, 187, 194, 195, 200, 201, 202, 203, 205, 210, 219, 220, 222, 225, 228, 230, 231, 232, 235, 240, 246, 251, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 365, 366, 371, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 418, 420, 421, 422, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 521, 522, 524, 526, 527, 528, 529, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 553, 557, 558, 559, 561, 568, 572, 573, 583, 584, 598, 602, 604, 624, 681, 696, 738, 758, 760, 763, 769, 771, 772, 773, 775, 777, 782, 785, 788, 793, 844, 847, 848, 849, 850, 851, 853, 872], "exit": [0, 273, 287, 289, 291, 320, 322, 324, 836, 852, 853], "destructor": [0, 739, 765, 786, 811, 814, 817, 818, 824, 827, 828, 829, 830, 832, 833, 834, 835, 844, 854, 869], "result": [0, 7, 11, 29, 37, 39, 42, 44, 46, 48, 49, 51, 52, 53, 54, 55, 57, 120, 121, 122, 123, 124, 125, 126, 139, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 162, 163, 165, 166, 167, 169, 171, 176, 179, 180, 184, 186, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 217, 219, 220, 223, 224, 225, 232, 233, 235, 236, 237, 240, 241, 242, 243, 256, 257, 258, 261, 263, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 295, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 400, 434, 435, 436, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 561, 564, 572, 573, 590, 598, 604, 605, 609, 623, 637, 651, 659, 661, 680, 695, 709, 723, 737, 752, 756, 760, 762, 763, 767, 771, 773, 788, 793, 794, 796, 798, 818, 819, 820, 821, 822, 823, 824, 851, 852, 858, 860, 861], "back": [0, 7, 39, 59, 61, 67, 68, 77, 78, 79, 80, 81, 82, 106, 107, 156, 164, 167, 178, 262, 739, 743, 796], "With": [0, 53, 59, 148, 169, 183, 752, 793, 847], "do": [0, 7, 11, 39, 42, 53, 55, 57, 59, 60, 67, 106, 151, 152, 153, 168, 176, 177, 183, 251, 253, 254, 261, 295, 344, 432, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 565, 566, 573, 577, 579, 580, 584, 588, 622, 679, 694, 736, 752, 753, 758, 762, 767, 774, 785, 788, 793, 807, 837, 850, 851, 867], "addit": [0, 4, 9, 38, 39, 41, 42, 50, 52, 54, 57, 59, 66, 77, 78, 79, 81, 105, 126, 148, 153, 154, 156, 163, 174, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 372, 397, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 466, 563, 565, 573, 577, 579, 586, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 752, 810, 815, 851], "simpl": [0, 36, 152, 760, 773], "should": [0, 7, 10, 11, 12, 21, 30, 33, 38, 39, 55, 57, 59, 61, 62, 66, 68, 69, 71, 72, 76, 79, 81, 82, 84, 85, 86, 97, 98, 108, 109, 112, 120, 121, 122, 123, 124, 125, 126, 129, 142, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 400, 408, 409, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 556, 568, 569, 571, 572, 576, 577, 578, 579, 580, 605, 622, 624, 630, 636, 638, 640, 644, 650, 652, 679, 681, 694, 696, 703, 708, 710, 717, 722, 724, 736, 738, 769, 783, 789, 791, 793, 796, 813, 815, 818, 824, 825, 827, 845, 847, 850, 851, 853, 858, 860], "read": [0, 30, 33, 34, 35, 36, 39, 40, 48, 59, 183, 258, 259, 261, 262, 263, 433, 434, 435, 436, 560, 588, 599, 785, 802, 805, 809], "lambda": [0, 262, 287, 289, 290, 320, 322, 323, 347, 362, 371, 403, 404], "element": [0, 7, 21, 26, 27, 28, 33, 36, 39, 40, 41, 42, 45, 57, 61, 62, 64, 66, 74, 80, 83, 84, 85, 86, 87, 90, 91, 93, 95, 99, 100, 101, 102, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 134, 136, 138, 139, 140, 141, 142, 143, 145, 148, 151, 156, 157, 158, 164, 176, 178, 179, 181, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 201, 202, 205, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 225, 227, 228, 229, 231, 232, 234, 235, 239, 246, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 358, 359, 360, 361, 363, 369, 389, 417, 420, 421, 422, 424, 428, 429, 431, 446, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 572, 573, 574, 593, 594, 599, 603, 604, 606, 608, 609, 610, 611, 615, 616, 617, 621, 623, 626, 629, 630, 631, 635, 637, 640, 643, 644, 645, 649, 651, 656, 659, 660, 664, 665, 669, 672, 673, 674, 678, 680, 682, 683, 687, 688, 689, 690, 693, 695, 697, 698, 701, 702, 703, 704, 707, 709, 711, 712, 715, 716, 717, 718, 721, 723, 725, 726, 729, 730, 731, 732, 735, 737, 739, 740, 744, 745, 748, 749, 750, 756, 766, 769, 786, 790, 813, 815, 821, 826, 832, 833, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 871], "parallel_for": [0, 36, 367, 368, 556, 560, 572, 580, 581, 811, 814, 816, 817, 824, 826, 848, 850], "map": [0, 10, 11, 47, 59, 83, 85, 86, 116, 146, 150, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 564, 568, 569, 588, 756, 791, 845, 858, 871], "leav": [0, 583, 852], "scope": [0, 11, 35, 40, 41, 148, 150, 151, 183, 258, 259, 260, 261, 262, 512, 549, 805, 809, 836, 837, 847, 853], "includ": [0, 11, 22, 28, 33, 34, 36, 39, 42, 44, 47, 48, 54, 61, 148, 149, 151, 156, 158, 173, 174, 175, 177, 178, 179, 181, 183, 189, 190, 191, 192, 264, 289, 295, 322, 367, 368, 415, 416, 458, 461, 551, 557, 561, 567, 572, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 755, 760, 763, 773, 775, 777, 779, 780, 785, 788, 791, 794, 795, 837, 844, 845, 850, 851, 871, 872], "hpp": [0, 18, 19, 21, 24, 28, 30, 33, 34, 36, 37, 40, 41, 48, 367, 415, 458], "int": [0, 7, 8, 10, 11, 33, 34, 36, 57, 59, 149, 151, 152, 154, 155, 158, 170, 171, 172, 177, 179, 181, 345, 350, 353, 361, 367, 374, 376, 380, 383, 384, 402, 407, 415, 458, 557, 558, 559, 560, 561, 567, 573, 586, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 758, 760, 763, 773, 775, 777, 785, 788, 790, 793, 810, 817, 844, 848, 850, 851, 853], "main": [0, 10, 11, 29, 30, 33, 34, 36, 39, 46, 53, 57, 148, 150, 152, 344, 367, 368, 415, 433, 458, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 760, 763, 773, 775, 777, 785, 788, 850, 851], "ahost": 0, "bhost": 0, "chost": 0, "2d": [0, 57, 105, 151, 153, 156, 157, 160, 161, 162, 163, 164, 165, 168, 170], "2": [0, 18, 19, 24, 27, 28, 33, 34, 36, 45, 59, 69, 70, 71, 77, 79, 80, 81, 82, 85, 86, 98, 99, 100, 105, 111, 113, 114, 121, 129, 139, 152, 153, 157, 158, 161, 162, 169, 176, 183, 188, 189, 199, 204, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 227, 231, 232, 233, 236, 237, 238, 241, 242, 243, 247, 248, 249, 250, 252, 255, 258, 259, 260, 262, 273, 287, 289, 290, 293, 304, 306, 320, 322, 323, 326, 338, 340, 344, 345, 347, 348, 354, 357, 358, 359, 360, 361, 362, 363, 371, 372, 374, 379, 380, 384, 385, 387, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 404, 405, 406, 407, 408, 409, 414, 415, 420, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 484, 486, 488, 490, 491, 492, 493, 494, 497, 500, 502, 503, 504, 508, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 526, 528, 529, 531, 532, 537, 538, 539, 540, 544, 546, 548, 553, 557, 558, 559, 560, 567, 568, 573, 584, 613, 628, 642, 671, 763, 775, 788], "handler": [0, 36, 367, 368, 463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 551, 554], "h": [0, 52, 57, 69, 70, 72, 149, 151, 153, 156, 160, 162, 164, 165, 167, 199, 200, 201, 202, 203, 204, 205, 207, 212, 213, 214, 215, 217, 218, 221, 222, 224, 225, 226, 227, 228, 231, 232, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 273, 274, 287, 289, 291, 293, 294, 304, 306, 310, 311, 316, 317, 318, 319, 328, 330, 336, 338, 339, 340, 341, 342, 343, 345, 434, 435, 436, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 586, 589, 590, 592, 598, 601, 613, 628, 640, 642, 655, 661, 663, 669, 671, 682, 685, 697, 700, 711, 714, 725, 728, 739, 742, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 785, 786, 787, 788, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 827, 844, 847, 848, 849, 850, 851, 852, 853, 854, 856, 858, 859, 866, 868], "from": [0, 1, 7, 9, 10, 11, 18, 19, 24, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 52, 57, 59, 60, 61, 62, 73, 97, 98, 99, 100, 105, 113, 114, 120, 121, 122, 123, 124, 125, 126, 127, 129, 134, 135, 140, 141, 145, 148, 149, 150, 151, 155, 158, 159, 162, 164, 167, 169, 170, 176, 178, 179, 181, 183, 222, 225, 227, 228, 231, 258, 259, 261, 262, 268, 284, 285, 289, 295, 298, 299, 304, 305, 306, 307, 308, 309, 311, 312, 317, 318, 322, 332, 333, 338, 339, 340, 341, 342, 343, 344, 348, 355, 356, 359, 368, 369, 370, 371, 372, 373, 374, 386, 389, 391, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 416, 417, 418, 433, 446, 455, 502, 503, 519, 520, 525, 533, 544, 552, 553, 557, 558, 559, 561, 563, 564, 565, 566, 568, 569, 572, 573, 574, 576, 577, 578, 579, 580, 581, 584, 585, 586, 588, 590, 593, 594, 596, 597, 598, 603, 605, 606, 610, 611, 614, 615, 622, 624, 626, 629, 636, 638, 640, 643, 650, 651, 652, 653, 656, 658, 659, 660, 661, 664, 665, 667, 668, 669, 672, 679, 680, 681, 682, 683, 686, 688, 690, 694, 695, 696, 697, 698, 702, 708, 709, 710, 711, 712, 716, 722, 724, 725, 726, 730, 732, 736, 737, 738, 739, 740, 744, 750, 752, 753, 755, 756, 758, 759, 760, 761, 762, 763, 766, 767, 769, 770, 771, 772, 774, 775, 777, 779, 780, 782, 783, 785, 786, 787, 788, 790, 791, 792, 793, 794, 796, 798, 802, 808, 809, 810, 813, 817, 821, 825, 836, 837, 844, 847, 848, 849, 851, 852, 858, 861, 866, 867, 870], "auto": [0, 10, 18, 19, 21, 24, 33, 34, 36, 37, 47, 48, 61, 66, 84, 108, 109, 112, 129, 139, 140, 142, 151, 156, 169, 177, 259, 355, 415, 458, 561, 566, 851, 853], "get_access": 0, "mode": [0, 42, 43, 44, 49, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 183, 370, 371, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 568, 569, 570, 793], "widtha": 0, "get_rang": 0, "id": [0, 36, 40, 41, 62, 148, 183, 276, 284, 311, 317, 573, 603, 604, 605, 616, 624, 630, 638, 644, 652, 673, 681, 682, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 738, 772, 782, 785, 790, 851, 859], "index": [0, 18, 28, 29, 33, 36, 52, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 181, 183, 189, 219, 220, 227, 258, 259, 262, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 344, 391, 397, 414, 420, 421, 422, 428, 429, 489, 565, 566, 739, 766, 786, 787, 790, 816, 817, 851, 853], "row": [0, 18, 19, 21, 28, 33, 35, 39, 40, 41, 42, 43, 45, 48, 57, 105, 148, 182, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 285, 286, 287, 289, 293, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 309, 320, 322, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 420, 421, 422, 423, 428, 429, 430, 432, 541, 558, 559], "col": [0, 202, 558, 559], "sum": [0, 7, 15, 21, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 184, 189, 224, 229, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 377, 389, 398, 399, 420, 441, 442, 451, 453, 454, 508, 553, 568, 572, 573, 773, 817, 821, 823, 866, 869], "oneapi": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872], "softwar": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872], "onedpl": [1, 173, 175, 177, 178, 179, 180, 181, 870], "companion": [1, 174, 870], "compil": [1, 36, 42, 47, 50, 61, 62, 63, 105, 178, 180, 261, 557, 583, 584, 586, 844, 870], "program": [1, 3, 31, 35, 38, 39, 42, 43, 44, 59, 63, 150, 156, 159, 160, 169, 174, 178, 262, 344, 551, 583, 585, 682, 697, 711, 725, 791, 815, 824, 848, 850, 868, 870, 871], "api": [1, 10, 36, 37, 41, 42, 43, 44, 58, 61, 62, 63, 149, 158, 159, 174, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 264, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 418, 421, 422, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 555, 585, 752, 791, 845, 851, 868, 870, 871], "stl": [1, 183, 560, 811, 870], "extens": [1, 43, 49, 61, 148, 149, 173, 174, 183, 185, 187, 188, 194, 195, 201, 202, 203, 205, 221, 222, 224, 225, 226, 227, 228, 246, 254, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 557, 559, 791, 806, 807, 844, 870], "onednn": [1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 147, 148, 150, 151, 156, 159, 160, 167, 168, 169, 870], "high": [1, 42, 149, 150, 156, 164, 345, 361, 370, 402, 485, 486, 488, 506, 535, 536, 537, 538, 540, 545, 546, 548, 555, 836, 851, 870, 871], "implement": [1, 9, 18, 19, 21, 22, 24, 27, 28, 29, 30, 35, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 83, 85, 86, 105, 116, 146, 147, 148, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 173, 174, 178, 180, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 358, 372, 381, 385, 393, 398, 401, 404, 409, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 461, 513, 526, 561, 570, 573, 586, 590, 598, 611, 626, 640, 653, 661, 669, 682, 684, 697, 699, 711, 713, 725, 727, 739, 752, 753, 758, 762, 763, 768, 769, 774, 776, 778, 783, 786, 790, 791, 792, 794, 796, 798, 806, 807, 810, 836, 837, 844, 845, 847, 848, 849, 859, 866, 869, 870, 871], "primit": [1, 4, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 799, 870], "learn": [1, 4, 27, 48, 49, 51, 54, 61, 148, 149, 152, 870], "framework": [1, 44, 61, 146, 148, 149, 870], "oneccl": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 870], "scale": [1, 4, 27, 42, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 185, 187, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 251, 253, 254, 262, 350, 353, 357, 371, 376, 379, 383, 392, 397, 513, 796, 870, 871], "multipl": [1, 4, 7, 10, 11, 15, 42, 52, 54, 55, 57, 59, 61, 62, 125, 148, 150, 151, 152, 153, 154, 158, 159, 161, 166, 183, 187, 194, 195, 201, 202, 205, 210, 214, 222, 225, 228, 240, 244, 246, 251, 254, 262, 264, 283, 284, 295, 316, 317, 328, 345, 348, 358, 359, 360, 372, 393, 394, 395, 397, 414, 421, 422, 432, 434, 435, 436, 489, 522, 523, 564, 569, 570, 572, 573, 587, 590, 599, 600, 605, 612, 622, 626, 627, 630, 638, 640, 641, 644, 652, 653, 661, 670, 679, 684, 694, 697, 699, 703, 710, 711, 717, 724, 727, 736, 739, 752, 766, 769, 773, 786, 794, 806, 807, 817, 834, 837, 849, 858, 861, 870], "algorithm": [1, 4, 18, 19, 21, 24, 27, 29, 30, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 261, 263, 264, 287, 289, 295, 320, 322, 358, 359, 360, 361, 371, 374, 393, 394, 395, 396, 397, 400, 402, 405, 407, 409, 414, 415, 434, 435, 436, 458, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 682, 697, 711, 725, 791, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 841, 842, 843, 845, 850, 853, 870, 871], "scienc": [1, 345, 396, 870], "onetbb": [1, 561, 582, 585, 586, 587, 751, 752, 775, 789, 791, 792, 797, 798, 810, 845, 847, 848, 850, 851, 852, 870], "ad": [1, 39, 42, 62, 69, 70, 71, 72, 99, 100, 148, 151, 175, 178, 180, 185, 192, 235, 253, 421, 422, 425, 426, 427, 434, 435, 436, 565, 767, 770, 779, 780, 854, 870], "base": [1, 9, 28, 29, 41, 42, 47, 51, 53, 54, 55, 57, 100, 101, 110, 113, 115, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 175, 179, 181, 183, 219, 220, 231, 232, 258, 344, 348, 361, 371, 372, 374, 400, 402, 408, 409, 420, 421, 422, 428, 429, 496, 497, 515, 517, 553, 577, 752, 765, 769, 781, 784, 844, 851, 870, 871], "complex": [1, 39, 44, 46, 150, 156, 159, 183, 184, 185, 186, 187, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 304, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 438, 462, 463, 464, 466, 467, 468, 469, 471, 474, 481, 483, 485, 487, 489, 490, 495, 514, 515, 522, 523, 526, 530, 536, 539, 541, 543, 544, 545, 547, 553, 564, 566, 572, 573, 574, 870], "multiprocessor": [1, 372, 870], "engin": [1, 53, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 181, 351, 355, 356, 358, 359, 360, 361, 363, 364, 367, 368, 369, 373, 374, 378, 381, 386, 391, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 408, 409, 412, 414, 415, 416, 417, 845, 870], "financi": [1, 551, 870], "concept": [2, 3, 28, 30, 36, 38, 41, 42, 44, 148, 150, 183, 573, 789, 801, 804, 812], "context": [2, 3, 7, 10, 12, 45, 57, 59, 60, 148, 149, 150, 177, 181, 259, 262, 560, 564, 565, 566, 567, 568, 572, 764, 824, 825, 848, 849, 854], "kei": [2, 3, 10, 30, 148, 176, 361, 374, 402, 574, 588, 589, 598, 600, 601, 603, 604, 605, 606, 607, 611, 612, 613, 614, 616, 617, 618, 619, 620, 622, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 636, 638, 639, 640, 641, 642, 644, 648, 652, 669, 670, 671, 673, 677, 679, 681, 682, 683, 684, 685, 686, 689, 690, 691, 692, 694, 696, 697, 698, 699, 700, 703, 704, 705, 706, 708, 710, 711, 712, 717, 718, 720, 724, 725, 726, 731, 734, 738, 769, 770, 827, 833, 859, 861], "store": [2, 3, 7, 10, 18, 19, 21, 24, 26, 33, 34, 36, 37, 39, 40, 41, 42, 47, 48, 52, 54, 55, 56, 57, 59, 62, 140, 150, 151, 152, 156, 159, 169, 176, 183, 184, 195, 196, 197, 198, 200, 201, 202, 203, 210, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 235, 240, 244, 245, 246, 251, 253, 254, 256, 257, 258, 259, 263, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 336, 338, 340, 342, 344, 420, 489, 551, 591, 600, 611, 612, 625, 626, 627, 639, 640, 641, 654, 662, 670, 682, 683, 684, 687, 697, 698, 699, 701, 711, 712, 713, 715, 726, 727, 729, 741, 761, 769, 777, 779, 787, 788, 861], "stream": [2, 3, 7, 10, 39, 44, 46, 53, 54, 57, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 372, 391, 405, 408, 568, 571, 813], "oper": [2, 3, 4, 8, 9, 10, 15, 29, 35, 36, 39, 41, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 63, 115, 149, 150, 151, 152, 158, 159, 176, 177, 178, 179, 181, 187, 189, 190, 191, 192, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 262, 263, 264, 345, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 420, 421, 422, 423, 424, 432, 433, 434, 435, 436, 437, 438, 551, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 580, 584, 588, 590, 594, 596, 598, 599, 606, 611, 617, 618, 625, 626, 631, 632, 639, 640, 645, 646, 653, 656, 659, 661, 665, 669, 674, 675, 682, 690, 697, 704, 711, 718, 725, 732, 739, 743, 745, 746, 760, 763, 764, 773, 775, 793, 794, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 841, 850, 856, 858, 859, 866, 867, 869, 871], "attribut": [2, 3, 7, 8, 14, 15, 37, 42, 55, 115, 147, 148, 150, 152, 158, 159, 161, 872], "datatyp": [2, 3, 7, 12, 14, 55, 151, 195, 199, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 421, 422, 423, 424, 428, 429, 430, 431, 438], "custom": [2, 3, 7, 12, 15, 30, 36, 44, 151, 752, 791, 871], "reduct": [2, 3, 7, 12, 14, 21, 42, 120, 121, 122, 123, 124, 125, 126, 151, 158, 159, 176, 265, 564, 572, 573, 820, 858, 860], "allgatherv": [2, 3, 4], "allreduc": [2, 3, 4, 10, 12, 15], "alltoallv": [2, 3, 4], "barrier": [2, 3], "broadcast": [2, 3, 4, 59, 66, 72, 84, 105, 108, 109, 112, 129, 139, 140, 142, 147, 151, 152, 154, 155, 163, 165, 167, 172, 753, 754, 758, 760, 761, 762, 766, 767, 769, 770, 771, 773, 774, 775, 777, 786, 788, 831], "reduc": [2, 3, 4, 12, 15, 48, 53, 55, 120, 121, 122, 123, 124, 125, 126, 148, 150, 151, 156, 166, 260, 265, 291, 295, 296, 302, 308, 324, 331, 336, 342, 371, 572, 750, 763, 775, 793], "reducescatt": [2, 3, 12, 15], "point": [2, 3, 8, 9, 18, 19, 21, 24, 26, 28, 29, 33, 34, 36, 40, 49, 53, 54, 55, 61, 62, 85, 149, 152, 154, 156, 158, 160, 163, 166, 167, 168, 169, 181, 183, 189, 222, 224, 225, 228, 229, 230, 231, 261, 262, 263, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 345, 355, 373, 386, 421, 422, 423, 424, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 476, 489, 525, 532, 541, 553, 566, 572, 573, 599, 622, 624, 636, 638, 650, 652, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 793, 794, 795, 796, 798, 838, 847, 848, 849, 850, 851, 854, 862, 866], "send": [2, 3, 752, 784, 786], "recv": [2, 3], "progress": [2, 3, 7, 11, 14, 24, 148, 256, 257, 261], "track": [2, 3, 7, 11, 14, 89, 148, 256, 257], "error": [2, 3, 31, 43, 50, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 583, 790], "handl": [2, 3, 7, 8, 11, 31, 43, 59, 152, 167, 182, 258, 264, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 555, 584, 587, 611, 622, 624, 626, 636, 638, 640, 650, 652, 669, 679, 681, 682, 694, 696, 697, 708, 710, 711, 722, 724, 725, 736, 738, 761, 762, 763, 764, 850], "except": [2, 3, 11, 13, 31, 36, 50, 59, 60, 62, 76, 77, 97, 148, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 181, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 357, 362, 365, 366, 370, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 399, 403, 404, 406, 410, 411, 413, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 557, 561, 573, 584, 596, 614, 684, 686, 696, 699, 710, 713, 724, 727, 738, 741, 750, 764, 779, 780, 785, 787, 791, 793, 836, 847, 849, 850, 851, 852, 853, 854, 858, 859, 863], "classif": [2, 3, 22, 23, 31, 42, 43, 44, 47, 49], "introduct": [3, 36, 43, 149, 167, 258, 263, 810, 841, 842], "ccl": [3, 7, 8, 9, 10, 11, 12], "current": [3, 7, 18, 24, 31, 39, 43, 151, 167, 169, 183, 290, 292, 321, 368, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 408, 409, 414, 416, 421, 422, 506, 518, 524, 525, 532, 553, 586, 605, 751, 755, 758, 771, 779, 780, 783, 787, 790, 793, 800, 802, 805, 808, 809, 837, 838, 847, 848, 849, 851, 853, 858, 863, 869], "version": [3, 18, 27, 31, 43, 57, 150, 153, 155, 172, 174, 178, 182, 261, 272, 358, 393, 461, 506, 526, 535, 560, 573, 582, 584, 791, 842, 843, 851, 853], "specif": [3, 7, 8, 9, 10, 11, 12, 14, 15, 27, 28, 30, 31, 35, 39, 41, 43, 44, 47, 49, 50, 54, 57, 58, 59, 60, 62, 129, 148, 149, 150, 151, 157, 159, 162, 166, 173, 174, 178, 182, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 352, 354, 365, 370, 374, 412, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 466, 468, 471, 482, 485, 489, 490, 507, 522, 526, 530, 534, 536, 544, 545, 555, 586, 588, 684, 696, 699, 710, 713, 724, 727, 738, 741, 750, 751, 752, 756, 766, 768, 769, 776, 791, 793, 810, 836, 837, 842, 846, 847, 848, 849, 851, 858, 859, 860, 872], "model": [3, 22, 42, 43, 44, 48, 51, 52, 54, 63, 83, 116, 149, 150, 151, 156, 159, 160, 169, 345, 368, 416, 418, 451, 555, 791, 794, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 817, 824, 862, 871], "gener": [3, 6, 9, 18, 38, 42, 43, 44, 47, 49, 51, 52, 57, 59, 62, 115, 153, 156, 159, 161, 163, 164, 165, 168, 169, 171, 174, 183, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 214, 215, 221, 222, 224, 225, 226, 227, 228, 240, 244, 245, 246, 251, 253, 254, 258, 262, 265, 267, 268, 271, 273, 275, 276, 279, 280, 289, 295, 296, 297, 298, 299, 302, 311, 317, 322, 330, 331, 332, 333, 336, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 433, 434, 435, 436, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 555, 556, 566, 568, 572, 573, 582, 583, 586, 592, 601, 613, 628, 642, 655, 663, 671, 682, 685, 697, 700, 711, 714, 725, 728, 742, 767, 769, 774, 786, 791, 795, 824, 832, 842, 844, 845, 851, 853, 866, 870], "workflow": [3, 6, 44, 48, 260], "pattern": [4, 28, 61, 148, 150, 152, 264, 557, 561, 573, 576, 579, 810, 836], "occur": [4, 9, 29, 46, 183, 275, 276, 293, 326, 466, 489, 490, 522, 525, 526, 544, 566, 739, 761, 790], "up": [4, 11, 28, 43, 47, 57, 152, 164, 372, 396, 439, 440, 441, 442, 451, 452, 453, 454, 573, 596, 760, 771, 773, 852, 868], "platform": [4, 148, 181, 791, 793, 871], "out": [4, 7, 10, 11, 21, 29, 39, 40, 41, 55, 57, 60, 77, 78, 79, 80, 81, 82, 148, 150, 151, 153, 155, 158, 161, 164, 167, 170, 172, 177, 183, 192, 224, 225, 226, 227, 228, 256, 257, 258, 259, 263, 482, 489, 507, 534, 557, 568, 588, 590, 661, 760, 770, 780, 836, 849], "cluster": [4, 18, 19, 22, 42, 43, 44], "node": [4, 24, 26, 44, 46, 140, 391, 587, 611, 626, 640, 669, 682, 697, 711, 725, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 767, 769, 771, 772, 773, 774, 777, 779, 780, 781, 782, 783, 784, 785, 786, 788, 790, 843, 850, 851], "dl": [4, 148], "reduce_scatt": [4, 7], "expos": [4, 39, 42, 47, 150, 151, 153, 161, 588], "control": [4, 11, 42, 49, 54, 60, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 97, 98, 105, 106, 107, 140, 150, 151, 153, 161, 183, 263, 506, 535, 583, 584, 752, 775, 824, 843, 847, 871], "over": [4, 24, 36, 42, 55, 68, 76, 79, 81, 82, 99, 100, 120, 121, 122, 123, 124, 125, 126, 151, 155, 158, 159, 161, 169, 171, 176, 177, 179, 183, 304, 306, 338, 340, 365, 366, 410, 411, 418, 557, 564, 565, 566, 572, 573, 775, 793, 795, 851, 858, 860, 862, 871], "optim": [4, 30, 43, 44, 49, 58, 59, 62, 85, 86, 148, 149, 150, 153, 156, 157, 160, 161, 162, 163, 164, 167, 169, 170, 264, 432, 434, 435, 436, 576, 577, 763], "priorit": [4, 775], "persist": [4, 12, 434, 435, 436], "decoupl": 4, "time": [4, 18, 19, 21, 39, 42, 44, 45, 47, 50, 55, 57, 59, 62, 80, 81, 83, 112, 148, 150, 151, 153, 156, 158, 159, 160, 161, 162, 163, 164, 168, 170, 178, 258, 259, 261, 262, 264, 265, 267, 268, 271, 273, 275, 276, 279, 280, 293, 296, 297, 298, 299, 302, 304, 306, 326, 330, 331, 332, 333, 336, 338, 340, 374, 434, 435, 436, 461, 570, 573, 574, 586, 758, 760, 763, 769, 773, 775, 788, 793, 800, 805, 834, 837, 839, 842, 844, 845, 847, 851, 853, 858, 861, 869], "repetit": 4, "section": [5, 14, 18, 19, 21, 24, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 54, 57, 62, 149, 150, 151, 153, 156, 158, 163, 173, 183, 260, 261, 263, 264, 368, 372, 416, 553, 561, 563, 564, 565, 567, 572, 573, 574, 575, 576, 577, 578, 579, 582, 584, 585, 590, 591, 592, 593, 596, 597, 598, 600, 601, 603, 604, 605, 610, 611, 612, 613, 614, 615, 616, 622, 624, 626, 627, 628, 629, 630, 636, 638, 640, 641, 642, 643, 644, 650, 652, 653, 654, 655, 658, 660, 661, 662, 663, 664, 667, 668, 669, 670, 671, 672, 673, 679, 681, 682, 683, 684, 685, 686, 688, 689, 694, 696, 697, 698, 699, 700, 702, 703, 708, 710, 711, 712, 713, 714, 716, 717, 722, 724, 725, 726, 727, 728, 730, 731, 736, 738, 739, 740, 741, 742, 743, 744, 750, 753, 755, 756, 758, 762, 763, 766, 767, 769, 771, 774, 777, 779, 780, 785, 787, 788, 789, 792, 794, 795, 796, 798, 800, 802, 805, 806, 807, 808, 809, 810, 815, 817, 851, 853, 854, 857, 858, 860, 863, 865, 866, 871], "describ": [5, 11, 21, 28, 30, 38, 41, 42, 50, 51, 52, 55, 56, 57, 59, 61, 62, 97, 98, 141, 148, 150, 151, 159, 167, 169, 173, 179, 181, 183, 189, 190, 191, 202, 214, 244, 264, 296, 330, 358, 359, 360, 361, 367, 396, 397, 407, 421, 422, 428, 429, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 553, 555, 561, 567, 582, 585, 586, 592, 601, 605, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 789, 792, 793, 800, 805, 810, 815, 844, 845, 851, 853, 854, 857, 858, 860], "convent": [5, 59, 64, 67, 74, 76, 80, 87, 90, 91, 95, 101, 102, 105, 106, 117, 130, 132, 134, 143, 149, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 259, 344, 467, 585, 789, 810, 824, 841, 842, 867], "shall": [5, 7, 9, 11, 12, 13, 18, 19, 21, 24, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 50, 55, 148, 151, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436], "public": [5, 11, 18, 19, 21, 24, 27, 28, 29, 30, 33, 34, 36, 37, 38, 40, 41, 47, 50, 59, 60, 61, 62, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 261, 345, 349, 350, 352, 353, 354, 357, 358, 359, 360, 361, 362, 365, 366, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 476, 557, 558, 559, 560, 561, 562, 563, 567, 569, 571, 573, 576, 577, 578, 579, 580, 585, 588, 590, 598, 611, 625, 626, 639, 640, 653, 661, 669, 682, 697, 711, 725, 751, 753, 754, 755, 756, 758, 762, 764, 765, 766, 767, 769, 771, 773, 774, 777, 779, 780, 785, 786, 787, 788, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837, 844, 847, 849, 850, 851, 852, 854, 856, 858, 859, 866, 869], "altern": [5, 18, 60, 148, 150, 168, 181, 182, 261, 485, 536, 537, 545], "consid": [5, 42, 55, 57, 59, 60, 153, 156, 161, 176, 182, 258, 259, 261, 262, 389, 585, 775, 824, 851], "alia": [5, 18, 19, 21, 24, 38, 47, 50, 57, 150, 158, 169, 569, 585, 590, 592, 598, 611, 626, 640, 642, 653, 655, 661, 663, 669, 671, 682, 697, 711, 714, 725, 728, 739, 742, 758, 762, 766, 767, 769, 774, 785, 794, 796, 798, 869], "pointtopoint": 7, "These": [7, 22, 35, 44, 49, 55, 57, 157, 177, 180, 181, 183, 192, 256, 257, 259, 261, 295, 344, 368, 372, 396, 416, 418, 434, 435, 436, 461, 485, 536, 537, 545, 554, 568, 579, 588, 590, 598, 601, 608, 611, 613, 616, 621, 626, 628, 630, 635, 640, 642, 644, 649, 653, 655, 661, 669, 671, 673, 678, 682, 685, 689, 693, 697, 698, 700, 703, 707, 711, 712, 714, 717, 721, 725, 728, 731, 735, 739, 748, 752, 785, 793, 794, 796, 798, 866, 869], "mean": [7, 17, 21, 22, 39, 42, 43, 47, 50, 51, 52, 55, 57, 59, 61, 62, 69, 70, 71, 77, 78, 79, 80, 81, 82, 99, 100, 106, 107, 123, 140, 141, 148, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 170, 171, 172, 176, 354, 357, 370, 384, 385, 390, 392, 404, 432, 452, 454, 458, 489, 506, 568, 570, 763, 767, 783, 844, 851], "particip": [7, 11, 564, 579, 592, 601, 603, 604, 605, 613, 616, 622, 624, 628, 630, 636, 638, 642, 644, 652, 655, 663, 671, 673, 681, 685, 689, 694, 696, 700, 703, 708, 710, 714, 717, 724, 728, 731, 738, 740, 741, 742, 793, 848, 851, 852, 854, 861], "rank": [7, 10, 11, 57, 76, 83, 85, 86, 99, 100, 105, 116, 120, 121, 122, 123, 124, 125, 126, 148, 190, 191, 206, 207, 208, 212, 213, 214, 215, 217, 218, 237, 238, 242, 243, 244, 245, 246], "make": [7, 36, 38, 43, 44, 48, 50, 57, 105, 146, 150, 151, 152, 159, 258, 261, 262, 368, 396, 564, 566, 572, 573, 578, 580, 752, 756, 772, 775, 791, 845, 871], "abil": [7, 11, 13, 36, 39, 183], "either": [7, 11, 33, 34, 36, 39, 42, 47, 53, 55, 59, 68, 69, 71, 79, 81, 82, 97, 98, 129, 148, 150, 153, 154, 155, 158, 159, 161, 162, 164, 165, 166, 168, 171, 172, 179, 183, 210, 219, 220, 240, 251, 253, 254, 258, 262, 264, 291, 293, 308, 309, 310, 311, 326, 342, 343, 434, 435, 436, 461, 489, 526, 530, 558, 559, 568, 593, 597, 603, 610, 624, 638, 652, 660, 664, 668, 681, 683, 696, 698, 710, 712, 724, 726, 738, 750, 753, 762, 774, 845, 852, 854, 865], "addition": [7, 21, 105, 148, 150, 152, 175, 181, 258, 825], "accept": [7, 29, 38, 42, 47, 50, 55, 63, 68, 81, 82, 107, 146, 150, 177, 183, 347, 371, 461, 565, 566, 567, 572, 577, 742, 752, 753, 761, 762, 763, 767, 770, 771, 772, 774, 782, 787, 810, 815, 838, 848], "mai": [7, 8, 11, 12, 18, 36, 39, 45, 47, 49, 54, 55, 57, 59, 61, 62, 140, 141, 147, 148, 150, 151, 152, 154, 156, 159, 160, 166, 167, 168, 169, 177, 178, 179, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 358, 359, 360, 361, 370, 381, 391, 393, 408, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 461, 526, 530, 564, 565, 566, 567, 569, 572, 573, 574, 577, 578, 580, 583, 584, 586, 588, 590, 598, 609, 611, 623, 626, 637, 640, 651, 653, 659, 661, 669, 680, 682, 695, 697, 709, 711, 723, 725, 737, 739, 752, 753, 760, 762, 767, 769, 770, 773, 774, 775, 781, 783, 784, 785, 793, 794, 795, 796, 798, 806, 807, 810, 815, 825, 832, 834, 845, 847, 851, 853, 859, 866, 869], "vector": [7, 10, 11, 18, 19, 21, 24, 26, 36, 39, 42, 45, 58, 59, 62, 80, 81, 149, 151, 155, 156, 158, 160, 164, 168, 169, 172, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 265, 267, 268, 271, 273, 274, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 344, 351, 358, 359, 360, 361, 371, 378, 385, 386, 396, 400, 405, 409, 418, 424, 425, 426, 427, 434, 435, 436, 437, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 739, 740, 743, 744, 749, 750, 765, 790, 851], "input": [7, 11, 30, 37, 39, 42, 49, 51, 52, 55, 57, 61, 62, 63, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 180, 181, 183, 184, 185, 186, 187, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 355, 358, 359, 360, 361, 363, 370, 374, 386, 391, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 408, 409, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 564, 565, 568, 569, 571, 591, 592, 600, 601, 605, 612, 613, 622, 627, 628, 636, 641, 642, 650, 654, 655, 662, 663, 670, 671, 679, 684, 685, 694, 699, 700, 708, 713, 714, 722, 727, 728, 736, 740, 741, 742, 752, 753, 756, 758, 762, 763, 766, 767, 768, 769, 770, 772, 773, 774, 782, 785, 786, 812, 813, 815, 828, 830, 833, 834], "output": [7, 30, 42, 50, 52, 53, 55, 57, 59, 61, 62, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 180, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 346, 361, 370, 374, 385, 386, 400, 402, 407, 408, 409, 418, 421, 422, 423, 424, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 564, 568, 569, 571, 586, 752, 753, 756, 758, 761, 762, 766, 767, 772, 773, 774, 776, 782, 786, 787, 829, 830, 831, 832, 834], "option": [7, 8, 11, 12, 37, 38, 39, 47, 54, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 224, 264, 273, 274, 287, 289, 295, 320, 322, 386, 421, 422, 428, 429, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 566, 584, 622, 636, 650, 679, 694, 708, 722, 736, 815, 824, 825, 844], "buffertyp": 7, "type": [7, 11, 18, 19, 21, 24, 29, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 44, 49, 50, 53, 55, 56, 57, 58, 59, 60, 61, 147, 148, 149, 150, 151, 152, 158, 176, 177, 179, 181, 183, 229, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 362, 364, 365, 366, 368, 370, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 412, 413, 416, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 487, 489, 495, 496, 497, 499, 508, 513, 528, 529, 539, 553, 556, 560, 561, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 579, 580, 581, 588, 590, 591, 592, 593, 596, 598, 600, 601, 603, 604, 605, 608, 611, 612, 613, 614, 615, 616, 621, 622, 624, 626, 627, 628, 629, 630, 635, 636, 638, 640, 641, 642, 643, 644, 649, 650, 652, 653, 654, 655, 658, 661, 662, 663, 664, 667, 669, 670, 671, 672, 673, 678, 679, 681, 682, 683, 684, 685, 686, 688, 689, 693, 694, 696, 697, 698, 699, 700, 702, 703, 707, 708, 710, 711, 712, 713, 714, 716, 717, 721, 722, 724, 725, 726, 727, 728, 730, 731, 735, 736, 738, 739, 740, 741, 742, 744, 748, 754, 755, 756, 758, 760, 762, 767, 770, 771, 772, 773, 775, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 791, 794, 796, 798, 802, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 843, 844, 848, 853, 854, 855, 856, 858, 860, 861, 862, 866, 869], "buf": [7, 177], "send_buf": 7, "recv_buf": 7, "At": [7, 39, 44, 76, 163], "least": [7, 27, 33, 34, 40, 42, 47, 59, 76, 151, 159, 180, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 267, 268, 269, 271, 272, 273, 275, 276, 277, 279, 280, 281, 283, 284, 285, 287, 289, 291, 293, 295, 296, 299, 300, 302, 304, 306, 308, 310, 311, 312, 314, 316, 317, 318, 320, 322, 324, 326, 328, 330, 333, 334, 336, 338, 340, 342, 344, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 489, 630, 638, 644, 703, 710, 717, 750, 770, 780, 790, 850], "u": [7, 52, 158, 169, 170, 179, 183, 273, 274, 275, 283, 289, 293, 310, 316, 319, 322, 326, 345, 418, 569, 794, 796, 798, 810], "8": [7, 8, 28, 53, 54, 61, 62, 149, 151, 152, 345, 358, 359, 360, 361, 407, 557], "16": [7, 8, 28, 53, 54, 61, 62, 149, 358, 359, 360, 361, 568], "32": [7, 8, 28, 53, 54, 61, 62, 149, 151, 344, 346, 348, 358, 360, 361, 364, 370, 372, 374, 395, 396, 400, 402, 405, 407, 409, 412], "64": [7, 8, 28, 183, 346, 360, 361, 363, 364, 370, 374, 402, 408, 412], "_t": [7, 169], "float": [7, 8, 18, 19, 21, 24, 28, 33, 34, 36, 40, 42, 48, 49, 53, 54, 55, 61, 62, 70, 83, 116, 149, 152, 153, 156, 157, 158, 161, 162, 166, 167, 168, 169, 172, 181, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 349, 350, 352, 353, 354, 357, 365, 367, 375, 376, 379, 380, 382, 383, 384, 385, 387, 388, 390, 392, 406, 410, 413, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 568, 572, 573, 601, 613, 628, 682, 685, 687, 697, 700, 701, 711, 715, 725, 729, 849, 851], "explicit": [7, 18, 19, 21, 24, 36, 38, 50, 178, 179, 349, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413, 421, 422, 428, 429, 443, 580, 588, 590, 591, 592, 598, 600, 601, 611, 612, 613, 626, 627, 628, 640, 641, 642, 653, 654, 655, 661, 662, 663, 669, 670, 671, 682, 684, 685, 697, 699, 700, 711, 713, 714, 725, 727, 728, 739, 741, 742, 751, 754, 755, 758, 765, 769, 777, 779, 780, 786, 788, 795, 850, 851, 852, 856, 858, 859, 861, 866, 869], "cannot": [7, 29, 41, 42, 57, 59, 60, 62, 127, 150, 163, 164, 167, 177, 178, 179, 180, 183, 261, 262, 273, 434, 435, 436, 557, 578, 761, 762, 763, 771, 788, 800, 805, 832, 845, 851, 853, 871], "infer": [7, 27, 38, 42, 45, 47, 48, 49, 50, 54, 55, 59, 62, 148, 152, 158, 169], "argument": [7, 9, 11, 29, 38, 50, 55, 57, 59, 60, 115, 147, 151, 152, 176, 177, 178, 180, 181, 183, 185, 186, 187, 192, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 251, 253, 254, 256, 257, 261, 262, 264, 266, 269, 270, 272, 274, 277, 278, 281, 282, 285, 286, 288, 290, 292, 294, 296, 297, 300, 301, 303, 305, 307, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 330, 331, 334, 335, 337, 339, 341, 343, 361, 374, 402, 421, 422, 434, 435, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 557, 560, 564, 565, 568, 572, 573, 574, 578, 580, 581, 590, 591, 592, 598, 600, 601, 611, 612, 613, 626, 627, 628, 640, 641, 642, 653, 654, 655, 661, 662, 663, 669, 670, 671, 682, 684, 685, 697, 699, 700, 711, 713, 714, 725, 727, 728, 739, 741, 742, 753, 758, 762, 767, 769, 771, 774, 778, 779, 785, 787, 790, 794, 796, 798, 815, 824, 825, 828, 829, 830, 831, 832, 833, 834, 835, 847, 848, 861, 869], "native_device_typ": [7, 11], "translat": 7, "native_stream_typ": [7, 11], "correspond": [7, 11, 12, 18, 26, 36, 47, 50, 54, 55, 57, 59, 60, 80, 81, 105, 120, 121, 122, 123, 124, 125, 126, 140, 148, 150, 151, 153, 154, 156, 157, 159, 160, 161, 163, 165, 166, 167, 170, 176, 177, 179, 180, 181, 183, 258, 259, 261, 263, 268, 291, 293, 299, 311, 317, 324, 326, 333, 344, 346, 370, 372, 398, 400, 409, 434, 435, 436, 473, 484, 500, 502, 503, 504, 513, 519, 520, 525, 529, 531, 552, 553, 573, 583, 682, 697, 704, 711, 718, 725, 752, 766, 786, 787, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 815, 816, 819, 820, 821, 822, 823, 831, 833, 836, 837, 851, 858, 859, 860, 861, 863], "miss": [7, 39, 62, 796], "default": [7, 18, 19, 21, 24, 36, 37, 40, 41, 42, 43, 47, 59, 60, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 116, 118, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 135, 137, 139, 140, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 181, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 263, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 349, 350, 352, 353, 354, 357, 358, 359, 360, 361, 362, 365, 366, 372, 375, 376, 377, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 392, 393, 399, 400, 403, 406, 409, 410, 411, 413, 425, 426, 427, 433, 434, 435, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 565, 566, 567, 568, 569, 572, 576, 577, 578, 579, 583, 584, 588, 739, 740, 741, 750, 751, 753, 758, 762, 763, 764, 767, 771, 774, 775, 790, 794, 796, 798, 824, 846, 847, 850, 851, 852, 858, 859, 861, 863], "default_": 7, "operation_nam": 7, "_attr": 7, "compli": 7, "behavior": [7, 11, 12, 39, 41, 49, 60, 151, 153, 156, 158, 162, 163, 169, 177, 181, 258, 259, 262, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 513, 564, 578, 588, 591, 593, 597, 599, 600, 603, 608, 610, 612, 622, 624, 627, 636, 638, 641, 650, 652, 654, 660, 662, 664, 668, 670, 679, 681, 683, 684, 694, 696, 698, 699, 708, 710, 712, 713, 722, 724, 726, 727, 736, 738, 739, 741, 743, 750, 756, 763, 769, 771, 775, 779, 785, 793, 794, 796, 798, 847, 849, 850, 851, 852, 853, 854, 865], "undefin": [7, 41, 54, 55, 57, 61, 62, 158, 169, 177, 258, 261, 262, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 563, 569, 583, 588, 591, 593, 597, 599, 600, 603, 608, 610, 612, 622, 624, 627, 636, 638, 641, 650, 652, 654, 660, 662, 664, 668, 670, 679, 681, 683, 684, 694, 696, 698, 699, 708, 710, 712, 713, 722, 724, 726, 727, 736, 738, 739, 741, 743, 750, 756, 779, 785, 794, 796, 798, 837, 849, 851, 852, 853, 854, 865], "unless": [7, 28, 57, 59, 151, 158, 161, 174, 179, 183, 261, 434, 435, 436, 529, 553, 577, 867, 872], "within": [7, 30, 33, 34, 35, 36, 39, 40, 41, 44, 47, 59, 60, 148, 152, 158, 159, 178, 179, 181, 183, 201, 222, 225, 228, 258, 263, 370, 432, 513, 535, 561, 753, 758, 762, 767, 774, 848, 850, 851, 853, 866, 868], "singl": [7, 8, 11, 35, 39, 42, 53, 54, 55, 59, 61, 62, 115, 120, 121, 122, 123, 124, 125, 126, 148, 150, 151, 153, 156, 158, 159, 161, 167, 169, 183, 187, 194, 195, 201, 205, 222, 227, 228, 235, 246, 254, 258, 259, 260, 261, 262, 263, 264, 349, 358, 359, 360, 361, 375, 377, 387, 397, 414, 461, 482, 485, 486, 487, 488, 489, 495, 496, 497, 499, 507, 508, 513, 528, 529, 534, 536, 537, 538, 539, 540, 545, 546, 548, 553, 573, 755, 760, 761, 767, 773, 774, 777, 778, 779, 780, 785, 786, 788, 790, 791, 845, 847], "differ": [7, 39, 42, 44, 49, 53, 55, 56, 57, 59, 60, 61, 62, 66, 84, 105, 108, 109, 112, 127, 139, 140, 141, 142, 149, 150, 151, 152, 158, 159, 163, 167, 169, 180, 183, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 258, 259, 264, 295, 345, 346, 358, 368, 370, 393, 414, 416, 419, 434, 435, 436, 461, 482, 489, 500, 507, 525, 534, 553, 557, 564, 573, 586, 608, 609, 621, 623, 635, 637, 649, 651, 659, 661, 678, 680, 682, 693, 695, 697, 707, 709, 711, 721, 723, 725, 735, 737, 748, 752, 792, 794, 810, 811, 826, 847, 850, 853, 859, 862, 867, 869], "contribut": [7, 182, 872], "segment": [7, 344], "size": [7, 8, 10, 11, 33, 34, 36, 42, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 179, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 358, 359, 360, 361, 364, 381, 385, 389, 398, 404, 405, 409, 420, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 438, 443, 446, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 558, 559, 560, 564, 566, 572, 573, 577, 578, 579, 580, 590, 597, 598, 611, 626, 640, 653, 669, 682, 687, 697, 701, 711, 715, 725, 729, 739, 740, 743, 750, 793, 826, 847, 851, 859, 866], "place": [7, 35, 57, 140, 141, 148, 152, 153, 154, 155, 157, 158, 161, 171, 172, 178, 192, 221, 222, 224, 225, 226, 227, 228, 256, 257, 258, 259, 263, 551, 583, 605, 614, 622, 636, 650, 679, 682, 686, 694, 697, 708, 711, 722, 725, 736, 740, 741, 750, 851], "rank_offset": 7, "where": [7, 9, 11, 18, 19, 21, 24, 26, 28, 29, 39, 42, 44, 47, 52, 55, 57, 59, 63, 67, 70, 76, 80, 81, 83, 85, 86, 99, 100, 111, 116, 119, 120, 121, 122, 123, 124, 125, 126, 134, 140, 151, 152, 153, 154, 155, 156, 160, 161, 162, 164, 166, 168, 169, 170, 171, 173, 177, 179, 181, 183, 184, 185, 186, 187, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 357, 361, 362, 363, 365, 366, 374, 375, 376, 377, 379, 382, 383, 384, 385, 387, 388, 389, 390, 392, 396, 398, 399, 402, 403, 404, 406, 407, 408, 410, 411, 413, 418, 421, 422, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 557, 558, 559, 561, 564, 566, 569, 572, 573, 574, 577, 579, 584, 586, 590, 592, 598, 601, 611, 613, 614, 616, 622, 626, 628, 630, 636, 640, 642, 644, 650, 653, 655, 661, 663, 669, 671, 673, 679, 682, 685, 686, 689, 694, 697, 700, 703, 708, 711, 714, 717, 722, 725, 728, 731, 736, 739, 742, 758, 762, 766, 767, 769, 785, 791, 794, 796, 798, 810, 821, 844, 851, 857, 861, 869, 871], "recv_count": 7, "templat": [7, 12, 18, 19, 21, 24, 33, 34, 36, 37, 38, 40, 47, 50, 51, 59, 62, 158, 176, 177, 178, 179, 180, 181, 183, 258, 262, 263, 266, 269, 270, 272, 274, 277, 278, 281, 282, 285, 286, 288, 290, 292, 294, 297, 300, 301, 303, 305, 307, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 412, 413, 416, 421, 422, 423, 424, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 461, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 571, 572, 573, 574, 576, 577, 578, 591, 592, 594, 595, 596, 599, 600, 601, 603, 604, 605, 606, 607, 612, 613, 616, 617, 618, 619, 622, 624, 625, 627, 628, 630, 631, 632, 633, 636, 638, 639, 641, 642, 644, 645, 646, 647, 650, 652, 654, 655, 656, 657, 658, 662, 663, 665, 666, 667, 670, 671, 673, 674, 675, 676, 679, 681, 684, 685, 689, 690, 691, 694, 696, 699, 700, 703, 704, 705, 708, 710, 713, 714, 717, 718, 719, 722, 724, 727, 728, 731, 732, 733, 736, 738, 740, 741, 742, 745, 746, 747, 753, 754, 755, 756, 758, 759, 762, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 791, 794, 795, 796, 798, 801, 802, 810, 812, 815, 816, 819, 820, 822, 823, 824, 828, 829, 830, 831, 832, 833, 834, 835, 845, 848, 851, 853, 854, 857, 858, 859, 860, 861, 862, 866], "class": [7, 8, 9, 11, 12, 13, 15, 18, 19, 21, 22, 24, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 43, 44, 47, 50, 54, 57, 59, 60, 62, 150, 151, 159, 169, 173, 174, 179, 181, 182, 183, 256, 257, 258, 262, 263, 363, 368, 391, 408, 416, 421, 422, 428, 429, 432, 433, 434, 435, 436, 557, 558, 559, 560, 562, 563, 567, 569, 570, 571, 576, 577, 578, 579, 580, 581, 592, 601, 613, 620, 628, 634, 642, 648, 655, 663, 671, 677, 685, 700, 714, 728, 742, 751, 753, 754, 755, 756, 757, 758, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 776, 777, 779, 780, 781, 784, 785, 786, 787, 788, 792, 794, 795, 796, 798, 811, 813, 815, 824, 825, 829, 835, 836, 837, 839, 843, 844, 847, 849, 850, 851, 852, 854, 856, 857, 858, 859, 862, 866, 867], "const": [7, 8, 11, 12, 18, 19, 21, 24, 28, 33, 34, 36, 37, 38, 40, 41, 42, 47, 48, 50, 51, 59, 60, 62, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 179, 180, 181, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 349, 350, 352, 353, 354, 357, 362, 365, 366, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 568, 569, 572, 573, 574, 580, 586, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 656, 658, 659, 661, 662, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 750, 753, 754, 755, 758, 760, 762, 763, 766, 767, 769, 771, 774, 775, 777, 779, 780, 785, 786, 787, 788, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 849, 850, 851, 852, 854, 856, 858, 859, 860, 861, 862, 864, 866, 869], "size_t": [7, 8, 10, 11, 12, 59, 60, 62, 158, 179, 201, 350, 353, 367, 434, 435, 436, 458, 560, 568, 572, 580, 589, 598, 608, 753, 762, 766, 768, 771, 774, 776, 778, 785, 793, 794, 795, 796, 798, 811, 817, 827, 835, 847, 859, 862], "send_count": 7, "vector_class": [7, 11, 40, 183, 228], "comm": [7, 10], "allgatherv_attr": [7, 12], "attr": [7, 8, 62, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "default_allgatherv_attr": 7, "dep": 7, "dtype": [7, 8, 41, 62], "local": [7, 11, 35, 39, 57, 148, 158, 159, 463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 554, 779, 842, 843, 858, 859, 860, 861, 863, 864, 866], "gather": 7, "number": [7, 11, 18, 19, 21, 24, 28, 36, 39, 40, 41, 42, 44, 45, 47, 58, 59, 60, 62, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 83, 85, 86, 106, 107, 116, 146, 148, 151, 152, 153, 154, 156, 158, 161, 163, 164, 165, 166, 169, 170, 171, 174, 176, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 420, 421, 422, 423, 424, 428, 429, 430, 431, 438, 443, 446, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 555, 557, 564, 566, 568, 572, 574, 577, 579, 586, 594, 596, 600, 602, 606, 609, 616, 617, 623, 630, 631, 637, 638, 644, 645, 651, 652, 656, 659, 665, 673, 674, 680, 682, 684, 687, 689, 690, 695, 697, 699, 701, 703, 704, 709, 710, 711, 713, 715, 717, 718, 723, 724, 725, 727, 729, 731, 732, 737, 745, 749, 752, 753, 756, 758, 771, 778, 785, 796, 811, 817, 835, 847, 851, 853, 859, 864, 869], "larg": [7, 27, 260, 261, 371, 397, 466, 487, 489, 490, 495, 522, 526, 539, 544, 777], "enough": [7, 33, 34, 151, 489, 573, 871], "receiv": [7, 19, 148, 181, 561, 577, 752, 753, 754, 755, 756, 758, 760, 762, 766, 769, 771, 772, 774, 777, 779, 780, 782, 785, 786, 788, 813, 815, 849, 852, 855], "equal": [7, 8, 12, 24, 28, 36, 40, 41, 42, 57, 59, 62, 67, 85, 86, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 129, 140, 151, 153, 155, 158, 160, 161, 164, 165, 168, 173, 176, 178, 179, 180, 201, 202, 214, 258, 259, 261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 372, 407, 420, 432, 443, 446, 502, 503, 519, 520, 531, 553, 564, 566, 572, 574, 579, 583, 584, 586, 589, 594, 600, 605, 606, 612, 617, 618, 622, 625, 626, 627, 631, 632, 639, 641, 645, 646, 656, 665, 670, 674, 675, 679, 682, 684, 690, 692, 694, 697, 699, 704, 706, 711, 713, 717, 718, 720, 725, 727, 732, 734, 736, 745, 746, 758, 771, 775, 790, 793, 797, 817, 824, 827, 851, 859, 864], "expect": [7, 59, 61, 148, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 163, 164, 168, 181, 183, 261, 262, 566, 739, 766, 769, 801, 802, 871], "posit": [7, 18, 19, 28, 59, 67, 68, 69, 70, 71, 77, 78, 79, 80, 81, 82, 97, 98, 99, 100, 101, 106, 107, 176, 177, 179, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 220, 221, 222, 224, 225, 226, 227, 228, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 266, 269, 270, 272, 274, 276, 277, 278, 281, 282, 285, 286, 288, 289, 290, 292, 294, 295, 297, 300, 301, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343, 344, 385, 420, 484, 498, 526, 530, 540, 541, 560, 566, 617, 631, 645, 674, 743, 745, 756, 771, 826, 836, 837], "caller": 7, "skip": [7, 176, 358, 359, 360, 361, 363, 369, 391, 417], "explicitli": [7, 26, 38, 50, 61, 151, 154, 156, 166, 169, 173, 178, 180, 183, 258, 259, 261, 265, 266, 267, 268, 270, 271, 272, 274, 278, 282, 286, 288, 290, 291, 292, 294, 297, 301, 302, 303, 305, 307, 309, 313, 315, 319, 321, 323, 324, 325, 327, 329, 331, 335, 336, 337, 339, 341, 343, 420, 461, 791, 793, 824, 849, 851, 854, 871], "return": [7, 8, 11, 12, 13, 18, 19, 21, 24, 33, 34, 35, 36, 38, 39, 40, 41, 42, 47, 50, 59, 60, 61, 62, 129, 140, 141, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 365, 366, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 399, 402, 403, 404, 406, 410, 411, 413, 421, 422, 423, 424, 425, 426, 427, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 557, 558, 559, 560, 561, 565, 566, 567, 568, 569, 571, 572, 573, 574, 580, 586, 588, 589, 591, 593, 594, 596, 597, 599, 600, 602, 603, 604, 605, 606, 608, 609, 612, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 641, 643, 644, 645, 646, 648, 649, 650, 651, 652, 654, 656, 658, 659, 662, 664, 665, 667, 668, 670, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 699, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 743, 744, 745, 746, 748, 749, 753, 754, 755, 756, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 771, 773, 774, 775, 776, 777, 779, 780, 785, 786, 787, 788, 790, 793, 794, 795, 796, 797, 798, 800, 802, 805, 808, 809, 810, 811, 812, 813, 822, 823, 826, 827, 829, 830, 832, 833, 835, 836, 837, 847, 849, 850, 851, 852, 853, 854, 856, 858, 859, 860, 861, 862, 863, 864, 866, 869], "global": [7, 10, 148, 151, 158, 178, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 779, 852, 853], "distribut": [7, 10, 11, 39, 43, 44, 49, 149, 174, 181, 264, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364, 365, 366, 367, 368, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 399, 403, 404, 406, 410, 411, 412, 413, 415, 416, 418, 478, 479, 491, 492, 494, 553, 573, 579, 872], "count": [7, 36, 41, 42, 60, 67, 68, 140, 141, 176, 180, 258, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 598, 611, 626, 640, 669, 682, 697, 711, 725, 739, 741, 758, 771, 777], "rtype": 7, "allreduce_attr": [7, 12], "default_allreduce_attr": 7, "have": [7, 30, 35, 39, 40, 41, 47, 49, 51, 53, 54, 55, 57, 59, 62, 80, 140, 141, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 180, 183, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 261, 263, 267, 293, 296, 317, 318, 326, 330, 400, 418, 432, 461, 489, 506, 557, 572, 573, 588, 594, 617, 631, 645, 656, 665, 674, 752, 760, 761, 763, 764, 767, 770, 772, 775, 779, 782, 794, 836, 837, 847, 849, 850, 851, 852, 853, 855, 859, 861, 864, 871], "dimens": [7, 57, 58, 59, 61, 62, 67, 68, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 97, 99, 100, 105, 106, 107, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 129, 134, 140, 141, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 224, 225, 226, 227, 228, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 258, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 372, 385, 400, 409, 423, 430, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 557], "appli": [7, 18, 21, 37, 42, 47, 49, 50, 55, 57, 62, 64, 66, 74, 83, 84, 85, 86, 87, 90, 91, 93, 95, 101, 102, 103, 105, 108, 109, 112, 113, 116, 117, 120, 121, 122, 123, 124, 125, 126, 130, 132, 134, 139, 141, 142, 143, 151, 153, 154, 156, 157, 158, 160, 163, 166, 169, 176, 177, 179, 180, 181, 183, 199, 200, 201, 202, 203, 204, 205, 214, 215, 221, 222, 224, 225, 226, 227, 228, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 264, 304, 305, 306, 307, 308, 309, 338, 339, 340, 341, 342, 343, 345, 363, 374, 386, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 418, 564, 565, 572, 763, 770, 787, 814, 816, 832, 847, 851, 853], "alltoal": 7, "separ": [7, 37, 42, 151, 153, 156, 161, 258, 259, 263, 794, 821, 844, 848], "j": [7, 18, 21, 24, 27, 48, 57, 59, 103, 134, 162, 176, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 258, 261, 262, 344, 345, 397, 414, 420, 557, 558, 559, 560, 811, 817], "th": [7, 18, 21, 24, 45, 48, 120, 121, 122, 123, 124, 125, 126, 151, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 361, 374, 402, 407, 420, 786, 811, 817], "sent": [7, 766, 767, 771], "alltoallv_attr": [7, 12], "default_alltoallv_attr": 7, "onli": [7, 11, 18, 33, 34, 35, 36, 37, 39, 42, 47, 49, 53, 54, 55, 57, 59, 60, 61, 83, 85, 86, 100, 113, 114, 116, 148, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 176, 181, 183, 187, 192, 194, 195, 201, 203, 205, 222, 225, 228, 246, 254, 256, 257, 258, 259, 261, 262, 263, 268, 276, 280, 284, 287, 288, 289, 290, 299, 311, 317, 320, 321, 322, 323, 328, 333, 368, 371, 416, 421, 422, 423, 424, 428, 429, 433, 434, 435, 436, 466, 489, 513, 522, 526, 544, 560, 561, 562, 564, 569, 572, 577, 588, 590, 592, 593, 597, 598, 599, 601, 603, 604, 605, 608, 610, 611, 613, 616, 621, 622, 624, 626, 628, 630, 635, 636, 638, 640, 642, 644, 649, 652, 653, 655, 660, 661, 663, 664, 668, 669, 671, 673, 678, 681, 682, 683, 685, 689, 693, 694, 696, 697, 698, 700, 703, 707, 708, 710, 711, 712, 714, 717, 721, 724, 725, 726, 728, 731, 735, 738, 739, 740, 741, 742, 748, 750, 756, 758, 760, 767, 769, 773, 778, 788, 793, 794, 796, 798, 815, 845, 849, 851, 853, 862, 865, 866, 869], "after": [7, 19, 28, 36, 39, 42, 47, 50, 51, 55, 139, 148, 151, 152, 156, 176, 178, 183, 261, 262, 263, 299, 302, 308, 333, 336, 342, 461, 489, 557, 558, 559, 566, 753, 758, 760, 762, 767, 774, 775, 783, 788, 800, 805, 811, 817, 825, 848, 851, 852, 856, 864], "barrier_attr": [7, 12], "default_barrier_attr": 7, "denot": [7, 18, 19, 21, 24, 45, 55, 57, 58, 68, 79, 81, 82, 106, 107, 113, 114, 155, 157, 308, 309, 342, 364, 479, 493, 541, 553, 603, 604, 605, 616, 624, 630, 638, 644, 652, 673, 681, 682, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 738, 772, 782, 811, 844], "root": [7, 26, 121, 136, 158, 166, 477, 508, 510, 511, 527, 528, 543, 553, 568, 849], "broadcast_attr": [7, 12], "default_broadcast_attr": 7, "reduce_attr": [7, 12], "default_reduce_attr": 7, "ignor": [7, 59, 67, 68, 71, 81, 82, 97, 98, 106, 107, 151, 156, 157, 361, 374, 402, 434, 435, 436, 567, 751, 811, 847, 851], "get": [7, 11, 12, 21, 42, 48, 62, 148, 169, 367, 415, 506, 507, 551, 554, 756, 766, 769, 771, 773, 777, 788, 859], "scatter": 7, "reduce_scatter_attr": [7, 12], "default_reduce_scatter_attr": 7, "comm_siz": 7, "two": [7, 26, 29, 38, 42, 45, 50, 57, 58, 59, 60, 61, 62, 66, 84, 105, 108, 109, 112, 127, 129, 139, 142, 150, 151, 163, 164, 167, 169, 176, 183, 185, 192, 195, 196, 197, 198, 205, 213, 218, 224, 227, 229, 231, 235, 238, 239, 243, 251, 253, 256, 257, 258, 259, 261, 262, 264, 347, 360, 361, 368, 370, 371, 372, 395, 402, 416, 418, 420, 421, 422, 461, 472, 473, 502, 503, 508, 519, 520, 526, 529, 531, 533, 553, 557, 558, 559, 560, 565, 568, 569, 572, 573, 606, 617, 631, 645, 674, 690, 704, 718, 732, 745, 756, 761, 775, 793, 794, 796, 798, 810, 824, 825, 826, 827, 836, 844, 853, 859, 867, 869], "so": [7, 18, 50, 55, 59, 61, 148, 151, 152, 159, 163, 169, 183, 200, 202, 203, 214, 215, 222, 225, 228, 244, 245, 258, 259, 264, 268, 269, 273, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 344, 408, 418, 461, 466, 487, 490, 495, 522, 526, 539, 544, 557, 560, 565, 566, 567, 572, 573, 760, 761, 785, 821, 858, 871], "process": [7, 10, 11, 30, 37, 39, 42, 43, 44, 46, 61, 151, 169, 178, 345, 443, 446, 482, 489, 507, 534, 563, 565, 568, 570, 572, 573, 752, 753, 761, 762, 763, 773, 777, 785, 813, 815, 825, 847, 848, 851, 852, 853, 872], "peer": 7, "need": [7, 39, 42, 45, 49, 55, 57, 59, 60, 61, 62, 148, 150, 151, 152, 169, 200, 201, 202, 203, 210, 216, 217, 218, 240, 251, 253, 254, 256, 257, 260, 261, 296, 330, 364, 400, 409, 420, 432, 434, 435, 436, 461, 489, 560, 573, 687, 701, 715, 729, 752, 765, 773, 791, 793, 801, 802, 824, 832, 844], "post": [7, 50, 54, 55, 151, 158], "doe": [7, 9, 11, 13, 21, 36, 38, 40, 46, 47, 49, 50, 51, 55, 57, 59, 61, 64, 65, 89, 90, 91, 92, 95, 96, 102, 110, 111, 117, 119, 127, 128, 130, 136, 138, 139, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180, 183, 200, 201, 202, 203, 210, 240, 258, 260, 261, 262, 265, 267, 268, 271, 358, 393, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 462, 466, 467, 469, 471, 472, 473, 475, 480, 483, 484, 487, 490, 495, 500, 501, 502, 503, 505, 508, 512, 519, 520, 521, 522, 524, 526, 532, 533, 539, 542, 544, 547, 549, 550, 564, 565, 572, 573, 579, 596, 599, 601, 611, 613, 622, 626, 628, 636, 640, 642, 650, 655, 658, 667, 669, 671, 679, 682, 685, 694, 697, 700, 708, 711, 714, 722, 725, 728, 736, 739, 756, 758, 766, 771, 779, 788, 793, 801, 802, 815, 836, 837, 847, 850, 851, 852, 853, 858, 861], "proce": [7, 363, 369, 391, 408, 417, 806, 807], "concurr": [7, 151, 183, 561, 568, 572, 574, 588, 590, 591, 593, 598, 599, 600, 603, 604, 608, 609, 611, 612, 616, 623, 626, 627, 630, 637, 640, 641, 644, 651, 653, 654, 659, 661, 662, 664, 669, 670, 673, 680, 682, 683, 684, 689, 695, 697, 698, 699, 703, 709, 711, 712, 713, 717, 723, 725, 726, 727, 731, 737, 739, 741, 743, 752, 753, 760, 762, 763, 764, 767, 773, 774, 786, 790, 806, 807, 818, 825, 826, 849, 851, 853, 854, 858, 859, 861, 866, 867], "destin": [7, 29, 52, 53, 55, 57, 59, 77, 89, 148, 151, 152, 154, 155, 156, 157, 158, 160, 163, 166, 167, 168, 169, 170], "while": [7, 36, 37, 39, 42, 49, 52, 53, 62, 105, 151, 156, 167, 169, 178, 183, 196, 222, 224, 225, 228, 258, 262, 287, 289, 320, 322, 344, 378, 557, 572, 577, 608, 616, 622, 630, 636, 644, 650, 673, 679, 689, 694, 703, 708, 717, 722, 731, 736, 740, 743, 752, 771, 775, 779, 785, 791, 836, 845, 853, 854], "sourc": [7, 30, 42, 43, 44, 48, 52, 53, 55, 57, 59, 77, 148, 150, 151, 152, 154, 155, 156, 157, 158, 160, 163, 166, 167, 168, 169, 170, 179, 227, 368, 401, 416, 611, 622, 626, 636, 640, 650, 669, 679, 682, 694, 697, 708, 711, 722, 725, 736, 844, 871], "As": [7, 53, 55, 57, 148, 151, 152, 153, 167, 181, 183, 258, 261, 263, 345, 555, 564, 770, 851, 871], "For": [7, 18, 19, 21, 24, 27, 28, 30, 39, 42, 43, 49, 51, 52, 53, 54, 55, 57, 59, 61, 62, 83, 85, 86, 97, 98, 105, 116, 120, 121, 122, 123, 124, 125, 126, 148, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 176, 178, 180, 181, 183, 187, 194, 195, 196, 201, 205, 222, 225, 227, 228, 246, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 289, 322, 330, 344, 345, 347, 368, 370, 371, 372, 397, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 557, 564, 566, 572, 573, 584, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 752, 760, 763, 765, 775, 791, 792, 793, 794, 796, 798, 807, 810, 821, 824, 837, 844, 845, 852, 867, 869], "inform": [7, 27, 36, 39, 41, 42, 43, 50, 51, 52, 59, 62, 148, 158, 163, 174, 178, 182, 261, 264, 345, 433, 443, 451, 476, 564, 573, 582, 585, 790, 793, 795, 817, 842, 843, 844, 872], "ccl_api": 7, "pt2pt_attr": 7, "default_pt2pt_attr": 7, "enum": [8, 12, 15, 31, 37, 41, 54, 57, 59, 60, 61, 151, 158, 169, 183, 263, 421, 422, 428, 429, 432, 433, 434, 435, 436, 570, 783, 793, 798, 847, 849, 851, 855, 859], "int8": [8, 28, 54, 56, 61, 83, 116, 151, 152, 156, 160, 163, 166, 167, 169], "unspecifi": [8, 9, 12, 15, 60, 177, 178, 179, 183, 350, 353, 513, 590, 591, 596, 598, 600, 605, 611, 612, 622, 626, 627, 630, 636, 638, 640, 641, 644, 650, 652, 653, 654, 658, 661, 662, 667, 669, 670, 679, 682, 684, 694, 697, 699, 703, 708, 710, 711, 713, 717, 722, 724, 725, 727, 736, 739, 740, 741, 753, 758, 762, 763, 774, 781, 784, 794, 796, 798, 846, 851, 858, 861, 869], "uint8": [8, 28], "int16": [8, 28, 55], "uint16": [8, 28], "int32": [8, 28, 55], "uint32": [8, 28], "int64": [8, 28], "uint64": [8, 28], "float16": [8, 47], "float32": [8, 28, 42], "float64": [8, 28, 42], "bfloat16": [8, 28, 47, 49, 54, 56, 62, 149, 186, 196, 200, 201, 223, 229, 234], "last_predefin": 8, "largest": [8, 12, 21, 219, 391, 779, 785, 794], "abov": [8, 12, 21, 57, 105, 129, 148, 151, 153, 157, 160, 178, 214, 244, 258, 261, 262, 265, 267, 268, 271, 291, 324, 434, 435, 436, 563, 565, 773, 775, 810, 815, 836, 837, 844, 851], "bit": [8, 28, 53, 54, 61, 62, 149, 151, 152, 181, 183, 345, 346, 348, 358, 359, 360, 361, 364, 370, 372, 374, 393, 394, 395, 396, 400, 402, 405, 407, 409, 412, 438, 513], "sign": [8, 27, 28, 45, 54, 55, 61, 62, 151, 152, 179, 484, 489, 504, 505, 531, 541, 548, 553, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739], "integ": [8, 18, 19, 28, 40, 54, 55, 58, 61, 62, 128, 149, 151, 152, 177, 179, 183, 187, 192, 194, 195, 201, 202, 205, 246, 254, 259, 261, 262, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 346, 347, 351, 361, 370, 374, 375, 377, 378, 387, 389, 396, 398, 399, 402, 403, 404, 405, 407, 411, 420, 438, 480, 488, 501, 504, 512, 521, 524, 526, 530, 531, 532, 533, 540, 548, 549, 550, 553, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 785, 824, 826, 853], "unsign": [8, 28, 54, 60, 61, 62, 151, 152, 158, 169, 181, 396, 557, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 769, 775, 787, 826, 851], "half": [8, 53, 54, 61, 62, 186, 196, 200, 201, 223, 229, 234, 262, 557, 558, 559, 560, 591, 600, 605, 612, 622, 624, 627, 636, 638, 641, 650, 652, 654, 662, 670, 679, 681, 684, 694, 696, 699, 708, 710, 713, 722, 724, 727, 736, 738, 740, 741, 866], "precis": [8, 49, 53, 54, 55, 57, 59, 62, 145, 151, 156, 167, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553], "non": [8, 11, 12, 13, 26, 29, 39, 41, 54, 55, 57, 61, 62, 67, 77, 78, 79, 80, 81, 82, 87, 88, 97, 101, 106, 107, 150, 156, 158, 159, 161, 167, 169, 175, 224, 225, 226, 227, 247, 248, 249, 250, 252, 255, 258, 259, 261, 262, 263, 264, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 372, 391, 401, 420, 421, 422, 428, 429, 446, 482, 487, 489, 495, 507, 522, 526, 529, 534, 539, 553, 566, 588, 755, 758, 763, 775, 777, 788, 791, 800, 801, 802, 805, 806, 807, 808, 809, 815, 845, 851, 868], "7": [8, 53, 54, 61, 62, 396, 397, 408, 461, 557, 775], "mantissa": [8, 53, 54, 61, 62, 151], "wai": [8, 11, 21, 35, 36, 39, 53, 59, 63, 129, 150, 151, 155, 156, 158, 159, 167, 172, 178, 183, 261, 361, 374, 402, 420, 558, 559, 576, 796, 806, 807, 810, 824], "regist": [8, 345, 372, 396, 400, 405, 409, 482, 507, 534, 752, 786], "deregist": 8, "datatype_attr": 8, "list": [8, 11, 12, 35, 36, 39, 41, 50, 54, 62, 67, 68, 77, 78, 79, 80, 81, 82, 83, 97, 98, 106, 107, 116, 120, 121, 122, 123, 124, 125, 126, 141, 148, 157, 158, 169, 183, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 295, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 363, 370, 386, 408, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 557, 754, 761, 766, 769, 771, 777, 785, 788, 791], "fill": [8, 12, 36, 129, 177, 181, 415, 421, 422, 423, 424, 458, 461, 739], "datatype_attr_id": 8, "byte": [8, 36, 39, 42, 59, 62, 151, 434, 435, 436, 793, 794, 795, 796, 798], "create_datatype_attr": 8, "register_datatyp": 8, "deregister_datatyp": 8, "retriev": [8, 11, 13, 38, 149, 183], "get_datatype_s": 8, "reli": [9, 21, 28, 29, 37, 49, 52, 167, 180, 183, 566, 572], "propag": [9, 29, 52, 58, 59, 100, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 183], "caught": [9, 29, 183, 851, 852], "align": [9, 29, 129, 173, 175, 182, 183, 258, 261, 418, 434, 435, 436, 793, 794, 795], "introduc": [9, 29, 35, 183, 346, 370, 553, 837, 844, 871], "hierarchi": [9, 29, 30, 183], "throw": [9, 11, 13, 29, 36, 50, 59, 62, 148, 150, 151, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 399, 403, 404, 406, 410, 411, 413, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 552, 584, 614, 686, 739, 743, 750, 769, 779, 785, 836, 847, 850, 854], "inherit": [9, 57, 59, 60, 62, 183, 752, 766, 769, 844, 849], "std": [9, 10, 18, 19, 21, 24, 28, 29, 33, 34, 36, 37, 40, 41, 42, 48, 58, 59, 62, 149, 150, 151, 155, 158, 168, 172, 173, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 353, 355, 358, 359, 360, 361, 362, 363, 364, 366, 374, 375, 377, 378, 380, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 561, 565, 574, 580, 588, 589, 590, 591, 592, 597, 598, 599, 600, 601, 603, 605, 608, 610, 611, 612, 613, 614, 616, 622, 624, 626, 627, 628, 630, 636, 638, 640, 641, 642, 644, 650, 652, 653, 654, 655, 660, 661, 662, 663, 668, 669, 670, 671, 673, 679, 681, 682, 684, 685, 686, 689, 694, 696, 697, 699, 700, 703, 708, 710, 711, 713, 714, 717, 722, 724, 725, 727, 728, 731, 736, 738, 739, 740, 741, 742, 743, 750, 753, 756, 758, 760, 762, 766, 767, 769, 773, 774, 775, 778, 779, 785, 786, 787, 790, 792, 794, 795, 796, 797, 798, 812, 815, 827, 850, 851, 853, 856, 859], "deriv": [9, 29, 41, 50, 154, 155, 158, 159, 164, 166, 172, 183, 852], "check": [9, 13, 33, 34, 36, 40, 59, 62, 127, 148, 151, 162, 346, 347, 583, 594, 656, 665, 856], "howev": [9, 53, 54, 55, 57, 59, 148, 151, 153, 155, 157, 161, 163, 164, 170, 171, 183, 261, 287, 320, 358, 368, 393, 421, 422, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 560, 564, 566, 573, 739, 793, 794, 837, 847, 848, 850, 851, 854, 861], "condit": [9, 18, 24, 42, 50, 129, 169, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 355, 358, 359, 360, 361, 374, 393, 394, 395, 396, 397, 402, 405, 407, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 552, 578, 606, 682, 690, 696, 697, 704, 711, 718, 724, 725, 732, 806, 807, 836, 847, 850, 854], "fit": [9, 39, 42, 46, 183, 466, 490, 522, 526, 544, 845], "ani": [9, 11, 12, 28, 30, 36, 42, 47, 53, 54, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 178, 179, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 344, 381, 386, 420, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 462, 466, 467, 469, 471, 472, 473, 475, 480, 483, 484, 488, 489, 500, 501, 502, 503, 505, 508, 519, 520, 521, 522, 524, 526, 529, 532, 533, 541, 542, 544, 547, 550, 552, 557, 566, 572, 573, 586, 588, 596, 599, 608, 682, 697, 711, 725, 739, 752, 754, 755, 756, 761, 763, 766, 769, 773, 779, 780, 785, 791, 793, 794, 795, 810, 811, 817, 824, 832, 834, 837, 845, 847, 848, 850, 851, 853, 856, 861, 872], "report": [9, 27, 29, 50, 151, 167, 183, 258, 553], "invalid_argu": [9, 29, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 399, 403, 404, 406, 410, 411, 413, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 552], "were": [9, 60, 179, 183, 258, 262, 268, 276, 280, 284, 289, 299, 311, 317, 322, 333, 350, 353, 405, 565, 779, 793, 794, 850, 861], "reject": [9, 183, 347, 350, 353, 371, 753, 761, 762, 767, 771, 774, 785], "host_bad_alloc": [9, 29, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 265, 267, 271, 273, 275, 279, 283, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 330, 332, 336, 338, 340, 342, 421, 422, 423, 424, 434, 435, 436, 552], "dure": [9, 11, 24, 29, 36, 37, 39, 42, 49, 55, 57, 59, 62, 140, 145, 148, 150, 151, 152, 153, 156, 157, 159, 161, 162, 163, 164, 183, 264, 265, 267, 268, 271, 273, 275, 279, 283, 284, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 350, 353, 400, 409, 482, 489, 507, 534, 764, 783, 790, 793, 828, 829, 830, 832, 833, 834, 835, 845, 858], "unimpl": [9, 29, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436], "request": [9, 33, 34, 148, 150, 158, 287, 320, 793, 795, 803, 804, 837, 848, 849, 854, 855, 859], "unsupport": [9, 29, 148], "built": [10, 11, 148, 177], "Its": [10, 11, 35, 181, 570, 739, 783], "band": [10, 11, 190, 199, 209, 233, 247, 248, 249, 250, 252, 255, 344], "exampl": [10, 11, 28, 30, 35, 38, 41, 42, 43, 44, 47, 49, 53, 54, 57, 59, 61, 62, 83, 85, 86, 89, 105, 116, 120, 121, 122, 123, 124, 125, 126, 129, 140, 148, 149, 150, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 173, 183, 222, 225, 228, 260, 368, 370, 391, 401, 408, 416, 461, 532, 557, 558, 559, 560, 575, 584, 588, 590, 592, 598, 601, 611, 613, 626, 628, 640, 642, 653, 655, 661, 663, 669, 671, 682, 685, 697, 700, 711, 714, 725, 728, 739, 742, 765, 791, 794, 796, 798, 810, 811, 817, 821, 824, 836, 843, 844, 845, 854, 867, 869, 872], "mpi": 10, "mpi_rank": 10, "mpi_siz": 10, "mpi_init": 10, "argc": 10, "argv": 10, "mpi_comm_rank": 10, "mpi_comm_world": 10, "mpi_comm_s": 10, "shared_ptr_class": [10, 11], "kv": [10, 11], "address_typ": [10, 11], "kvs_addr": 10, "create_main_kv": [10, 11], "get_address": [10, 11], "mpi_bcast": 10, "address_max_s": [10, 11], "mpi_byt": 10, "els": [10, 97, 98, 195, 254, 568], "create_kv": [10, 11], "create_commun": [10, 11], "per": [10, 11, 61, 77, 78, 79, 81, 83, 85, 86, 99, 100, 114, 116, 178, 181, 183, 687, 701, 715, 729, 857, 859, 861], "sycl_context": 10, "sycl_devic": 10, "sycl_queu": 10, "ccl_context": 10, "create_context": [10, 11], "ccl_devic": 10, "idx": [10, 36, 154, 155, 158, 172, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 367, 391, 397, 414], "push_back": [10, 739], "create_devic": [10, 11], "r2d_map": 10, "dev": [10, 149], "uniqu": [10, 12, 21, 40, 41, 42, 62, 120, 121, 122, 123, 124, 125, 126, 148, 151, 258, 259, 261, 598, 611, 669, 682, 725, 851, 853, 859], "ccl_stream": 10, "create_stream": [10, 11], "choic": [10, 261, 381, 558, 559, 572, 844], "wait": [10, 13, 36, 59, 60, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 386, 415, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 566, 596, 752, 758, 760, 800, 805, 845, 850, 851, 852, 854], "e": [10, 18, 27, 30, 39, 41, 42, 45, 49, 55, 57, 87, 90, 99, 100, 103, 110, 111, 130, 132, 134, 148, 151, 153, 155, 157, 160, 161, 171, 176, 183, 258, 261, 262, 263, 264, 265, 291, 324, 345, 353, 362, 380, 383, 421, 422, 434, 435, 436, 438, 478, 491, 492, 493, 494, 498, 553, 760, 788, 850, 866], "here": [11, 53, 55, 57, 59, 76, 80, 97, 98, 151, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 791, 836, 844, 850, 872], "nativ": [11, 13, 151, 263, 859, 861], "native_context_typ": 11, "native_event_typ": [11, 13], "card": [11, 60, 148, 150], "entiti": [11, 18, 19, 21, 24, 30, 39, 42, 564, 566, 572, 573], "instanc": [11, 18, 19, 21, 24, 36, 37, 38, 40, 41, 42, 43, 49, 52, 151, 156, 158, 167, 176, 178, 179, 181, 183, 227, 256, 257, 261, 262, 420, 557, 580, 588, 751, 752, 772, 779, 782, 785, 794, 796, 798, 801, 802, 824, 825, 828, 829, 830, 831, 832, 833, 834, 835, 850, 851, 852, 856, 858, 859, 860, 861], "native_devic": 11, "exist": [11, 36, 59, 149, 150, 152, 176, 604, 605, 616, 622, 624, 630, 638, 644, 652, 673, 679, 681, 689, 694, 696, 703, 710, 717, 724, 731, 736, 738, 739, 751, 847, 850, 851, 856, 858, 859, 863, 871], "get_n": [11, 13], "wrap": [11, 13, 33, 34, 36, 39, 40, 41, 566, 851], "respons": [11, 36, 38, 40, 42, 45, 50, 55, 57, 59, 61, 148, 158, 159, 183, 260, 262, 572, 752, 753, 763], "manag": [11, 30, 36, 43, 44, 148, 183, 461, 687, 701, 715, 729, 752, 753, 755, 780, 797, 848, 851], "resourc": [11, 148, 183, 261, 425, 426, 427, 795, 797, 839], "native_context": 11, "kvs_interfac": 11, "establish": [11, 159, 871], "connect": [11, 39, 42, 146, 148, 160, 588, 751, 752, 771, 786, 788, 851], "between": [11, 24, 36, 37, 42, 53, 55, 57, 59, 60, 61, 62, 67, 80, 106, 107, 127, 148, 150, 151, 154, 159, 167, 183, 185, 187, 194, 195, 196, 197, 198, 201, 205, 222, 225, 227, 228, 235, 246, 254, 258, 263, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 346, 370, 519, 520, 532, 533, 553, 557, 573, 588, 752, 753, 760, 762, 772, 774, 782, 794, 796, 798, 799, 826, 853, 869], "creation": [11, 36, 38, 39, 42, 50, 55, 62, 150, 151, 152, 156, 158, 163, 178, 345, 458, 852], "record": [11, 37, 42, 148], "virtual": [11, 739, 756, 765, 852], "char": [11, 12, 37, 158, 558, 559, 586, 760], "string_class": 11, "given": [11, 18, 19, 21, 24, 26, 28, 37, 42, 45, 59, 64, 66, 84, 102, 108, 109, 110, 112, 113, 115, 120, 121, 122, 123, 124, 125, 126, 136, 138, 139, 142, 145, 148, 151, 152, 176, 178, 180, 183, 187, 189, 194, 195, 201, 205, 222, 225, 228, 229, 230, 231, 232, 239, 246, 254, 256, 257, 260, 261, 262, 263, 264, 265, 316, 317, 349, 350, 352, 353, 354, 355, 356, 357, 362, 365, 366, 368, 369, 370, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 432, 433, 434, 435, 436, 478, 479, 482, 491, 493, 494, 506, 507, 534, 535, 554, 557, 558, 559, 560, 564, 572, 573, 768, 770, 776, 790, 793, 824, 837, 845, 851, 852, 869], "empti": [11, 36, 39, 41, 54, 59, 60, 61, 62, 113, 120, 121, 122, 123, 124, 125, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 434, 435, 436, 489, 541, 557, 558, 559, 560, 588, 590, 596, 597, 598, 604, 605, 611, 622, 624, 626, 636, 638, 640, 650, 652, 653, 658, 661, 667, 668, 669, 679, 681, 682, 694, 696, 697, 708, 710, 711, 722, 724, 725, 736, 738, 739, 755, 757, 767, 769, 779, 780, 783, 785, 824, 849, 850, 851, 853, 854, 856, 859, 864], "save": [11, 162, 164, 489, 573, 770, 783], "remov": [11, 59, 120, 121, 122, 123, 124, 125, 126, 183, 597, 605, 610, 624, 638, 652, 660, 668, 681, 696, 710, 724, 738, 750, 755, 761, 770, 782, 783, 785, 851, 858, 859], "static": [11, 36, 40, 55, 60, 61, 180, 358, 359, 360, 361, 374, 393, 394, 395, 396, 397, 400, 402, 405, 407, 409, 414, 443, 557, 573, 575, 579, 589, 775, 788, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837, 847, 851, 869], "constexpr": [11, 33, 34, 36, 37, 178, 181, 358, 359, 360, 361, 374, 393, 394, 395, 396, 397, 400, 402, 405, 407, 409, 414, 443, 458, 557, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837], "256": 11, "array_class": 11, "overrid": [11, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 795, 851, 852], "addr": 11, "homogen": [11, 30, 33, 34, 35, 36, 39, 41, 42, 43], "user": [11, 15, 18, 36, 38, 39, 40, 42, 49, 50, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 222, 225, 228, 256, 257, 258, 260, 261, 262, 263, 264, 368, 400, 409, 418, 432, 461, 489, 564, 572, 752, 753, 762, 767, 770, 771, 773, 774, 785, 792, 845, 848, 849, 850, 851, 871], "suppli": [11, 180, 183, 216, 217, 218, 236, 237, 238, 249, 250, 266, 268, 269, 270, 272, 274, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 290, 292, 294, 297, 299, 300, 301, 302, 303, 305, 307, 308, 309, 311, 312, 313, 315, 317, 318, 319, 321, 323, 325, 327, 329, 331, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 792], "thei": [11, 12, 29, 36, 39, 55, 57, 59, 60, 97, 99, 100, 148, 150, 151, 152, 153, 156, 157, 160, 161, 164, 169, 177, 180, 181, 183, 222, 225, 228, 261, 262, 263, 273, 420, 421, 422, 428, 429, 461, 486, 488, 538, 540, 546, 548, 551, 575, 594, 598, 606, 611, 617, 626, 631, 640, 645, 652, 653, 656, 665, 669, 674, 682, 690, 697, 704, 710, 711, 718, 725, 732, 739, 745, 752, 760, 766, 769, 770, 773, 791, 794, 796, 798, 803, 804, 810, 837, 845, 867, 869], "map_class": 11, "rank_device_map": 11, "total": [11, 61, 81, 151, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 363, 408, 572, 573, 773, 810, 847, 851], "wire": 11, "well": [11, 22, 28, 36, 41, 47, 50, 51, 55, 57, 151, 159, 180, 188, 261, 295, 346, 370, 418, 541, 553, 573, 579, 598, 611, 626, 640, 669, 682, 697, 711, 725, 752, 760, 793, 815, 852, 871], "wa": [11, 29, 148, 161, 164, 177, 183, 261, 263, 275, 276, 293, 326, 407, 425, 426, 427, 428, 429, 430, 431, 432, 586, 588, 596, 605, 624, 638, 652, 658, 667, 681, 696, 710, 724, 738, 753, 754, 756, 762, 764, 766, 767, 774, 785, 786, 793, 821, 837, 851, 852, 858, 863, 864], "construct": [11, 28, 36, 39, 42, 57, 59, 60, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 179, 181, 263, 461, 557, 558, 559, 560, 561, 562, 565, 569, 580, 584, 588, 590, 596, 598, 605, 611, 614, 622, 625, 626, 636, 639, 640, 650, 653, 658, 661, 667, 669, 679, 682, 686, 694, 697, 708, 711, 722, 725, 736, 739, 740, 743, 750, 751, 753, 754, 755, 756, 758, 760, 762, 764, 766, 767, 769, 770, 771, 773, 774, 775, 777, 779, 780, 783, 785, 786, 787, 788, 795, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 824, 825, 828, 829, 830, 832, 833, 834, 835, 836, 837, 845, 846, 847, 849, 851, 852, 853, 854, 856, 858, 859, 863, 864, 866, 869, 871], "get_devic": [11, 60], "get_context": [11, 60], "encapsul": [11, 42, 59, 60, 148, 149, 150, 159, 182, 183, 259, 261, 262, 756], "native_stream": 11, "design": [11, 30, 35, 42, 44, 76, 161, 170, 364, 372, 412, 418, 535, 555, 572, 573, 752, 793, 836, 851], "create_ev": 11, "native_ev": 11, "modifi": [12, 21, 151, 156, 158, 163, 176, 179, 189, 231, 232, 261, 368, 416, 588, 598, 604, 611, 616, 626, 630, 640, 644, 653, 669, 673, 682, 689, 697, 703, 711, 717, 725, 731, 847, 859, 872], "operation_attr_id": 12, "prioriti": [12, 29, 653, 654, 656, 658, 752, 753, 758, 762, 774, 779, 793, 851], "to_cach": 12, "match_id": 12, "last_valu": 12, "conjunct": [12, 55, 569, 572, 575], "asynchron": [12, 425, 426, 427, 434, 435, 436, 461], "cach": [12, 62, 148, 150, 159, 576, 794, 795], "extend": [12, 28, 39, 41, 149, 183, 192, 295, 360, 361, 374, 395, 396, 397, 400, 402, 405, 407, 409, 414, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 763, 837], "allreduce_attr_id": 12, "reduction_fn": [12, 15], "reduce_attr_id": 12, "reduce_scatter_attr_id": 12, "signatur": [12, 179, 180, 461, 575, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 858, 860], "typedef": [12, 756, 775, 788, 793, 844], "in_buf": 12, "in_count": 12, "inout_buf": 12, "out_count": 12, "fn_context": 12, "struct": [12, 18, 19, 21, 24, 28, 47, 59, 60, 62, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 181, 419, 433, 434, 435, 436, 443, 565, 572, 575, 685, 700, 714, 728, 751, 760, 770, 773, 775, 785, 851], "offset": [12, 28, 36, 57, 59, 83, 85, 86, 116, 150, 183, 187, 194, 195, 201, 202, 205, 222, 225, 228, 246, 254, 258, 263, 358, 359, 360, 361, 364, 371, 408, 438], "opattrtyp": 12, "create_operation_attr": 12, "manner": [13, 59, 482, 507, 534], "statu": [13, 62, 148, 150, 183, 263, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 854, 855], "signal": [13, 541, 752, 848], "bool": [13, 21, 36, 41, 59, 62, 67, 68, 75, 88, 99, 100, 105, 113, 118, 120, 121, 122, 123, 124, 125, 126, 131, 137, 140, 144, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 179, 180, 261, 432, 489, 557, 558, 559, 560, 573, 575, 588, 589, 590, 594, 596, 597, 598, 599, 604, 605, 606, 609, 611, 616, 617, 618, 622, 623, 625, 626, 630, 631, 632, 636, 637, 639, 640, 644, 645, 646, 650, 651, 653, 656, 658, 659, 661, 665, 667, 668, 669, 673, 674, 675, 679, 680, 682, 689, 690, 694, 695, 697, 703, 704, 708, 709, 711, 717, 718, 722, 723, 725, 731, 732, 736, 737, 739, 745, 746, 749, 753, 754, 755, 758, 762, 764, 766, 767, 769, 771, 774, 777, 779, 780, 785, 786, 787, 788, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 817, 823, 824, 827, 831, 836, 837, 849, 850, 851, 852, 854, 856, 858, 859, 863, 864], "test": [13, 59, 345], "true": [13, 18, 19, 21, 24, 36, 40, 41, 48, 59, 62, 67, 68, 75, 88, 99, 100, 105, 113, 118, 120, 121, 122, 123, 124, 125, 126, 131, 137, 140, 144, 153, 158, 167, 176, 261, 489, 557, 558, 559, 560, 574, 575, 588, 589, 591, 594, 596, 597, 599, 600, 604, 605, 606, 609, 610, 612, 616, 617, 618, 622, 623, 624, 625, 627, 630, 631, 632, 636, 637, 638, 639, 641, 644, 645, 646, 650, 651, 652, 654, 656, 658, 659, 660, 662, 665, 667, 668, 670, 673, 674, 675, 679, 680, 681, 684, 689, 690, 694, 695, 696, 699, 703, 704, 708, 709, 710, 713, 717, 718, 722, 723, 724, 727, 731, 732, 736, 737, 738, 741, 745, 746, 749, 750, 753, 754, 755, 758, 762, 764, 767, 769, 771, 774, 777, 779, 780, 785, 786, 787, 788, 794, 796, 798, 800, 801, 802, 803, 804, 805, 807, 808, 809, 823, 824, 827, 836, 837, 849, 850, 851, 852, 854, 856, 858, 863, 864], "been": [13, 59, 62, 152, 178, 183, 261, 275, 276, 293, 314, 315, 316, 317, 318, 319, 326, 461, 506, 562, 761, 770, 771, 779, 794, 796, 798, 831, 850, 851], "fals": [13, 36, 41, 59, 62, 67, 68, 75, 88, 99, 100, 105, 113, 118, 120, 121, 122, 123, 124, 125, 126, 131, 137, 140, 144, 148, 150, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 489, 557, 560, 566, 572, 575, 588, 589, 594, 596, 597, 599, 604, 605, 606, 609, 616, 617, 622, 623, 624, 625, 630, 631, 637, 638, 639, 644, 645, 651, 652, 656, 658, 659, 665, 667, 668, 673, 674, 679, 680, 681, 689, 690, 694, 695, 696, 703, 704, 709, 710, 717, 718, 723, 724, 731, 732, 736, 737, 738, 745, 746, 749, 753, 754, 755, 758, 762, 764, 766, 767, 769, 770, 771, 774, 777, 779, 780, 785, 787, 788, 794, 795, 796, 798, 800, 801, 803, 804, 805, 806, 807, 808, 809, 836, 837, 849, 850, 851, 852, 856, 858, 863, 864], "cover": [14, 44, 148, 149, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436], "prod": [15, 125, 151], "min": [15, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 265, 267, 268, 271, 273, 274, 275, 276, 296, 297, 330, 331, 344, 371, 389, 450, 454, 844], "max": [15, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 202, 221, 222, 265, 267, 271, 272, 273, 275, 276, 279, 283, 287, 289, 291, 293, 302, 304, 306, 308, 309, 310, 314, 316, 320, 322, 324, 326, 328, 329, 330, 336, 338, 340, 342, 343, 344, 366, 371, 389, 411, 450, 454], "elementwis": [15, 52, 54, 55, 57, 149, 152, 154, 156, 158, 159, 160, 163, 166], "summat": [15, 158, 169, 172], "actual": [15, 40, 44, 55, 57, 59, 150, 151, 152, 156, 159, 160, 169, 261, 584, 588, 609, 623, 637, 651, 659, 680, 695, 709, 723, 737, 756, 801, 802, 811, 844, 845, 851, 859], "solv": [18, 19, 21, 24, 27, 49, 191, 192, 248, 250, 253, 254, 255, 264, 268, 269, 275, 276, 277, 280, 281, 283, 284, 285, 286, 289, 290, 293, 295, 299, 300, 311, 312, 316, 317, 318, 322, 323, 326, 328, 329, 333, 334, 436, 437], "problem": [18, 19, 21, 24, 27, 42, 49, 151, 167, 183, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 302, 303, 304, 306, 308, 309, 310, 311, 312, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 340, 342, 343, 859, 871], "partit": [18, 19, 24, 26, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 183, 363, 556, 557, 558, 559, 560, 566, 579, 824, 825], "minim": [18, 220, 258, 572, 577, 740, 769, 871], "some": [18, 21, 39, 42, 44, 47, 49, 50, 53, 55, 57, 59, 151, 152, 154, 157, 162, 163, 164, 167, 256, 257, 258, 260, 262, 263, 264, 268, 276, 280, 284, 299, 311, 317, 333, 370, 372, 420, 432, 434, 435, 436, 504, 566, 573, 583, 847, 850, 851, 867, 871], "criterion": 18, "character": 18, "repres": [18, 28, 29, 30, 36, 37, 38, 39, 41, 47, 50, 55, 58, 61, 62, 74, 80, 103, 104, 134, 135, 146, 148, 150, 152, 156, 159, 173, 176, 178, 179, 183, 222, 225, 228, 258, 261, 262, 263, 265, 267, 268, 269, 271, 291, 324, 344, 377, 385, 396, 398, 404, 408, 420, 434, 435, 436, 443, 451, 461, 541, 557, 558, 559, 560, 566, 568, 569, 570, 572, 573, 586, 588, 608, 611, 621, 626, 635, 640, 649, 669, 678, 682, 693, 697, 707, 711, 721, 725, 735, 739, 748, 757, 763, 783, 790, 810, 812, 824, 825, 826, 836, 837, 849, 851, 852, 854, 855, 857, 862, 866, 869], "centroid": [18, 19], "train_input": [18, 21, 24], "train_result": [18, 21, 24, 48], "infer_input": [18, 21, 24], "infer_result": [18, 21, 24], "x": [18, 19, 21, 24, 45, 47, 52, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 283, 286, 289, 290, 316, 322, 323, 328, 329, 344, 349, 350, 352, 353, 354, 357, 362, 365, 366, 371, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 399, 403, 404, 405, 406, 410, 411, 413, 435, 436, 443, 461, 463, 464, 466, 467, 469, 473, 474, 478, 479, 487, 490, 491, 492, 493, 494, 498, 514, 515, 522, 526, 541, 544, 546, 548, 557, 558, 559, 565, 568, 572, 574, 586, 773, 793, 810, 819, 820, 825, 844, 858, 860], "x_1": [18, 19, 21, 24, 45, 347, 371, 398], "ldot": [18, 19, 21, 24, 57, 154, 155, 157, 167, 258, 261, 262, 263, 344, 362, 366], "x_n": [18, 19, 21, 24, 154, 157, 167, 358, 359, 360, 393, 394, 395, 400, 405, 409, 414], "dimension": [18, 19, 21, 24, 28, 42, 45, 48, 55, 57, 103, 150, 151, 183, 258, 259, 261, 262, 263, 264, 344, 345, 396, 400, 409, 443, 451, 458, 557, 558, 559], "find": [18, 19, 24, 42, 48, 120, 121, 122, 123, 124, 176, 177, 180, 219, 220, 598, 611, 626, 640, 669, 682, 697, 711, 725], "c_1": [18, 19, 76, 155], "c_k": [18, 19], "phi_": 18, "sum_": [18, 21, 57, 80, 103, 105, 134, 156, 160, 163, 184, 187, 194, 195, 196, 197, 198, 201, 205, 222, 225, 228, 235, 246, 254, 262, 362, 403, 404], "d": [18, 25, 36, 37, 43, 45, 52, 57, 72, 105, 120, 121, 122, 123, 124, 125, 126, 151, 156, 157, 160, 162, 164, 181, 258, 261, 262, 263, 265, 291, 293, 324, 326, 345, 361, 371, 385, 402, 407, 418, 425, 426, 427, 434, 435, 436, 478, 491, 492, 493, 494, 498, 760, 773, 777, 785, 811, 817], "x_i": [18, 24, 45, 184, 197, 231, 284, 285, 317, 398, 404], "squar": [18, 27, 62, 121, 136, 139, 147, 158, 264, 283, 284, 295, 370, 371, 380, 432, 436, 508, 511, 527, 528, 542, 543, 553, 557, 568, 773, 844], "euclidean": [18, 24, 189, 223], "distanc": [18, 24, 106, 107, 176, 183, 222, 225, 227, 228, 258, 259, 263, 344], "closest": [18, 24], "min_": 18, "leq": [18, 21, 24, 57, 117, 157, 165, 170, 258, 262, 263, 349, 350, 352, 353, 354, 357, 362, 365, 366, 371, 375, 376, 377, 379, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413, 443, 446], "c_j": [18, 397], "quad": [18, 21, 24, 344], "express": [18, 36, 57, 177, 180, 183, 258, 259, 354, 557, 568, 569, 598, 611, 626, 640, 669, 682, 697, 711, 725, 794, 796, 798, 810, 811, 817, 858, 861, 869, 871], "cdot": [18, 21, 52, 55, 67, 70, 80, 83, 85, 86, 91, 94, 99, 105, 106, 116, 120, 121, 122, 123, 124, 125, 126, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 258, 259, 262, 263, 267, 268, 279, 293, 311, 317, 326, 361, 363, 374, 402, 408, 434, 435, 436, 464, 514], "l_2": [18, 45], "norm": [18, 45, 120, 121, 166, 189, 223], "case": [18, 21, 33, 34, 35, 36, 45, 47, 48, 53, 55, 59, 61, 62, 64, 65, 67, 87, 94, 101, 113, 114, 117, 119, 140, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 349, 352, 357, 358, 359, 360, 361, 362, 365, 366, 397, 400, 406, 409, 414, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 461, 466, 487, 489, 490, 495, 505, 513, 521, 522, 526, 539, 544, 550, 552, 561, 566, 568, 591, 593, 597, 600, 603, 608, 609, 610, 612, 622, 623, 624, 627, 637, 638, 641, 651, 652, 654, 659, 660, 662, 664, 668, 670, 679, 680, 681, 682, 683, 684, 694, 695, 696, 697, 698, 699, 709, 710, 711, 712, 713, 723, 724, 725, 726, 727, 736, 737, 738, 741, 743, 750, 767, 775, 783, 815, 836, 837, 841, 844, 851, 865, 871], "arbitrari": [18, 21, 36, 50, 74, 75, 87, 88, 93, 94, 99, 100, 101, 103, 104, 115, 132, 133, 134, 135, 146, 154, 155, 157, 161, 165, 166, 167, 168, 170, 171, 172, 179, 227, 372, 418, 526, 530, 755], "spec": [18, 21, 173, 183, 842], "lloyd82": [18, 27], "consist": [18, 22, 44, 52, 57, 59, 148, 151, 169, 256, 257, 258, 261, 263, 265, 361, 374, 402, 434, 435, 436, 451, 844, 870], "iter": [18, 24, 27, 42, 49, 62, 148, 153, 158, 159, 169, 174, 175, 176, 177, 178, 180, 418, 560, 565, 566, 574, 576, 590, 591, 592, 598, 600, 601, 605, 611, 612, 613, 616, 622, 624, 626, 627, 628, 630, 636, 638, 640, 641, 642, 644, 650, 652, 654, 655, 661, 662, 663, 669, 670, 671, 673, 679, 681, 682, 683, 684, 685, 689, 694, 696, 697, 698, 699, 700, 703, 708, 710, 711, 712, 713, 714, 717, 722, 724, 725, 726, 727, 728, 731, 736, 738, 739, 740, 741, 742, 760, 811, 812, 815, 826, 859, 860, 866], "updat": [18, 24, 46, 52, 53, 57, 148, 156, 160, 169, 179, 183, 185, 186, 190, 191, 192, 193, 199, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 252, 421, 422, 423, 424, 434, 435, 436, 557, 558, 559, 560, 572, 573, 753, 758, 762, 767, 773, 774, 777, 788, 824, 851], "assign": [18, 29, 36, 41, 42, 47, 62, 148, 155, 158, 176, 177, 178, 179, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 443, 461, 573, 576, 579, 590, 596, 653, 658, 661, 667, 739, 755, 777, 780, 785, 788, 811, 817, 821, 853, 856, 859, 869], "step": [18, 21, 24, 39, 48, 129, 148, 159, 263, 374, 418, 566, 756], "g": [18, 30, 39, 41, 42, 45, 55, 57, 80, 99, 100, 148, 151, 153, 156, 160, 161, 170, 181, 183, 261, 262, 264, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 418, 421, 422, 434, 435, 436, 560, 567, 568, 753, 754, 755, 756, 758, 760, 762, 763, 765, 766, 767, 769, 771, 773, 774, 775, 777, 779, 780, 785, 786, 788, 850], "begin": [18, 21, 45, 64, 65, 87, 94, 101, 113, 117, 119, 157, 165, 170, 177, 178, 179, 183, 229, 230, 231, 232, 239, 265, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 344, 349, 350, 352, 353, 357, 362, 365, 366, 375, 376, 377, 380, 382, 383, 387, 389, 390, 392, 396, 397, 399, 403, 404, 406, 408, 410, 411, 413, 420, 434, 435, 436, 505, 521, 550, 560, 561, 565, 572, 573, 574, 591, 592, 598, 600, 601, 605, 611, 612, 613, 622, 626, 627, 628, 636, 640, 641, 642, 650, 654, 655, 662, 663, 669, 670, 671, 679, 682, 684, 685, 694, 697, 699, 700, 708, 711, 713, 714, 722, 725, 727, 728, 736, 739, 740, 741, 742, 758, 760, 812, 815, 826, 859, 862, 866], "nearest": [18, 22, 43, 62, 97, 98, 128, 145, 158, 531, 532, 533, 553, 824], "y_i": [18, 24, 45, 197, 231, 480, 494, 501, 505, 521, 550], "label": [18, 21, 24, 42, 70, 80, 127, 256, 257, 261], "mathrm": [18, 21, 24, 45, 52, 157], "arg": [18, 24, 39, 50, 151, 158, 179, 553, 561, 567, 576, 577, 578, 579, 590, 596, 598, 605, 611, 622, 626, 636, 640, 650, 653, 658, 661, 667, 669, 679, 682, 694, 697, 708, 711, 722, 725, 736, 739, 740, 788, 859, 861], "exactli": [18, 120, 121, 122, 123, 124, 125, 126, 183, 261, 275, 276, 293, 326, 389, 557, 561, 849], "disjoint": 18, "s_j": 18, "big": [18, 24, 33, 34, 42, 43, 103, 526], "recalcul": 18, "averag": [18, 67, 158, 164, 357, 390, 574, 687, 701, 715, 729], "frac": [18, 21, 24, 55, 67, 69, 70, 80, 95, 99, 103, 111, 123, 130, 134, 153, 156, 157, 161, 162, 164, 166, 168, 170, 171, 258, 262, 350, 352, 353, 354, 357, 362, 365, 366, 371, 376, 379, 380, 382, 383, 384, 385, 388, 389, 390, 392, 398, 403, 404, 406, 410, 411, 413, 464, 478, 491, 492, 493, 494, 498, 514, 515, 553], "until": [18, 59, 183, 261, 415, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 458, 564, 578, 596, 761, 764, 767, 824, 845, 850, 853, 854], "stop": [18, 568, 571, 583, 767, 777, 813, 832, 852], "varepsilon": [18, 70, 153, 161], "satisfi": [18, 36, 38, 47, 50, 176, 177, 179, 181, 225, 258, 262, 273, 576, 577, 578, 579, 580, 763, 800, 802, 805, 808, 809, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 854], "exce": [18, 560, 851], "maxim": [18, 28, 63, 219, 851], "x_m": [18, 21, 24], "produc": [18, 21, 24, 37, 44, 46, 49, 54, 59, 101, 148, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 259, 262, 347, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 364, 365, 366, 370, 372, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 407, 410, 412, 413, 418, 482, 489, 507, 534, 564, 845], "stage": [18, 21, 24, 30, 39, 42, 43, 44, 47, 48, 49, 51, 140, 148, 156, 163, 264, 434, 435, 436, 756], "predict": [18, 22, 24, 27, 42, 44, 45], "y_j": [18, 24], "accord": [18, 21, 24, 42, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 169, 176, 180, 261, 347, 371, 400, 405, 418, 462, 466, 468, 471, 485, 490, 513, 522, 534, 535, 536, 544, 545, 551, 553, 762, 764, 824], "rule": [18, 22, 66, 84, 105, 108, 109, 112, 129, 139, 140, 142, 147, 763, 847, 858, 860, 867], "x_j": [18, 24], "l": [18, 24, 27, 151, 162, 169, 183, 258, 275, 289, 293, 310, 316, 319, 322, 326, 345, 348, 358, 360, 372, 389, 393, 395, 557, 616, 630, 644, 673, 689, 703, 717, 731], "c_l": 18, "kmean": [18, 30], "run_train": [18, 21, 24], "tabl": [18, 19, 21, 24, 28, 30, 33, 34, 35, 37, 38, 42, 43, 48, 50, 51, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 189, 190, 191, 192, 258, 261, 263, 295, 345, 346, 370, 371, 432, 467, 482, 489, 507, 513, 529, 534, 541, 552, 553, 554, 583, 761, 770, 793, 810, 836, 837], "initial_centroid": 18, "kmeans_desc": [18, 19], "set_cluster_count": [18, 19], "10": [18, 19, 24, 53, 181, 348, 361, 372, 374, 402, 496, 515, 553, 558, 559, 586, 763, 773, 775], "set_max_iteration_count": 18, "50": 18, "set_accuracy_threshold": 18, "1e": [18, 99, 100], "print_tabl": [18, 19, 21, 24], "get_label": [18, 24], "get_model": [18, 21, 24, 48], "get_centroid": [18, 19], "print_valu": 18, "get_objective_function_valu": 18, "run_infer": [18, 21, 24], "new_data": [18, 21, 24], "get_cluster_count": [18, 19], "dal": [18, 19, 21, 24, 28, 29, 30, 33, 34, 36, 38, 39, 40, 41, 47, 48, 50, 51], "via": [18, 19, 21, 24, 28, 29, 33, 34, 36, 37, 38, 39, 40, 41, 50, 57, 59, 86, 140, 148, 150, 151, 152, 156, 158, 159, 163, 164, 178, 183, 258, 261, 263, 573, 590, 596, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 791, 794, 796, 798, 847, 869], "inclus": [18, 19, 21, 24, 28, 33, 34, 36, 37, 40, 41, 400, 409, 560], "algo": [18, 19, 21, 24, 30], "header": [18, 19, 21, 24, 28, 31, 33, 34, 36, 37, 40, 41, 43, 48, 176, 179, 181, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 586, 589, 590, 598, 640, 661, 669, 682, 697, 711, 725, 739, 751, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 780, 782, 783, 785, 786, 787, 788, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 847, 848, 849, 850, 851, 852, 853, 854, 858, 859, 866], "file": [18, 19, 21, 24, 28, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 48, 583, 783], "typenam": [18, 19, 21, 24, 33, 34, 36, 37, 38, 40, 47, 50, 51, 59, 62, 158, 176, 177, 178, 179, 180, 181, 256, 257, 261, 266, 269, 270, 272, 274, 277, 278, 281, 282, 285, 286, 288, 290, 292, 294, 297, 300, 301, 303, 305, 307, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343, 349, 350, 351, 352, 353, 354, 355, 357, 362, 363, 364, 365, 366, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 406, 408, 410, 411, 412, 413, 421, 422, 423, 424, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 569, 572, 573, 574, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 607, 611, 612, 613, 616, 617, 618, 619, 622, 624, 625, 626, 627, 628, 630, 631, 632, 633, 636, 638, 639, 640, 641, 642, 644, 645, 646, 647, 650, 652, 653, 654, 655, 656, 657, 658, 661, 662, 663, 665, 666, 667, 669, 670, 671, 673, 674, 675, 676, 679, 681, 682, 684, 685, 689, 690, 691, 694, 696, 697, 699, 700, 703, 704, 705, 708, 710, 711, 713, 714, 717, 718, 719, 722, 724, 725, 727, 728, 731, 732, 733, 736, 738, 739, 740, 741, 742, 745, 746, 747, 753, 754, 755, 756, 758, 759, 762, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 794, 796, 798, 848, 851, 853, 854, 858, 859, 860, 861, 866], "by_default": [18, 19, 21, 24, 47, 50, 349, 352, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413], "cluster_count": [18, 19], "get_max_iteration_count": 18, "get_accuracy_threshold": 18, "intermedi": [18, 19, 21, 24, 42, 48, 52, 54, 55, 152, 157, 162, 167, 260, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 755, 779, 780], "constructor": [18, 19, 21, 24, 28, 33, 34, 35, 36, 37, 40, 41, 47, 50, 57, 59, 62, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 183, 263, 349, 350, 352, 353, 354, 357, 358, 359, 360, 361, 362, 365, 366, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 433, 443, 461, 557, 558, 559, 560, 563, 564, 572, 580, 581, 592, 601, 613, 622, 624, 628, 636, 638, 642, 650, 652, 655, 663, 671, 679, 681, 685, 694, 696, 700, 708, 710, 714, 722, 724, 728, 736, 738, 739, 742, 751, 769, 775, 778, 783, 787, 811, 814, 817, 818, 821, 824, 825, 827, 828, 829, 830, 832, 833, 834, 835, 838, 847, 849, 851, 859, 863], "properti": [18, 19, 21, 24, 36, 38, 39, 40, 41, 42, 43, 47, 50, 62, 148, 151, 177, 181, 264, 358, 372, 393, 396, 400, 753, 754, 755, 758, 762, 766, 767, 769, 771, 774, 777, 779, 780, 786, 788, 836, 849, 872], "accuracy_threshold": 18, "threshold": [18, 487, 495, 496, 497, 499, 508, 512, 513, 528, 529, 539, 549, 553, 558, 568, 753, 758, 762, 771, 774, 793], "getter": [18, 19, 21, 24, 37, 38, 42, 47, 50], "setter": [18, 19, 21, 24, 38, 42, 47, 50, 151], "invari": [18, 19, 21, 24, 29], "max_iteration_count": 18, "maximum": [18, 55, 62, 122, 147, 150, 154, 164, 189, 219, 451, 513, 553, 596, 609, 623, 637, 651, 680, 683, 687, 695, 698, 701, 709, 712, 715, 723, 726, 729, 737, 749, 847, 851], "100": [18, 42, 173, 345, 371, 584, 586, 742, 785, 788], "parameter": [18, 19, 21, 24, 261, 263], "get_data": [18, 19, 21, 24, 36, 39, 40, 41], "set_data": [18, 19, 21, 24], "get_initial_centroid": 18, "set_initial_centroid": 18, "get_iteration_count": 18, "sampl": [18, 38, 42, 47, 50, 153, 164, 358, 389, 393, 872], "phi_x": 18, "desc": [18, 19, 21, 24, 47, 50, 51, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 256, 257, 258, 259, 260, 262], "precondit": [18, 19, 21, 24, 29, 33, 34, 36, 41, 50, 183, 434, 435, 436], "has_data": [18, 19, 21, 24, 39, 41], "row_count": [18, 19, 21, 24, 33, 34, 40, 41, 42, 48], "column_count": [18, 19, 21, 24, 33, 34, 40, 41, 48], "postcondit": [18, 19, 21, 24, 29, 36, 50, 183], "iteration_count": 18, "set_model": [18, 21, 24], "choos": [19, 21, 36, 57, 151, 155, 163, 172, 183, 258, 775], "compute_input": 19, "compute_result": 19, "train": [19, 22, 26, 42, 44, 45, 47, 48, 49, 53, 54, 57, 69, 101, 158, 162], "first": [19, 21, 27, 28, 33, 37, 39, 42, 47, 57, 59, 61, 80, 129, 151, 156, 157, 160, 169, 176, 180, 183, 197, 219, 220, 232, 258, 261, 264, 265, 273, 274, 276, 284, 291, 317, 324, 344, 399, 408, 420, 484, 500, 525, 548, 553, 565, 566, 568, 570, 571, 590, 591, 593, 598, 600, 603, 605, 611, 612, 615, 616, 622, 624, 625, 626, 627, 629, 630, 636, 638, 639, 640, 641, 643, 644, 650, 652, 653, 654, 661, 662, 664, 669, 670, 672, 673, 679, 681, 682, 683, 684, 688, 694, 696, 697, 698, 699, 702, 703, 708, 710, 711, 712, 713, 716, 717, 722, 724, 725, 726, 727, 730, 736, 738, 739, 740, 741, 744, 750, 756, 760, 763, 770, 775, 780, 788, 793, 824, 849, 851, 852, 859, 861, 866], "run_comput": 19, "kmeans_init": 19, "init": [19, 179, 572, 590, 591, 598, 600, 605, 611, 612, 622, 626, 627, 636, 640, 641, 650, 653, 654, 661, 662, 669, 670, 679, 682, 684, 694, 697, 699, 708, 711, 713, 722, 725, 727, 736, 739, 740, 741], "obtain": [19, 33, 34, 35, 39, 48, 51, 159, 167, 183, 260, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 349, 350, 352, 353, 354, 355, 356, 357, 361, 362, 365, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 564, 584, 586, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 753, 758, 762, 767, 770, 771, 774, 793, 795, 826, 851], "princip": [20, 22, 43, 48], "compon": [20, 22, 43, 44, 48, 174, 231, 232, 360, 395, 446, 625, 639, 752, 783, 791, 871], "analysi": [20, 22, 43, 44, 48, 148, 345, 583], "pca": [20, 22, 43, 48, 51], "exploratori": 21, "transform": [21, 37, 38, 39, 42, 43, 44, 50, 57, 59, 97, 98, 150, 151, 159, 178, 180, 183, 221, 222, 231, 232, 256, 257, 258, 259, 261, 263, 265, 291, 324, 349, 350, 352, 353, 354, 357, 362, 365, 366, 368, 371, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413, 416, 418, 434, 435, 436, 513, 553, 555], "possibli": [21, 178, 192, 258, 259, 261, 567, 579, 770, 793, 806, 807, 812, 850], "correl": [21, 405], "uncorrel": 21, "direct": [21, 33, 34, 42, 44, 59, 66, 84, 108, 109, 112, 139, 142, 149, 156, 158, 169, 173, 258, 262, 400, 409, 518, 525, 553, 777, 788, 824, 871], "varianc": [21, 39, 69, 70, 71, 99, 100, 153, 158, 385], "mostli": [21, 57, 806, 807], "spread": 21, "r": [21, 27, 45, 52, 76, 83, 85, 86, 99, 100, 116, 120, 121, 122, 123, 124, 125, 126, 158, 166, 169, 180, 183, 230, 267, 271, 308, 309, 342, 343, 349, 350, 352, 353, 354, 357, 362, 365, 366, 374, 375, 376, 377, 379, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 462, 467, 481, 557, 558, 559, 560, 561, 572, 573, 578, 787, 795, 821, 823, 824], "eigenvector": [21, 48, 287, 288, 289, 290, 295, 320, 321, 322, 323], "lang87": [21, 27], "eigenvalu": [21, 264, 265, 266, 273, 274, 287, 288, 289, 290, 291, 292, 296, 297, 302, 303, 308, 309, 320, 321, 322, 323, 324, 325, 330, 331, 336, 337, 342, 343], "decomposit": [21, 22, 27, 43, 267, 268, 271, 273, 291, 295, 324, 347, 371], "dataset": [21, 24, 37, 42, 45, 183, 264, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460], "format": [21, 35, 37, 39, 41, 42, 44, 55, 56, 58, 59, 77, 78, 79, 80, 81, 82, 97, 98, 113, 114, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 261, 262, 263, 264, 344, 396, 397, 419, 421, 422, 428, 429, 432], "column": [21, 28, 35, 39, 40, 41, 43, 45, 57, 105, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 283, 284, 287, 289, 293, 295, 296, 297, 298, 299, 300, 301, 304, 305, 306, 307, 308, 316, 317, 320, 322, 326, 328, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 420, 421, 422, 423, 428, 429, 430, 432, 541, 558, 559, 761], "s_i": [21, 418], "x_": [21, 55, 344, 350, 360, 376, 384, 395, 396, 397, 400, 405, 409, 414], "cross": [21, 44, 127], "product": [21, 42, 52, 57, 59, 105, 140, 149, 158, 159, 163, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 246, 247, 249, 251, 252, 255, 265, 267, 268, 271, 291, 293, 298, 299, 300, 301, 304, 305, 306, 307, 308, 324, 326, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 345, 361, 402, 434, 435, 437, 557, 558, 559, 583, 871, 872], "tx": [21, 283, 286, 328, 329], "sigma": [21, 57, 69, 70, 71, 99, 100, 153, 161, 169, 273, 354, 357, 384, 390, 392], "lambda_i": [21, 287, 320, 404], "upsilon_i": 21, "ping14": [21, 27], "final": [21, 24, 44, 46, 53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 183, 262, 415, 573, 773, 850, 858], "sort": [21, 57, 176, 273, 420, 574, 611, 626, 640, 653, 669, 779, 790, 810], "pair": [21, 24, 50, 60, 148, 158, 176, 262, 347, 371, 502, 503, 519, 520, 553, 558, 559, 566, 598, 601, 603, 611, 613, 616, 622, 626, 628, 630, 636, 640, 644, 650, 669, 673, 679, 682, 685, 689, 694, 697, 700, 703, 708, 711, 717, 722, 725, 731, 736], "descend": [21, 273], "form": [21, 36, 52, 57, 148, 171, 183, 187, 200, 201, 202, 205, 216, 217, 218, 222, 225, 228, 236, 237, 238, 246, 249, 250, 254, 265, 267, 268, 271, 273, 283, 284, 285, 286, 287, 289, 291, 293, 295, 296, 298, 299, 302, 304, 306, 308, 310, 311, 320, 322, 324, 326, 329, 330, 332, 333, 336, 338, 340, 342, 558, 559, 564, 565, 566, 586, 598, 611, 626, 640, 669, 682, 697, 711, 725, 758, 772, 782, 793, 815, 837, 849], "upsilon_": 21, "singular": [21, 27, 264, 265, 266, 273, 274, 275, 276, 287, 288, 289, 290, 291, 292, 293, 296, 297, 302, 303, 308, 309, 320, 321, 322, 323, 324, 325, 326, 330, 331, 336, 337, 342, 343, 482, 489, 507, 534], "its": [21, 30, 33, 34, 36, 39, 41, 42, 45, 47, 48, 49, 50, 57, 59, 60, 61, 114, 115, 148, 150, 151, 152, 154, 160, 162, 163, 174, 176, 178, 180, 183, 203, 210, 214, 215, 240, 244, 245, 246, 256, 257, 258, 260, 261, 262, 263, 267, 268, 271, 346, 370, 420, 425, 426, 427, 432, 434, 435, 436, 443, 553, 556, 557, 558, 559, 560, 565, 566, 567, 568, 569, 571, 572, 577, 578, 739, 750, 752, 753, 754, 755, 758, 760, 762, 764, 766, 767, 769, 770, 771, 774, 777, 779, 780, 785, 786, 788, 791, 793, 797, 824, 847, 850, 851, 854, 858, 859, 872], "u_i": [21, 169, 276, 284, 311, 317, 318, 418], "v_i": [21, 400, 409], "demmel90": [21, 27], "v_": 21, "solver": [21, 44, 49, 183], "due": [21, 59, 151, 258, 261, 358, 393, 762, 775, 785], "ambigu": [21, 27], "determinist": [21, 264, 372, 401, 564, 566, 574, 579, 775], "One": [21, 36, 42, 53, 156, 159, 261, 561], "propos": [21, 182], "bro07": [21, 27], "modif": [21, 396], "hat": [21, 153], "_i": [21, 45, 76, 276, 277, 280, 284], "t_i": 21, "sgn": [21, 45], "max_": [21, 24], "ij": 21, "t_": 21, "signum": 21, "end": [21, 28, 43, 44, 45, 49, 62, 64, 65, 87, 94, 101, 113, 117, 119, 147, 148, 150, 157, 165, 170, 173, 176, 177, 178, 179, 180, 187, 194, 195, 201, 205, 222, 225, 228, 229, 230, 231, 232, 239, 246, 254, 265, 344, 349, 350, 352, 353, 357, 362, 365, 366, 375, 376, 377, 380, 382, 383, 387, 389, 390, 392, 396, 397, 399, 403, 404, 406, 410, 411, 413, 420, 434, 435, 436, 505, 521, 550, 560, 561, 565, 568, 571, 572, 573, 574, 591, 592, 598, 600, 601, 605, 611, 612, 613, 616, 622, 626, 627, 628, 630, 636, 640, 641, 642, 644, 650, 654, 655, 662, 663, 669, 670, 671, 673, 679, 682, 684, 685, 689, 694, 697, 699, 700, 703, 708, 711, 713, 714, 717, 722, 725, 727, 728, 731, 736, 739, 740, 741, 742, 750, 812, 813, 826, 847, 859, 862, 866], "linear": [21, 27, 42, 49, 55, 57, 59, 62, 83, 85, 86, 97, 98, 116, 150, 158, 168, 182, 183, 188, 190, 248, 250, 254, 255, 267, 270, 271, 272, 275, 276, 278, 279, 282, 283, 284, 286, 293, 294, 298, 301, 304, 305, 306, 307, 310, 313, 314, 315, 316, 317, 319, 326, 327, 328, 329, 332, 335, 338, 339, 340, 341, 344, 345, 358, 359, 393, 394, 436, 437, 461, 513, 553, 555, 564], "pca_desc": [21, 48], "set_component_count": [21, 48], "5": [21, 24, 33, 34, 53, 91, 97, 98, 99, 100, 129, 157, 168, 181, 231, 232, 260, 345, 360, 362, 371, 372, 374, 377, 380, 387, 395, 399, 403, 415, 420, 479, 488, 532, 548, 557, 560, 775], "set_determinist": [21, 48], "get_mean": 21, "get_vari": 21, "get_eigenvalu": 21, "get_eigenvector": [21, 48], "get_component_count": 21, "get_transformed_data": [21, 48], "component_count": 21, "get_determinist": 21, "cov": 21, "dim_reduct": 21, "whether": [21, 36, 39, 41, 42, 47, 51, 57, 59, 62, 67, 68, 99, 105, 113, 148, 151, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 178, 183, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 263, 293, 294, 310, 311, 312, 313, 317, 318, 326, 327, 328, 329, 420, 423, 430, 432, 461, 583, 584, 586, 837], "project": [21, 27, 57, 158, 180], "transformed_data": 21, "mine": [22, 27, 44], "regress": [22, 42, 44, 47, 49], "discoveri": 22, "neighbor": [22, 43, 158], "knn": [22, 24, 30, 43], "nn": [22, 23, 43, 51, 344], "major": [24, 39, 41, 42, 44, 57, 148, 173, 182, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 215, 221, 222, 224, 225, 226, 227, 228, 240, 244, 245, 246, 251, 253, 254, 295, 344, 423, 430, 584, 586], "vote": 24, "observ": [24, 39, 42, 45, 183, 256, 257, 259, 443, 446, 611, 626, 640, 669, 682, 697, 711, 725, 763, 852], "let": [24, 57, 62, 80, 81, 151, 156, 160, 168, 179, 258, 262, 385, 398, 404, 560, 573, 739, 775], "y": [24, 45, 47, 61, 185, 186, 187, 193, 194, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 211, 213, 216, 218, 229, 230, 231, 232, 233, 235, 236, 238, 239, 241, 243, 350, 353, 354, 376, 380, 383, 384, 435, 436, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552, 572, 573, 574, 586, 810, 820, 844], "y_1": 24, "y_n": [24, 360, 395, 414], "allow": [24, 38, 39, 44, 47, 50, 53, 55, 59, 62, 66, 84, 108, 109, 112, 129, 142, 148, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 183, 260, 261, 372, 400, 409, 555, 561, 588, 599, 687, 701, 715, 729, 753, 756, 760, 762, 763, 765, 771, 773, 774, 777, 778, 779, 788, 793, 806, 807, 825, 828, 836, 837, 847, 850, 871], "subseteq": 24, "respect": [24, 26, 29, 52, 54, 57, 59, 61, 80, 98, 101, 141, 151, 156, 157, 158, 160, 166, 168, 169, 176, 183, 222, 225, 228, 231, 232, 258, 259, 261, 262, 263, 344, 361, 365, 366, 402, 410, 411, 478, 485, 491, 492, 494, 504, 531, 536, 537, 541, 545, 551, 553, 558, 559, 570, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 756, 770, 773, 794, 796, 798, 851, 869], "estim": [24, 183, 264, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460], "probabl": [24, 349, 350, 352, 353, 354, 357, 362, 365, 366, 371, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413, 418], "fraction": [24, 156, 505, 513, 521, 553], "whose": [24, 28, 47, 173, 179, 248, 250, 255, 256, 257, 259, 261, 262, 273, 283, 284, 287, 298, 299, 300, 301, 304, 305, 306, 307, 316, 317, 320, 328, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 586, 775, 787, 811], "p_": [24, 169, 265, 389], "jl": 24, "x_r": 24, "y_r": 24, "highest": [24, 176, 658, 775, 779], "equat": [24, 49, 169, 190, 191, 192, 248, 250, 253, 254, 255, 264, 267, 270, 271, 272, 275, 276, 278, 279, 282, 283, 284, 285, 286, 293, 294, 298, 301, 304, 305, 306, 307, 310, 313, 314, 315, 316, 317, 319, 326, 327, 328, 329, 332, 335, 338, 339, 340, 341, 436], "travers": [24, 608, 611, 616, 622, 626, 630, 636, 640, 644, 650, 669, 673, 679, 682, 683, 689, 694, 697, 698, 703, 708, 711, 712, 717, 722, 725, 726, 731, 736, 740, 743, 826, 866], "leaf": [24, 26], "tild": [24, 52, 169], "known": [24, 52, 59, 148, 156, 163, 174, 175, 400, 421, 422, 428, 429, 573, 758, 770, 771], "search": [24, 176], "limit": [24, 50, 54, 55, 57, 58, 62, 167, 262, 368, 487, 495, 496, 497, 499, 508, 513, 526, 528, 529, 530, 539, 577, 752, 753, 762, 771, 774, 793, 847, 851, 859, 872], "explor": 24, "part": [24, 26, 32, 39, 42, 55, 59, 61, 159, 174, 183, 184, 192, 203, 212, 213, 215, 216, 217, 218, 237, 238, 242, 243, 256, 257, 258, 259, 262, 263, 273, 274, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 310, 311, 312, 313, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 332, 333, 344, 361, 402, 421, 422, 433, 434, 435, 436, 466, 487, 490, 495, 505, 518, 521, 522, 526, 539, 541, 544, 553, 555, 561, 580, 585, 824, 826, 836, 842, 844], "less": [24, 38, 50, 60, 105, 152, 158, 163, 168, 176, 180, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 485, 504, 513, 536, 537, 545, 577, 596, 602, 611, 613, 616, 618, 626, 628, 630, 632, 640, 642, 644, 646, 653, 655, 669, 671, 673, 675, 739, 746, 771, 779, 795, 859], "than": [24, 28, 29, 36, 60, 74, 75, 105, 140, 148, 152, 157, 158, 167, 168, 176, 183, 219, 220, 222, 225, 228, 261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 330, 332, 336, 338, 340, 342, 400, 409, 421, 422, 428, 429, 504, 557, 577, 579, 586, 596, 602, 616, 618, 630, 632, 644, 646, 673, 675, 739, 746, 752, 771, 775, 793, 794, 795, 806, 807, 824, 844, 850, 851, 859], "most": [24, 44, 47, 53, 55, 57, 59, 60, 105, 148, 150, 154, 155, 159, 162, 163, 166, 167, 172, 173, 264, 296, 330, 371, 400, 409, 420, 461, 582, 753, 762, 774, 775, 790, 791, 864, 871], "distant": 24, "onc": [24, 39, 148, 150, 151, 152, 163, 262, 264, 434, 435, 436, 561, 562, 739, 760, 767, 771, 788, 845, 849], "equiv": [24, 262], "class_count": 24, "neighbor_count": 24, "knn_desc": 24, "get_class_count": 24, "set_class_count": 24, "get_neighbor_count": 24, "set_neighbor_count": 24, "bruteforc": 24, "kd_tree": 24, "set_label": 24, "classifi": 24, "tree": [25, 43, 849], "binari": [26, 42, 55, 57, 148, 149, 156, 157, 158, 159, 160, 163, 166, 176, 180, 405, 476, 572, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 794, 796, 798, 858, 860, 869], "bentley80": [26, 27], "induc": 26, "hyperplan": 26, "split": [26, 59, 264, 363, 372, 408, 557, 558, 559, 560, 564, 566, 572, 573, 576, 577, 578, 579, 761, 818, 821, 824, 825, 843], "axi": [26, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 558, 559], "cut": [26, 810], "subset": [26, 49, 55, 147, 150, 173, 174, 181], "bucket": [26, 600, 602, 682, 684, 687, 697, 699, 701, 711, 713, 715, 725, 727, 729], "belong": [26, 148, 158, 167, 183, 258, 259, 262, 268, 269, 276, 277, 280, 281, 284, 285, 311, 312, 317, 318, 358, 359, 370, 393, 394, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 754, 755, 756, 766, 769, 771, 777, 779, 780, 785, 788, 853], "region": [26, 59, 347, 371, 432, 836, 848, 853], "path": [26, 173, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 752, 775, 844], "orthogon": [26, 265, 267, 268, 271, 273, 291, 295, 296, 298, 299, 302, 304, 306, 308, 320, 324, 332, 333], "about": [27, 36, 39, 41, 42, 44, 50, 51, 59, 163, 261, 264, 345, 443, 461, 476, 790, 793, 795, 817, 868], "openclspec": [27, 42], "khrono": [27, 42], "opencl": [27, 42, 848], "work": [27, 39, 44, 46, 55, 59, 150, 151, 152, 154, 157, 161, 165, 166, 167, 170, 171, 172, 175, 180, 183, 222, 225, 228, 261, 265, 267, 268, 271, 287, 289, 291, 320, 322, 324, 368, 372, 416, 556, 563, 564, 565, 573, 576, 577, 579, 739, 793, 824, 831, 845, 847, 848, 850, 851, 852], "document": [27, 43, 57, 59, 62, 174, 183, 258, 433, 434, 435, 436, 512, 549, 791, 793, 810, 844, 871, 872], "revis": [27, 183], "24": [27, 181, 344, 414, 486, 513, 538], "pdf": 27, "syclspec": [27, 42], "subgroup": 27, "integr": [27, 28, 39, 149, 150, 151, 176, 179, 181, 498, 518, 551, 553, 586, 769, 771, 787, 790, 811, 817, 851], "modern": [27, 358, 360, 393, 395], "stuart": 27, "lloyd": 27, "quantiz": [27, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pcm": 27, "ieee": [27, 53, 54, 61, 295, 476, 513, 541], "transact": [27, 345, 806, 807], "theori": 27, "1982": 27, "28": 27, "1982pp": 27, "129": 27, "137": 27, "bro": 27, "acar": 27, "kolda": 27, "resolv": [27, 178, 461, 586], "sandia": 27, "sand2007": 27, "6422": 27, "unlimit": [27, 753, 762, 763, 773, 774, 777, 778, 785, 786, 788], "releas": [27, 36, 183, 434, 435, 436, 583, 586, 604, 605, 770, 793, 800, 801, 802, 805, 808, 809, 836, 837, 850, 872], "octob": 27, "2007": 27, "bentlei": 27, "multidimension": [27, 57, 148, 345, 360, 395], "divid": [27, 29, 36, 42, 57, 62, 77, 78, 79, 80, 81, 82, 147, 176, 287, 289, 295, 320, 322, 465, 470, 473, 475, 482, 489, 507, 534, 553, 577, 578, 579], "conquer": [27, 287, 289, 295, 320, 322], "acm": [27, 345], "23": [27, 53, 181, 344, 360, 366, 395], "214": 27, "229": 27, "1980": 27, "friedman17": [27, 49], "friedman": 27, "hasti": 27, "tibshirani": 27, "statist": [27, 39, 57, 158, 161, 183, 355, 356, 358, 367, 368, 373, 386, 393, 415, 416, 418, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 455, 456, 457, 459, 460, 555], "springer": [27, 345], "2017": [27, 174, 792], "zhang04": [27, 49], "zhang": 27, "stochast": 27, "gradient": [27, 52, 53, 57, 65, 71, 73, 75, 88, 92, 94, 96, 98, 101, 104, 111, 114, 118, 131, 133, 135, 137, 144, 156, 158, 160], "descent": 27, "icml": 27, "2004": 27, "proceed": [27, 256, 257, 345], "Of": 27, "twenti": 27, "intern": [27, 36, 42, 49, 54, 59, 62, 148, 151, 256, 257, 261, 345, 461, 552, 583, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 750, 751, 758, 771, 777, 783, 788, 789, 793, 794, 796, 798, 844, 851, 861, 869, 872], "confer": [27, 345], "On": [27, 46, 57, 59, 150, 158, 159, 163, 254, 273, 289, 291, 322, 324, 421, 422, 423, 424, 434, 435, 436, 760, 791], "machin": [27, 49, 51, 573], "919": 27, "926": 27, "lang": 27, "algebra": [27, 182, 183, 188, 295, 344, 437, 461, 555], "verlag": 27, "york": 27, "1987": 27, "ping": 27, "tak": 27, "peter": 27, "eric": 27, "polizzi": 27, "feast": 27, "subspac": 27, "eigensolv": 27, "approxim": [27, 358, 359, 371, 393, 394, 557, 558, 559, 560, 579, 775], "spectral": [27, 287, 320], "2014": 27, "w": [27, 52, 57, 62, 69, 70, 72, 149, 151, 153, 156, 160, 162, 164, 165, 167, 169, 262, 287, 289, 320, 322, 407, 844], "demmel": 27, "kahan": [27, 287, 320], "accur": [27, 151, 171, 347, 365, 366, 370, 371, 410], "bidiagon": [27, 265, 273, 295], "siam": 27, "sci": [27, 345], "stat": [27, 183, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 456, 457, 458, 459], "11": [27, 181, 231, 232, 344, 345, 360, 395, 396, 791], "1990": 27, "pp": 27, "873": 27, "912": 27, "cstdint": 28, "It": [28, 36, 39, 42, 47, 54, 57, 59, 61, 62, 83, 85, 86, 97, 99, 101, 115, 116, 127, 145, 146, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 177, 178, 183, 195, 200, 201, 202, 203, 205, 210, 214, 215, 221, 222, 224, 225, 228, 240, 244, 245, 246, 251, 253, 254, 256, 257, 261, 289, 322, 364, 372, 385, 398, 400, 404, 409, 412, 486, 506, 538, 557, 561, 564, 566, 572, 573, 588, 611, 626, 640, 669, 682, 697, 711, 725, 753, 756, 758, 762, 763, 766, 767, 769, 774, 793, 800, 801, 802, 805, 810, 811, 815, 817, 837, 846, 851, 858, 861, 867], "recommend": [28, 44, 57, 154, 155, 163, 166, 172, 178, 183, 258, 261, 557, 793, 817, 824], "enumer": [28, 41, 54, 57, 59, 60, 61, 62, 151, 169, 183, 258, 259, 260, 261, 262, 570, 752, 798, 847, 859], "data_typ": [28, 30, 31, 41, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 256, 257, 788], "them": [28, 39, 42, 49, 50, 57, 59, 61, 62, 120, 121, 122, 123, 124, 125, 126, 129, 148, 150, 151, 152, 158, 169, 185, 197, 213, 218, 238, 242, 243, 256, 257, 260, 261, 262, 265, 368, 372, 438, 478, 479, 491, 492, 493, 494, 498, 512, 549, 573, 752, 760, 774], "name": [28, 30, 37, 38, 39, 47, 50, 53, 57, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 182, 183, 291, 381, 461, 553, 554, 557, 560, 572, 576, 578, 579, 588, 760, 812, 816, 841, 842, 844], "int_xx_t": 28, "uint_xx_t": 28, "xx": 28, "bi": [28, 504, 531, 769], "start_index": 28, "end_index": 28, "start": [28, 36, 39, 42, 99, 100, 113, 114, 158, 176, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 344, 386, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 758, 760, 775, 792, 819, 823, 845, 851, 852], "get_element_count": [28, 31], "max_end_index": 28, "noexcept": [28, 36, 41, 181, 682, 684, 691, 696, 697, 699, 705, 710, 711, 713, 719, 724, 725, 727, 733, 738, 739, 741, 749, 750, 763, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837, 850, 856], "start_idx": 28, "end_idx": 28, "indic": [28, 36, 37, 40, 41, 42, 58, 59, 61, 62, 80, 81, 99, 100, 120, 121, 122, 123, 124, 125, 126, 148, 150, 151, 155, 156, 162, 164, 165, 169, 170, 183, 219, 220, 225, 258, 263, 275, 276, 283, 284, 285, 286, 287, 289, 293, 294, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 329, 420, 421, 422, 428, 429, 432, 438, 443, 446, 529, 541, 557, 562, 571, 739, 757, 790, 844, 851], "greater": [28, 36, 74, 75, 158, 168, 261, 400, 409, 421, 422, 428, 429, 557, 566, 586, 616, 618, 630, 632, 644, 646, 655, 673, 675, 746, 851], "rel": [28, 176, 179, 574, 775, 836], "next": [28, 39, 148, 150, 151, 158, 180, 454, 525, 553, 568, 571, 573, 616, 673, 689, 731, 760, 761, 767, 779, 785, 813, 817, 832], "last": [28, 36, 40, 46, 99, 100, 105, 141, 158, 161, 176, 231, 232, 258, 262, 350, 353, 420, 565, 566, 567, 568, 590, 591, 593, 596, 598, 600, 603, 605, 611, 612, 615, 622, 624, 626, 627, 629, 630, 636, 638, 640, 641, 643, 644, 650, 652, 653, 654, 661, 662, 664, 667, 669, 670, 672, 679, 681, 682, 683, 684, 688, 694, 696, 697, 698, 699, 702, 703, 708, 710, 711, 712, 713, 716, 717, 722, 724, 725, 726, 727, 730, 736, 738, 739, 740, 741, 744, 764, 775, 826, 850, 866], "neg": [28, 62, 67, 68, 77, 78, 79, 80, 81, 82, 87, 88, 99, 100, 101, 106, 107, 141, 152, 153, 156, 158, 169, 170, 171, 273, 370, 399, 446, 484, 498, 512, 526, 529, 530, 540, 541, 549, 553, 771, 836, 837], "3": [28, 33, 34, 36, 48, 59, 69, 70, 71, 95, 100, 111, 113, 114, 129, 148, 151, 157, 169, 183, 188, 200, 210, 214, 215, 240, 244, 245, 251, 253, 259, 260, 289, 290, 322, 323, 344, 345, 358, 359, 360, 361, 374, 391, 395, 402, 407, 408, 414, 420, 458, 463, 464, 467, 472, 473, 514, 515, 528, 557, 558, 559, 560, 567, 642, 671, 760, 788], "sequenc": [28, 152, 156, 159, 176, 256, 257, 258, 259, 261, 262, 263, 345, 346, 351, 369, 370, 372, 385, 386, 391, 398, 400, 404, 407, 408, 409, 417, 553, 565, 568, 573, 574, 640, 669, 711, 725, 739, 740, 785, 810, 812, 843, 866], "ye": [29, 51, 761, 836, 837], "three": [29, 38, 39, 42, 47, 50, 169, 231, 232, 259, 264, 371, 420, 489, 559, 739, 752, 756, 760, 770, 773], "logic": [29, 39, 41, 42, 57, 58, 59, 61, 86, 146, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 420, 572, 791, 793, 794, 800, 805, 847, 851], "logic_error": [29, 50], "runtime_error": [29, 50, 787], "bad_alloc": 29, "violat": [29, 50, 60, 151, 176, 351, 378, 815], "happen": [29, 36, 55, 59, 60, 76, 151, 156, 167, 258, 482, 489, 507, 534], "failur": [29, 62, 182, 560, 583, 854], "storag": [29, 36, 39, 57, 58, 59, 149, 150, 151, 158, 159, 178, 182, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 260, 263, 264, 345, 443, 446, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 777, 793, 842, 843, 859], "invalid": [29, 256, 257, 258, 261, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 482, 489, 507, 508, 534, 624, 638, 652, 681, 696, 710, 724, 738, 739, 777, 788], "domain": [29, 42, 57, 183, 256, 257, 258, 259, 261, 368, 370, 416, 418, 438, 451, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 555, 871], "domain_error": [29, 36], "out_of_rang": [29, 614, 686, 743], "unsupported_devic": [29, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436], "situat": [29, 163, 794], "No": [29, 36, 40, 51, 57, 62, 267, 268, 271, 345, 483, 622, 624, 636, 638, 650, 652, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 836, 837, 850], "outsid": [29, 148, 150, 151, 183, 262, 588, 753, 756, 758, 762, 767, 774, 851], "higher": [29, 53, 55, 153, 156, 161, 164, 165, 168, 183, 775, 824, 851], "aris": 29, "becaus": [29, 54, 55, 57, 59, 152, 153, 161, 183, 557, 564, 568, 573, 583, 763, 771, 794, 810, 824, 832, 836, 845, 871], "distinguish": [29, 39, 45, 49, 575, 580, 581, 825], "o": [29, 52, 57, 151, 169, 258, 345, 564, 566, 572, 574, 583, 793, 851, 859], "facil": 29, "interact": [29, 148, 183, 752, 853], "internal_error": 29, "range_error": [29, 739, 743], "system_error": 29, "could": [29, 49, 53, 57, 59, 61, 156, 163, 176, 182, 183, 256, 257, 261, 283, 284, 289, 310, 311, 314, 316, 317, 322, 557, 572, 573, 810, 848], "inheritor": 29, "device_bad_alloc": [29, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 265, 267, 271, 273, 275, 279, 283, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 330, 332, 336, 338, 340, 342, 434, 435, 436, 552], "layer": [30, 52, 57, 97, 99, 100, 149, 158, 159, 160, 169, 183], "particular": [30, 39, 42, 44, 47, 50, 59, 60, 148, 150, 151, 152, 156, 159, 163, 171, 183, 261, 262, 401, 566, 568, 570, 572, 580, 775, 797, 844, 854], "folder": 30, "itself": [30, 60, 164, 179, 183, 261, 310, 314, 432], "string": [30, 36, 37, 38, 47, 50, 62, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 106, 107, 108, 109, 112, 113, 114, 116, 129, 139, 140, 142, 586, 760], "substitut": [30, 38, 47, 50, 177, 557], "misc": 30, "func": [30, 561, 564, 566, 569, 572, 819, 833, 838, 848, 854], "miscellan": [30, 44, 553], "intend": [30, 44, 53, 258, 370, 397, 405, 558, 559, 787, 844, 845, 847], "pipelin": [30, 39, 44, 568, 570, 571, 763], "mt19937": [30, 372, 397], "cross_enthropy_loss": 30, "relat": [30, 38, 39, 41, 47, 152, 168, 170, 181, 183, 258, 259, 260, 262, 264, 273, 295, 419, 478, 479, 491, 492, 493, 494, 585, 586, 752, 792, 854], "table_metadata": [30, 39, 41], "data_layout": [30, 39, 40, 41], "_tabl": 30, "suffix": [30, 173], "homogen_t": [30, 33, 34, 39, 40, 41], "io": [30, 37, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 848], "csv": [30, 38, 39, 42, 43, 48], "util": [30, 44, 151, 158, 174, 178, 576, 577, 578, 579, 866], "auxiliari": [30, 44, 752, 842, 843], "trait": [30, 44, 836, 837, 849], "variou": [30, 39, 44, 56, 159, 174, 183, 358, 393, 396, 434, 435, 436], "usm_alloc": 30, "type_trait": 30, "content": [30, 36, 59, 183, 273, 591, 597, 600, 610, 612, 624, 627, 638, 641, 652, 660, 662, 668, 670, 681, 684, 696, 699, 710, 713, 724, 727, 738, 741, 750, 856, 858, 861, 872], "extern": [30, 36, 39, 40, 41, 261, 262, 263, 264, 561, 567, 752, 753, 783, 793, 828, 831], "visibl": [30, 148, 151], "servic": [30, 363, 368, 372, 391, 408, 416, 446, 482, 489, 506, 507, 534, 535, 551, 845, 852, 872], "structur": [30, 36, 39, 42, 47, 50, 183, 222, 225, 228, 264, 293, 326, 345, 368, 416, 418, 451, 568, 590, 661, 844], "data_sourc": [30, 37, 38, 39, 48], "parent": [30, 57, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 849], "nor": [30, 572, 574, 836], "scalar": [31, 36, 39, 62, 181, 183, 184, 185, 186, 187, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 251, 253, 254, 264, 265, 267, 268, 271, 291, 296, 324, 434, 435, 436, 513, 530], "column_accessor": [33, 35, 39], "contigu": [33, 34, 35, 36, 39, 40, 41, 42, 148, 176, 183, 261, 344, 551], "iostream": [33, 34, 36, 48, 775, 850], "default_selector": [33, 34, 36], "host_data": [33, 34], "0f": [33, 34, 36, 151, 375, 376, 387], "5f": [33, 34, 151, 349, 375], "1f": [33, 34], "2f": [33, 34, 613, 628], "7f": [33, 34], "9f": [33, 34], "6": [33, 34, 57, 95, 111, 157, 360, 371, 395, 557, 559], "shared_data": [33, 34], "malloc_shar": [33, 34, 183, 461], "memcpi": [33, 34], "sizeof": [33, 34, 149, 151, 259, 260, 794, 796, 798, 844], "whole": [33, 55, 151, 296, 298, 299, 330, 332, 333, 573, 775, 847, 850, 859], "acc": [33, 34, 48], "pull": [33, 34, 35, 39, 48], "get_count": [33, 34, 36, 39, 41, 48, 60, 386, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 552], "cout": [33, 34, 36, 41, 48, 151, 775], "endl": [33, 34, 36, 41, 48, 151, 775, 850], "free": [33, 34, 40, 41, 58, 62, 148, 260, 368, 416, 425, 426, 427, 434, 435, 436, 451, 787, 793, 796, 798, 799, 870, 872], "data_t": [33, 34, 36], "remove_const_t": [33, 34, 601, 613, 628, 685, 700], "obj": [33, 34], "column_index": 33, "usm": [33, 34, 36, 48, 59, 178, 258, 259, 260, 261, 272, 425, 426, 427, 434, 435, 436, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 552], "qualifi": [33, 34, 59, 178, 603, 604, 605, 616, 624, 630, 638, 644, 652, 673, 681, 682, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 738, 772, 782, 810, 815], "int32_t": [33, 34, 40, 42, 62, 158, 200, 201, 202, 349, 358, 359, 360, 361, 362, 366, 375, 377, 380, 385, 387, 389, 398, 399, 403, 404, 411, 438], "kind": [33, 34, 36, 39, 40, 41, 53, 54, 55, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 261, 262, 263, 434, 435, 872], "directli": [33, 34, 35, 39, 49, 53, 57, 59, 61, 156, 183, 789, 871], "possibl": [33, 34, 35, 36, 42, 57, 59, 153, 156, 157, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 178, 183, 261, 263, 398, 421, 422, 428, 429, 434, 435, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 573, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 760, 761, 763, 775, 788, 793, 824, 851, 871], "immut": [33, 34, 36, 39, 41, 42, 148, 159, 178], "convert": [33, 34, 39, 53, 55, 61, 83, 85, 86, 116, 127, 148, 151, 157, 167, 183, 347, 371, 461, 580, 811, 817, 827, 869], "mutabl": [33, 34, 36, 148, 150, 159], "reus": [33, 34, 148, 150, 159, 163, 201, 569, 788], "reset": [33, 34, 36, 39, 52, 57, 158, 258, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 482, 764, 783, 849], "row_accessor": [34, 35, 39, 48], "second": [34, 47, 57, 59, 80, 114, 120, 121, 122, 123, 124, 125, 126, 129, 152, 183, 227, 232, 261, 265, 271, 273, 275, 283, 287, 289, 291, 293, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 336, 338, 340, 342, 399, 414, 484, 500, 525, 548, 553, 558, 559, 560, 565, 568, 614, 686, 763, 775, 793, 824, 869], "third": [34, 42, 47, 129, 763], "everi": [35, 39, 41, 64, 74, 87, 90, 91, 93, 95, 101, 102, 117, 130, 132, 134, 143, 151, 157, 187, 194, 195, 201, 202, 205, 246, 254, 258, 262, 752], "Be": [35, 39, 41], "lightweight": [35, 42, 753, 758, 762, 774], "computation": [35, 541, 845, 871], "intens": [35, 57, 59, 153, 162, 164, 170, 845], "convers": [35, 39, 44, 55, 61, 127, 151, 156, 178, 262, 572, 810], "move": [35, 41, 67, 68, 77, 78, 79, 80, 81, 82, 106, 107, 178, 261, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 563, 588, 592, 596, 601, 605, 613, 614, 622, 624, 628, 636, 638, 642, 650, 652, 655, 658, 663, 667, 671, 679, 681, 685, 686, 694, 696, 700, 708, 710, 714, 722, 724, 728, 736, 738, 740, 742, 856, 858, 859], "sinc": [35, 39, 48, 57, 61, 148, 151, 181, 258, 259, 564, 565, 569, 572, 573, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 753, 760, 762, 769, 774, 785, 853], "avoid": [35, 39, 55, 57, 69, 70, 71, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 573, 788, 794, 795, 845, 851, 853, 859], "usag": [35, 38, 39, 44, 54, 57, 127, 148, 151, 156, 174, 256, 257, 258, 259, 261, 263, 368, 416, 434, 435, 436, 451, 566, 572, 779, 780, 788, 793, 794, 810, 861], "insid": [36, 39, 41, 42, 59, 62, 148, 183, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 482, 507, 534, 771, 777, 785, 851], "organ": [36, 39, 183, 682, 697, 711, 725], "chang": [36, 42, 47, 54, 59, 61, 62, 140, 148, 150, 151, 152, 167, 178, 183, 261, 262, 264, 408, 433, 434, 435, 436, 484, 489, 535, 548, 553, 572, 573, 586, 588, 753, 762, 767, 774, 785, 806, 807, 837, 851, 853, 859, 872], "state": [36, 42, 47, 52, 57, 148, 158, 159, 169, 181, 261, 358, 359, 360, 361, 363, 368, 369, 372, 374, 391, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 408, 409, 414, 416, 417, 418, 434, 435, 436, 541, 562, 591, 596, 600, 605, 609, 612, 622, 623, 627, 636, 637, 641, 650, 651, 654, 658, 659, 662, 667, 670, 679, 680, 684, 694, 695, 699, 708, 709, 713, 722, 723, 727, 736, 737, 739, 740, 741, 753, 755, 758, 762, 767, 769, 771, 774, 779, 780, 783, 786, 800, 806, 807, 808, 844, 849, 851, 852, 858, 861, 867, 872], "anoth": [36, 39, 41, 42, 49, 57, 59, 61, 127, 148, 151, 152, 176, 178, 179, 183, 193, 194, 239, 261, 262, 372, 400, 409, 461, 525, 553, 576, 605, 753, 763, 795, 851, 869], "brief": [36, 553], "basic": [36, 39, 59, 62, 148, 151, 183, 188, 264, 346, 355, 358, 359, 360, 361, 367, 368, 370, 374, 381, 386, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 415, 416, 437, 461, 557, 558, 559, 560, 580, 775, 817, 824, 859, 866], "scenario": [36, 39, 44, 46, 62, 368, 416, 573, 779, 780, 788], "print_properti": 36, "data_count": 36, "arr_data": 36, "ones": [36, 59, 168, 183, 791], "arr_on": 36, "full": [36, 39, 42, 63, 148, 344, 385, 583, 586], "has_mutable_data": [36, 39], "arr_mdata": 36, "still": [36, 55, 59, 62, 169, 181, 261, 358, 393, 584, 847, 849, 854], "origin": [36, 42, 97, 98, 150, 151, 152, 153, 157, 158, 161, 167, 168, 171, 176, 178, 263, 296, 297, 330, 331, 369, 391, 417, 557, 558, 559, 560, 753, 758, 762, 767, 774, 785, 825], "need_mutable_data": [36, 39], "cgh": [36, 367, 368], "mdata": 36, "get_mutable_data": [36, 39], "cone": 36, "array_addit": 36, "retain": [36, 42, 761], "nullptr": [36, 40, 151, 256, 257, 261, 386, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 552, 568], "lifetim": [36, 59, 421, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 847], "own": [36, 39, 40, 47, 50, 59, 60, 148, 149, 150, 159, 260, 261, 400, 409, 558, 565, 566, 567, 568, 572, 588, 605, 622, 624, 636, 638, 650, 652, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 752, 764, 851, 852, 853, 856, 858], "destroi": [36, 60, 151, 273, 289, 322, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 566, 588, 591, 596, 598, 599, 600, 611, 612, 626, 627, 640, 641, 654, 658, 662, 667, 669, 670, 682, 684, 697, 699, 711, 713, 725, 727, 741, 764, 765, 777, 788, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 849, 850, 851, 852, 854, 856, 858, 859, 861, 865], "remain": [36, 40, 59, 80, 151, 156, 253, 264, 271, 421, 422, 428, 429, 521, 557, 558, 559, 624, 638, 652, 679, 681, 696, 710, 724, 738, 739, 770], "dealloc": [36, 588, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 793, 794, 795, 796, 797, 798], "delet": [36, 40, 562, 783, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837, 850], "like": [36, 57, 70, 105, 148, 150, 152, 153, 154, 156, 159, 160, 162, 164, 169, 179, 183, 185, 187, 188, 194, 195, 201, 202, 203, 205, 221, 222, 224, 225, 226, 227, 228, 246, 254, 263, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 434, 435, 436, 519, 520, 557, 560, 564, 766, 769, 797, 806, 807, 810, 826, 837, 844, 871], "member": [36, 42, 47, 60, 159, 182, 256, 257, 258, 260, 262, 263, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 364, 365, 366, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 433, 443, 446, 565, 567, 572, 573, 593, 603, 610, 622, 624, 636, 638, 650, 652, 658, 660, 664, 679, 681, 683, 685, 694, 696, 698, 700, 708, 710, 712, 714, 722, 724, 726, 728, 736, 738, 740, 743, 750, 826, 828, 834, 840, 844, 860, 863, 865, 868], "decrement": [36, 41, 425, 426, 427, 771], "reach": [36, 158, 568, 571, 758, 771], "increment": [36, 41, 46, 344, 421, 422, 423, 424, 428, 429, 430, 431, 553, 758], "re": [36, 184, 219, 220, 258, 259, 262, 367, 462, 463, 464, 466, 467, 469, 474, 487, 495, 514, 515, 522, 526, 539, 541, 544, 783, 792, 851, 871], "simplifi": [36, 80, 103, 156, 168, 174, 178, 766, 769, 799, 868, 871], "extdata": 36, "refdata": 36, "ref": [36, 70, 80, 93, 127, 284, 308, 420], "get_siz": [36, 39, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "sure": [36, 105, 258, 564, 573, 578], "valid": [36, 43, 44, 62, 67, 68, 74, 75, 77, 78, 79, 80, 81, 82, 106, 107, 148, 150, 177, 178, 179, 183, 258, 261, 262, 263, 296, 330, 374, 393, 394, 395, 396, 397, 400, 401, 402, 405, 407, 409, 414, 433, 461, 588, 591, 596, 600, 603, 604, 605, 612, 616, 622, 624, 627, 630, 636, 638, 641, 644, 650, 652, 654, 658, 662, 667, 670, 673, 679, 681, 682, 684, 689, 694, 696, 697, 699, 703, 708, 710, 711, 713, 717, 722, 724, 725, 727, 731, 736, 738, 739, 740, 741, 767, 772, 777, 782, 788, 793, 810, 832, 851, 861], "long": [36, 60, 151, 169, 183, 258, 360, 395, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 794, 796, 798, 845, 869], "transfer": [36, 39, 42, 44, 60, 150, 178, 261, 344, 588, 622, 624, 636, 638, 650, 652, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 761, 794], "behaviour": 36, "becom": [36, 42, 57, 153, 161, 183, 295, 513, 557, 569, 596, 599, 739, 793, 849, 856], "written": [36, 42, 55, 151, 261, 273, 489, 498, 572, 573, 789], "unmanag": 36, "othewis": 36, "noth": [36, 596, 622, 636, 650, 658, 667, 679, 694, 708, 722, 736, 801, 802, 850, 852], "newli": [36, 421, 422, 423, 424, 434, 435, 436, 557, 558, 559, 560, 825, 859], "extract": [37, 39, 42, 588], "text": [37, 38, 42, 57, 64, 65, 87, 94, 101, 113, 117, 119, 157, 163, 258, 267, 268, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 298, 299, 300, 302, 303, 304, 306, 308, 309, 310, 311, 312, 314, 316, 317, 318, 320, 322, 323, 324, 326, 328, 329, 332, 333, 334, 336, 338, 340, 342, 343, 344, 434, 435, 436, 541, 844], "delimit": [37, 38, 39, 42], "numer": [37, 39, 42, 44, 53, 61, 70, 99, 100, 153, 158, 161, 171, 183, 261, 263, 345, 348, 359, 372, 394, 408, 414], "represent": [37, 39, 42, 44, 59, 61, 148, 263, 265, 267, 268, 271, 291, 324, 488, 525, 548, 553, 586, 750, 751, 785, 851], "chosen": [37, 55, 57, 153, 156, 158, 159, 162, 167, 261, 558, 559], "read_opt": 37, "uint64_t": [37, 183, 351, 358, 359, 360, 361, 363, 364, 366, 374, 391, 394, 402, 408, 412], "none": [37, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "parse_head": 37, "default_delimit": 37, "default_read_opt": 37, "file_nam": [37, 38, 39], "opt": 37, "get_file_nam": 37, "get_delimit": 37, "get_read_opt": 37, "flag": [37, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 231, 232, 263, 489, 561, 764, 783, 849, 852], "get_filenam": 37, "charact": [37, 42, 183, 844], "get_delimt": 37, "line": [37, 42, 586, 760, 794, 795, 844], "read_arg": [37, 38, 39], "datasourc": [37, 38], "code": [38, 42, 47, 50, 57, 59, 148, 149, 150, 151, 152, 156, 159, 167, 178, 180, 181, 183, 260, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 368, 400, 409, 418, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 565, 572, 573, 583, 589, 600, 773, 789, 791, 799, 827, 844, 852, 871, 872], "show": [38, 39, 47, 50, 57, 153, 156, 160, 161, 163, 164, 165, 168, 541, 561, 573, 763, 788, 810, 844], "read_args_t": 38, "read_result_t": 38, "side": [38, 40, 50, 59, 105, 183, 195, 210, 240, 250, 251, 253, 254, 255, 261, 283, 284, 285, 286, 295, 304, 305, 306, 307, 308, 309, 316, 317, 318, 319, 328, 329, 338, 339, 340, 341, 342, 343, 461, 566, 763, 792], "verbos": [38, 50], "overload": [38, 50, 178, 261, 565, 566, 572, 592, 601, 603, 604, 605, 613, 616, 622, 624, 628, 630, 636, 638, 642, 644, 652, 655, 663, 671, 673, 681, 685, 689, 694, 696, 700, 703, 708, 710, 714, 717, 724, 728, 731, 738, 740, 741, 742, 772, 782, 815, 861], "combin": [38, 42, 50, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 296, 330, 345, 348, 360, 372, 381, 395, 414, 433, 481, 553, 573, 752, 763, 764, 820, 822, 843, 857, 859, 871], "previou": [38, 50, 57, 148, 151, 152, 169, 183, 344, 482, 534, 535, 572, 573, 576, 844, 851], "property_nam": [38, 47, 50], "property_typ": [38, 47, 50, 62], "property_type_1": 38, "property_name_1": 38, "property_type_2": 38, "property_name_2": 38, "descriptor": [38, 39, 43, 48, 49, 50, 51, 54, 56, 57, 58, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 256, 257, 258, 260, 262, 263, 264, 433, 434, 435, 436, 783], "set_": [38, 47, 50], "get_": [38, 47, 50], "perspect": [39, 49, 167], "acquisit": [39, 44, 836, 837], "prepar": [39, 55, 151, 367, 777], "pictur": [39, 42, 775], "raw": [39, 41, 451, 452, 453, 454, 461], "databas": [39, 848], "remot": 39, "compress": [39, 42, 420, 422], "decompress": 39, "recov": 39, "filter": [39, 62, 556, 570, 571, 813], "normal": [39, 44, 52, 57, 69, 70, 99, 100, 149, 159, 227, 289, 322, 346, 347, 354, 357, 368, 370, 371, 384, 385, 392, 400, 409, 416, 478, 479, 491, 492, 494, 541, 553, 851], "metric": 39, "covari": [39, 385], "flow": [39, 49, 151, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 828, 831, 841, 842, 843, 848, 850], "goe": [39, 41], "forth": [39, 557], "fulli": [39, 61, 148, 150, 151, 159, 160, 163, 173, 183, 256, 257, 261, 262, 432, 586], "done": [39, 149, 156, 157, 164, 167, 183, 256, 257, 261, 263, 482, 507, 534, 557, 558, 559, 756, 824, 858], "tabular": 39, "view": [39, 140, 141, 169, 385, 398, 404, 866], "download": 39, "load": [39, 48, 577, 579, 586], "especi": [39, 59], "batch": [39, 42, 43, 44, 49, 52, 57, 69, 70, 80, 105, 149, 151, 156, 158, 159, 163, 171, 183, 187, 194, 201, 205, 222, 225, 228, 246, 254, 258, 262, 263, 268, 269, 276, 277, 280, 281, 284, 285, 295, 299, 300, 311, 312, 317, 318, 333, 334], "therefor": [39, 44, 52, 53, 310, 311, 314, 513, 564, 577, 585, 760, 766, 773, 775, 794, 824, 859], "onlin": [39, 42, 43, 44, 49], "automat": [39, 42, 57, 155, 156, 158, 172, 173, 178, 183, 258, 263, 557, 564, 687, 701, 715, 729, 751, 763, 790, 824, 836, 851, 853], "categor": [39, 42], "continu": [39, 42, 264, 346, 370, 561, 757, 761, 767, 848], "heterogen": [39, 42], "dens": [39, 40, 41, 57, 59, 183, 188, 221, 222, 224, 225, 226, 227, 228, 295, 344, 423, 424, 434, 435, 436, 437, 461, 555], "spars": [39, 42, 183, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 555], "chunk": [39, 346, 364, 370, 412], "unnecessari": [39, 57], "ownership": [39, 421, 422, 423, 424, 428, 429, 430, 431, 588, 599, 622, 624, 638, 652, 679, 681, 694, 696, 710, 724, 736, 738, 752, 805, 809], "layout": [39, 40, 42, 56, 57, 59, 61, 62, 73, 127, 140, 141, 145, 148, 149, 150, 151, 152, 161, 169, 182, 183, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 221, 222, 224, 225, 226, 227, 228, 240, 251, 253, 254, 259, 261, 263, 295, 344, 385, 423, 430, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 773], "safeti": [39, 572, 841, 842, 866], "reason": [39, 52, 55, 57, 149, 151, 260, 482, 507, 534, 763], "better": [39, 54, 59, 148, 178, 222, 225, 228, 806, 807], "thu": [39, 57, 148, 287, 320, 573, 577, 775, 800, 805, 854], "physic": [39, 42, 59, 61, 345], "nomin": [39, 41, 42], "ordin": [39, 40, 41, 42], "interv": [39, 41, 42, 181, 346, 365, 366, 370, 410, 411, 418, 557, 558, 559, 560, 591, 600, 605, 612, 622, 624, 627, 636, 638, 641, 650, 652, 654, 662, 670, 679, 681, 684, 694, 696, 699, 708, 710, 713, 722, 724, 727, 736, 738, 740, 741, 771, 866, 869], "ratio": [39, 41, 42, 473, 553, 557, 558, 559, 560, 580], "affect": [39, 151, 152, 183, 532, 753, 758, 762, 763, 767, 774, 785, 793, 847], "sub": [39, 41, 63, 158, 169, 199, 247, 248, 261, 265, 344, 434, 435, 436, 553], "contract": 39, "flat": [39, 42], "acquir": [39, 770, 771, 800, 801, 802, 803, 804, 805, 808, 809, 836, 837], "desir": [39, 48, 60, 256, 257, 258, 261, 262, 263, 346, 461], "demonstr": [39, 415, 458, 573, 575, 775, 777, 785, 851], "diagram": [39, 148], "highlight": [39, 151], "color": [39, 42], "dark": 39, "blue": 39, "orang": 39, "light": 39, "shown": [39, 47, 153, 161, 169, 170, 258, 260, 433, 573, 760, 773, 793], "tm": [39, 42], "note": [39, 55, 66, 68, 69, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 108, 109, 112, 116, 120, 121, 122, 123, 124, 125, 126, 129, 140, 142, 145, 146, 151, 152, 153, 155, 156, 157, 161, 163, 169, 178, 180, 183, 196, 200, 201, 202, 203, 210, 240, 251, 253, 254, 258, 259, 261, 262, 263, 295, 296, 330, 346, 347, 351, 364, 391, 408, 420, 421, 422, 428, 429, 434, 435, 436, 463, 464, 467, 469, 474, 485, 486, 487, 489, 495, 536, 537, 538, 539, 543, 545, 546, 547, 564, 739, 867], "shortcut": [39, 49], "get_column_count": [39, 41, 48], "get_row_count": [39, 41, 42], "get_metadata": [39, 41], "get_kind": [39, 40, 41, 60, 158], "get_data_layout": [39, 41], "get_feature_count": [39, 41], "get_feature_typ": [39, 41], "get_data_typ": [39, 41, 62], "feature_typ": [39, 41], "data_point": 40, "row_major": [40, 41, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 443, 446, 458], "constdelet": 40, "data_delet": 40, "reinterpret_cast": 40, "metadata": [40, 42, 148], "column_major": [40, 41, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 461], "cast": [40, 127, 145], "onto": [41, 791, 845], "restrict": [41, 72, 154, 156, 157, 160, 163, 166, 167, 261, 262, 847, 853, 872], "weaken": 41, "illustr": [41, 259, 260, 478, 479, 491, 492, 493, 494, 762], "table1": 41, "data_ptr": 41, "table2": 41, "table3": 41, "subtyp": 41, "how": [41, 48, 57, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 97, 98, 106, 107, 140, 148, 149, 151, 156, 158, 159, 164, 168, 181, 183, 219, 220, 259, 264, 273, 293, 294, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 327, 421, 422, 428, 429, 433, 458, 461, 556, 564, 573, 575, 579, 762, 844, 850], "mani": [41, 49, 148, 150, 183, 192, 261, 273, 295, 551, 564, 573, 761, 788, 794, 850, 871], "special": [41, 42, 59, 72, 148, 150, 154, 155, 157, 158, 163, 165, 166, 167, 170, 171, 172, 175, 178, 183, 256, 257, 258, 261, 262, 263, 264, 295, 406, 462, 466, 467, 468, 471, 483, 485, 490, 506, 513, 522, 529, 530, 536, 544, 545, 551, 553, 562, 568, 756, 769, 770, 775, 843, 851, 861], "swap": [41, 59, 77, 156, 189, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 810, 841], "ftype": 41, "feature_index": 41, "feature_count": 41, "unknown": [41, 61, 148, 158, 258, 584], "moment": [41, 46, 439, 440, 451, 452, 454, 779], "discret": [42, 183, 256, 257, 261, 263, 346, 370, 555, 872], "synonym": 42, "qualit": 42, "supervis": 42, "what": [42, 49, 55, 57, 59, 62, 151, 158, 261, 370, 810, 844], "dog": 42, "cat": 42, "email": 42, "spam": 42, "unsupervis": 42, "bunch": [42, 293, 295, 326], "usual": [42, 62, 101, 150, 298, 299, 332, 333, 418, 573], "encod": 42, "star": 42, "imag": [42, 57, 67, 151, 164], "real": [42, 45, 167, 176, 183, 184, 196, 214, 215, 219, 220, 256, 257, 258, 261, 263, 264, 265, 273, 287, 289, 295, 296, 298, 302, 304, 306, 308, 310, 311, 316, 317, 318, 319, 320, 322, 324, 326, 361, 374, 376, 379, 380, 382, 383, 384, 385, 388, 390, 392, 402, 406, 410, 413, 438, 466, 481, 487, 490, 495, 498, 522, 526, 530, 539, 541, 544, 553, 810, 868], "quantit": 42, "person": 42, "height": [42, 57, 80, 81, 106, 107, 156, 164], "price": [42, 794], "hous": [42, 434, 435, 436], "comma": [42, 844], "field": [42, 62, 396, 434, 435, 436, 561], "By": [42, 59, 151, 358, 359, 360, 361, 433, 565, 566, 567, 568, 572, 764, 767, 775, 867, 871, 872], "low": [42, 151, 156, 164, 345, 361, 402, 485, 486, 488, 506, 535, 536, 537, 538, 540, 545, 546, 548, 793, 851], "meaning": 42, "qualiti": [42, 381], "independ": [42, 105, 151, 163, 169, 171, 192, 201, 295, 368, 372, 377, 398, 416, 418, 518, 525], "rectangl": 42, "width": [42, 57, 80, 81, 106, 107, 156, 164, 183], "subtract": [42, 62, 139, 147, 544, 553, 869], "frame": 42, "temperatur": 42, "celsiu": 42, "fahrenheit": 42, "detect": [42, 148, 151, 164, 178, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 583, 584], "weight": [42, 52, 53, 55, 57, 59, 62, 77, 78, 79, 80, 81, 82, 105, 148, 152, 153, 156, 158, 160, 161, 163, 165, 167, 169, 443, 446], "bia": [42, 52, 55, 57, 72, 73, 77, 80, 99, 100, 105, 156, 158, 160, 163, 169, 192, 202], "gender": 42, "car": 42, "student": 42, "grade": 42, "outlier": 42, "significantli": [42, 53, 261, 583], "comparison": [42, 59, 176, 179, 574, 590, 598, 611, 612, 620, 625, 626, 627, 634, 639, 640, 641, 648, 653, 654, 661, 669, 670, 677, 682, 697, 711, 725, 739, 794, 796, 798], "divis": [42, 69, 70, 71, 77, 78, 79, 80, 81, 82, 84, 259, 275, 276, 293, 326, 490, 557, 558, 559, 560, 564, 824], "absenc": [42, 59, 150], "tower": 42, "weather": 42, "made": [42, 59, 264, 418, 506, 558, 559, 753, 762, 767, 774, 785], "goal": [42, 150], "select": [42, 57, 62, 147, 156, 183, 219, 220, 261, 295, 381, 557, 577, 769, 775, 844, 847, 859], "criteria": 42, "hidden": [42, 52, 158, 169, 794, 871], "patter": 42, "uniform": [42, 181, 345, 346, 347, 360, 367, 368, 370, 371, 395, 416, 418], "builder": 42, "characterist": [42, 178, 349, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413], "principl": 42, "languag": [42, 174, 791, 870, 871], "privat": [42, 151, 256, 257, 261, 795, 844], "present": [42, 57, 105, 183, 605, 614, 686, 858, 863], "csr": [42, 420, 422, 429, 432], "increas": [42, 53, 169, 516, 553, 586, 687, 701, 715, 729, 758, 771, 793, 794, 824, 869], "freed": [42, 148, 793, 796], "set_row_count": 42, "hide": [42, 573], "workload": [42, 49, 57, 579], "jit": 42, "just": [42, 55, 148, 156, 775], "spir": 42, "v": [42, 170, 176, 273, 274, 345, 351, 364, 529, 569, 601, 613, 628, 642, 671, 685, 700, 714, 728, 753, 754, 755, 758, 762, 763, 766, 767, 769, 771, 773, 774, 777, 779, 780, 785, 786, 787, 788, 828, 829, 830, 831, 833, 834, 835], "portabl": [42, 59, 149, 150, 358, 393, 870, 871], "style": [42, 183, 789], "github": 43, "page": [43, 61, 259, 261, 262, 263, 345, 559, 793, 812], "help": [43, 44, 89, 146, 148, 183, 389, 775], "speed": [43, 358, 393, 868], "highli": [43, 55, 149, 178, 370, 752, 871], "preprocess": [43, 44], "decis": [43, 44, 148, 183], "tradit": [43, 57, 183, 344], "visit": [43, 866], "glossari": 43, "mathemat": [43, 49, 55, 110, 113, 115, 167, 169, 183, 264, 345, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 555, 573], "notat": [43, 57, 151, 258, 467, 551, 810, 841, 842], "appendix": [43, 183, 555], "bibliographi": [43, 513], "edg": [44, 756, 758, 760, 764, 772, 782, 783, 843], "close": [44, 53, 181, 414, 531, 560], "consum": [44, 54, 59, 148, 151, 259, 770, 845, 859], "agnost": [44, 57, 58, 59], "technologi": 44, "entir": [44, 46, 120, 121, 122, 123, 124, 125, 126, 262, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 849, 860], "varieti": [44, 49, 420, 555, 871], "appropri": [44, 55, 59, 151, 154, 155, 163, 164, 166, 172, 262, 367, 415, 458, 564, 572, 577, 578], "random": [44, 174, 178, 179, 180, 183, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 458, 555, 564, 574, 739, 744, 811, 862], "import": [44, 48, 49, 57, 150, 151, 159, 576, 577, 579, 810], "seamless": 44, "orient": [44, 345, 372, 407], "redefin": 44, "sometim": [45, 148, 150, 159, 160, 573, 794], "interpret": [45, 57, 61, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 97, 98, 105, 106, 107, 140, 183, 258, 259, 361, 402, 405, 433, 557, 793], "cardin": 45, "absolut": [45, 64, 120, 189, 219, 220, 258, 462, 512, 553, 869], "mathbb": [45, 262, 354, 357], "sqrt": [45, 62, 70, 99, 121, 137, 147, 153, 157, 161, 232, 347, 354, 357, 371, 384, 385, 390, 392, 478, 479, 491, 492, 493, 494, 508, 553, 568], "x_2": [45, 347, 371], "dot": [45, 189, 197, 198, 235, 258, 259, 262], "x_d": 45, "partial": [46, 151, 161, 176, 275, 276, 432, 564, 573, 760], "later": [46, 99, 150, 178, 765, 838, 848, 851], "merg": [46, 564, 572, 611, 622, 626, 640, 669, 682, 694, 697, 711, 725, 818, 821, 858], "meta": [47, 49, 148], "dispatch": [47, 159], "aggreg": [47, 50, 851], "dedic": [47, 151, 259, 260, 261, 262, 263, 848, 849], "turn": [47, 583, 793, 850], "default_float_t": 47, "tag": [47, 58, 59, 151, 156, 163, 164, 166, 168, 177, 573, 586, 751, 763, 766, 769, 787, 843, 845, 848], "never": [47, 57, 59, 244, 245, 246, 261, 572, 739, 767, 789, 851], "preset": 47, "chain": [47, 156], "set_property_name_1": 47, "value_1": 47, "set_property_name_2": 47, "value_2": 47, "set_property_name_3": 47, "value_3": 47, "top": [47, 67, 68, 77, 78, 79, 80, 81, 82, 106, 107, 156, 159, 164, 344, 583, 585], "assum": [47, 55, 57, 80, 85, 86, 148, 150, 153, 156, 157, 159, 165, 168, 183, 216, 217, 218, 231, 232, 251, 253, 254, 258, 259, 261, 263, 289, 295, 322, 328, 329, 358, 359, 360, 361, 365, 366, 374, 393, 394, 395, 400, 402, 405, 409, 410, 411, 414, 420, 535, 577, 775], "depict": [48, 169], "cassert": 48, "selector": [48, 178], "instead": [48, 49, 57, 150, 152, 154, 156, 157, 160, 163, 167, 169, 178, 181, 183, 201, 258, 259, 261, 267, 268, 271, 461, 850, 851, 853], "breviti": 48, "configur": [48, 60, 100, 151, 152, 153, 156, 161, 163, 165, 181, 183, 256, 257, 259, 260, 261, 262, 263, 264, 583, 584, 585, 586, 790, 793, 842, 843, 851, 853], "train_r": 48, "print": [48, 151, 583, 586, 760], "assert": [48, 59, 151, 152, 560, 583], "data_transform": 48, "primarili": [49, 847], "knob": 49, "those": [49, 55, 63, 105, 157, 173, 175, 178, 183, 259, 262, 461, 557, 596, 622, 679, 694, 736, 775, 791, 853], "often": [49, 54, 156, 260, 461, 577], "dozen": 49, "logist": [49, 52, 158], "procedur": [49, 51], "besid": [49, 61, 148], "moreov": [49, 54, 57, 152, 156], "empir": 49, "risk": [49, 183], "techniqu": 49, "Such": [49, 59, 150, 258, 358, 393, 421, 422], "few": [49, 151, 156, 160, 169, 461], "aspect": [49, 183, 558, 559, 847], "task": [49, 50, 55, 151, 183, 256, 257, 264, 295, 425, 426, 427, 434, 435, 436, 564, 565, 566, 567, 568, 572, 576, 579, 751, 752, 760, 763, 764, 775, 838, 841, 842, 843, 847, 849, 850, 851, 852, 853, 854, 855, 856, 859], "vari": [49, 183, 201, 370, 400, 404, 409], "best": [49, 55, 148, 156, 161, 167, 262, 400, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548, 824], "tackl": 49, "mention": [49, 129, 151, 153, 346, 555], "challeng": 49, "decompos": 49, "verifi": 50, "befor": [50, 55, 57, 59, 61, 77, 78, 79, 80, 81, 82, 101, 105, 129, 139, 148, 151, 156, 158, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 344, 386, 425, 426, 427, 434, 435, 436, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 482, 489, 541, 568, 574, 588, 758, 760, 766, 767, 771, 779, 800, 805, 852, 854, 856], "_input_t": 50, "_result_t": 50, "incompat": [50, 62, 739], "exact": [50, 61, 169, 487, 490, 495, 518, 531, 539, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 785, 845], "compat": [50, 178, 183, 358, 393, 586, 588, 791, 871], "pre": [50, 55, 59, 150, 159, 573], "similar": [50, 59, 60, 178, 291, 295, 324, 557, 564, 572, 573, 779, 780, 788, 810, 858, 863], "operation_input": 50, "_input": 50, "assumpt": [50, 148, 183, 386, 391, 408, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 555], "operation_result": 50, "_result": 50, "bellow": 51, "train_input_t": 51, "train_result_t": 51, "infer_input_t": 51, "infer_result_t": 51, "compute_input_t": 51, "compute_result_t": 51, "dst": [52, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172], "f": [52, 57, 149, 152, 166, 168, 169, 180, 183, 258, 361, 374, 402, 418, 532, 566, 567, 569, 572, 616, 630, 644, 673, 689, 703, 717, 731, 764, 816, 851, 853, 854, 858, 859, 860], "src": [52, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 753, 754, 755, 758, 762, 766, 767, 769, 771, 774, 777, 779, 780, 785, 788, 856], "activ": [52, 55, 57, 74, 90, 101, 110, 148, 151, 152, 153, 158, 160, 169, 753, 767, 777, 828, 831, 847, 848, 850, 851, 852], "learnabl": [52, 99, 100, 153, 161], "backward": [52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 158, 159, 163, 166, 167, 169, 172, 178, 179, 191, 253, 256, 257, 258, 259, 261, 263], "diffsrc": [52, 68, 78, 81, 94, 100, 107, 153, 156, 157, 160, 161, 162, 164, 165, 168, 170, 171], "f_": [52, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 399, 403, 404, 406, 410, 411, 413], "diffdst": [52, 65, 68, 73, 78, 79, 81, 82, 94, 100, 107, 111, 153, 156, 157, 160, 161, 162, 164, 165, 168, 170, 171], "diffweight": [52, 79, 82, 156, 160, 165], "might": [52, 55, 148, 151, 152, 153, 156, 157, 160, 161, 162, 167, 169, 176, 372, 482, 507, 534, 564, 573, 775, 777, 794, 844, 845, 850, 854], "commonli": [52, 174, 264], "wide": [52, 555, 836], "convolut": [52, 57, 59, 61, 62, 77, 78, 79, 81, 82, 147, 149, 150, 152, 158, 159, 164, 167, 169], "usabl": [52, 793], "inner": [52, 57, 149, 158, 159, 214, 244, 866], "scale_shift": 52, "shift": [52, 70, 99, 151, 153, 158, 345, 372, 396, 405, 407, 513], "workspac": [52, 153, 156, 158, 161, 162, 164, 169, 261, 262, 263, 264, 324, 434, 435, 436], "carri": [52, 263, 264, 849], "forward": [52, 57, 59, 68, 150, 158, 159, 166, 169, 172, 179, 191, 253, 256, 257, 258, 259, 261, 262, 263, 565, 593, 603, 615, 622, 629, 636, 643, 664, 672, 683, 688, 694, 698, 702, 708, 712, 716, 726, 730, 752, 754, 755, 760, 770, 771, 773, 779, 780, 785, 815, 866], "scratchpad": [52, 150, 158, 159, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "temporari": [52, 150, 151, 158, 159, 178, 260, 434, 435, 436], "diff_src": [52, 65, 68, 71, 75, 78, 81, 88, 92, 94, 96, 98, 100, 104, 107, 111, 114, 118, 131, 133, 135, 137, 144, 153, 164, 168], "diff_dst": [52, 65, 68, 71, 73, 75, 78, 79, 81, 82, 88, 92, 94, 96, 98, 100, 104, 107, 111, 114, 118, 131, 133, 135, 137, 144, 153, 171], "diff_weight": [52, 79, 82, 151], "diff_bia": [52, 73], "diff_scal": 52, "diff_shift": 52, "_layer": 52, "_iter": 52, "recurr": [52, 158, 169, 361, 370, 374, 378, 402, 405], "box": 52, "transposit": [52, 192, 199, 200, 201, 202, 203, 204, 205, 215, 221, 222, 224, 225, 226, 227, 228, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "box_t": 52, "timestamp": [52, 169, 869], "box_l": 52, "tanh": [52, 62, 110, 144, 147, 149, 156, 157, 158, 169, 545, 553], "relu": [52, 62, 101, 113, 118, 147, 149, 150, 153, 156, 158, 159, 165, 169], "cell": [52, 57, 158, 541], "candid": [52, 57, 63], "gate": [52, 57, 158, 169], "forget": [52, 57], "f16": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "bf16": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "f32": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "s32": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "s8": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "u8": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl": [53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "abcdef": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "abcd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "abdc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "abc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ab": [53, 54, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 219, 220, 223, 229, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 252, 255, 344, 485, 486, 488, 508, 536, 537, 538, 540, 545, 546, 548, 553], "acb": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "acdb": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "acdeb": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "bac": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ba": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "cba": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "cdba": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "cdeba": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dcab": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "decab": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "defcab": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dhwigo": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dhwio": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "goidhw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "goihw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "goiw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "hwigo": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "hwio": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ldgoi": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ldgo": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ldigo": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ldio": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ldoi": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ldnc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ncdhw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "nchw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ncw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "nc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ndhwc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "nhwc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ntc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "nwc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "oidhw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "oihw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "oiw": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "oi": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "tnc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "tn": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 766, 787], "wigo": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "wio": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "format_tag": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "use_global_stat": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "use_scal": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "use_shift": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "fuse_norm_relu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "normalization_flag": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "use_scaleshift": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "backward_data": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "forward_infer": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "forward_train": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "prop_kind": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "binary_add": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "binary_max": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "binary_min": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "binary_mul": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "convolution_auto": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "convolution_direct": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "convolution_winograd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "deconvolution_direct": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "deconvolution_winograd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_ab": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_bounded_relu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_clip": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_clip_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_elu_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_elu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_exp_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_exp": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_gelu_erf": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_gelu_tanh": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_gelu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_hardsigmoid": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_hardswish": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_linear": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_logistic_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_logist": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_log": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_mish": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_pow": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_relu_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_relu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_round": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_soft_relu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_sqrt_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_sqrt": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_squar": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_swish": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_tanh_use_dst_for_bwd": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_tanh": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lbr_gru": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lrn_across_channel": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lrn_within_channel": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pooling_avg_exclude_pad": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pooling_avg_include_pad": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pooling_avg": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pooling_max": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "resampling_linear": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "resampling_nearest": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "undef": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "vanilla_gru": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "vanilla_lstm": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "vanilla_rnn": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_attr_multiple_post_op": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_attr_scal": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_attr_zero_point": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src_0": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src_lay": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_from": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src_1": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src_it": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src_2": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_src_iter_c": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst_0": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_to": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst_lay": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst_1": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst_it": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst_2": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_dst_iter_c": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weights_0": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weight": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_scal": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_shift": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weights_lay": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weights_1": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weights_it": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weights_peephol": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_weights_project": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_bia": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_mean": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_vari": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_workspac": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_scratchpad": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src_0": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src_lay": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src_1": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src_it": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src_2": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_src_iter_c": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst_0": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst_lay": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst_1": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst_it": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst_2": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_dst_iter_c": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weights_0": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weight": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_scal": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_shift": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weights_lay": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weights_1": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weights_it": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weights_peephol": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_weights_project": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_diff_bia": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_multiple_src": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_arg_multiple_dst": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_runtime_dim_v": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_runtime_size_v": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_runtime_f32_v": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_runtime_s32_v": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "augru_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "primitive_desc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "augru_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "batch_normalization_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "concat": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "convolution_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwise_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "gru_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "gru_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "layer_normalization_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "primtive_desc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lbr_augru_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lbr_augru_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lbr_gru_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lbr_gru_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lstm_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lstm_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "permute_ax": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "submemory_desc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "get_data_handl": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "get_desc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "get_engin": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "set_data_handl": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pooling_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "workspace_desc": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "post_op": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "append_eltwis": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "append_binari": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "append_sum": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "len": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 195, 199, 204], "primimit": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwis": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "primitive_attr": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "set_fpmath_mod": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "set_scales_mask": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "set_zero_points_mask": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "set_post_op": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "set_scratchpad_mod": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "next_impl": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "primitive_desc_bas": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "reorder": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172], "rnn_primitive_desc_bas": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "scratchpad_mod": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "shuffle_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "vanilla_rnn_backward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "vanilla_rnn_forward": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "sycl_interop": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "get_buff": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177], "set_buff": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "auto_broadcast": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "epsilon": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "momentum": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "begin_norm_axi": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "ax": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 283, 286, 289, 290, 316, 322, 323, 328, 329, 558, 559], "dilat": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dst_shape": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "output_pad": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pads_begin": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "pads_end": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "shape": [53, 54, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 350, 353, 371, 376, 383, 406, 413, 557, 871], "src_shape": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "stride": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 225, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 249, 250, 252, 254, 255, 258, 259, 261, 263, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 391], "weights_shap": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "zp": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "exclude_pad": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "keep_dim": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "keep_stat": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "per_channel_broadcast": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "special_zero": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "transpose_a": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "transpose_b": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "use_affin": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "use_dst": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "auto_pad": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "coordinate_transformation_mod": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "data_format": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "qtype": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "rounding_typ": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "weights_format": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "layout_typ": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "opaqu": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 419, 434, 435, 436], "dequant": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "typecast": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "graph": [53, 54, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 585, 753, 754, 755, 756, 758, 761, 762, 763, 765, 766, 767, 769, 771, 774, 775, 777, 779, 780, 783, 785, 786, 787, 788, 828, 831, 841, 842, 843, 848, 850], "op": [53, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 158, 159, 161, 176, 199, 200, 201, 202, 203, 204, 205, 215, 221, 222, 224, 225, 226, 227, 228, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 434, 435, 436, 572], "staticreshap": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dynamicreshap": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "compiled_partit": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "add_op": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "get_partit": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "is_support": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_graph_unknown_ndim": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "dnnl_graph_unknown_dim": [53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "abbrevi": [53, 57, 153, 156, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171], "readabl": [53, 57, 153, 156, 157, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 182], "expon": [53, 115, 119, 151, 158, 481, 513, 518, 553], "keep": [53, 57, 62, 140, 622, 679, 694, 736, 777, 861], "signific": [53, 261, 513], "veri": [53, 151, 345, 564], "occupi": [53, 794], "spot": 53, "trade": 53, "found": [53, 164, 180, 183, 219, 220, 260, 261, 372, 374, 604, 624, 630, 638, 644, 652, 681, 696, 703, 710, 717, 724, 738], "advantag": [53, 201, 264], "versu": 53, "footprint": [53, 148, 793], "henc": [53, 57, 59, 151, 153, 156, 157, 161, 164, 170, 171, 183, 344], "throughput": [53, 55, 806, 807], "treat": [53, 160, 167, 171, 178, 351, 378], "themselv": [53, 311], "necessarili": [53, 155, 168, 183, 273, 420, 555, 560, 572, 577, 718, 853, 859], "flexibl": [53, 63, 150, 222, 225, 228, 791], "maintain": [53, 55, 59, 176, 179, 756, 758], "master": 53, "afterward": [53, 560], "tensor": [53, 55, 57, 58, 59, 61, 64, 66, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 138, 139, 140, 142, 143, 145, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "latter": [53, 153, 161, 261, 262, 557], "fed": [53, 61, 563], "fundament": [54, 555, 739, 817], "discuss": [54, 57, 183, 372, 555], "mix": [54, 61, 145, 196, 258, 461], "accuraci": [54, 55, 151, 156, 370, 396, 466, 482, 485, 486, 488, 489, 506, 507, 513, 522, 526, 534, 535, 536, 537, 538, 540, 544, 545, 546, 548, 551, 554], "implicit": [54, 59, 154, 155, 156, 163, 167, 172, 178, 421, 422, 428, 429, 810, 844, 851], "downconvers": 54, "speedup": [54, 151], "fpmath": [54, 151], "lower": [54, 55, 74, 75, 148, 151, 153, 156, 164, 165, 168, 183, 192, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 275, 276, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 342, 343, 344, 432, 433, 486, 488, 538, 540, 541, 546, 548, 560, 775, 793, 851], "arithmet": [54, 123, 139, 176, 179, 262, 263, 264, 476, 553, 869], "individu": [54, 150, 183, 222, 225, 228, 555, 588, 766], "guid": [54, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 775, 836, 844], "push": [55, 590, 653, 659, 661, 753, 754, 755, 758, 761, 762, 766, 767, 769, 771, 774, 777, 779, 780, 785, 786, 788], "recent": [55, 780, 864], "focus": 55, "achiev": [55, 57, 167, 169, 564, 577, 756], "offer": [55, 264, 739], "improv": [55, 70, 99, 100, 149, 152, 153, 157, 161, 264, 420, 551, 574, 775, 794], "pack": [55, 59, 179, 190, 216, 217, 218, 236, 237, 238, 249, 250, 344, 385, 557, 567, 766, 787], "instruct": [55, 57, 59, 156, 372], "cost": [55, 148, 150], "symmetr": [55, 61, 85, 86, 183, 190, 191, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 289, 291, 295, 302, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 385, 433, 489], "asymmetr": [55, 61, 83, 85, 86, 116], "factor": [55, 87, 88, 151, 152, 158, 168, 187, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 251, 253, 254, 261, 262, 264, 265, 267, 268, 271, 275, 276, 279, 280, 283, 284, 287, 289, 293, 294, 295, 296, 298, 299, 304, 306, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 327, 332, 333, 338, 340, 371, 381, 775], "relationship": [55, 148, 478, 479, 491, 492, 493, 494, 760, 845], "scale_": 55, "zp_": 55, "formula": [55, 64, 67, 69, 70, 74, 80, 81, 85, 86, 87, 90, 91, 93, 94, 95, 99, 101, 102, 105, 106, 110, 113, 115, 117, 130, 132, 134, 143, 151, 153, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 347, 371, 374, 462, 466, 468, 471, 485, 490, 522, 536, 541, 544, 545], "ahead": [55, 363, 369, 408, 417, 573], "calibr": 55, "tool": [55, 149, 583], "minimum": [55, 62, 124, 147, 154, 189, 220, 263, 451, 513, 847], "dynam": [55, 156, 158, 163, 345, 788, 847, 854], "behav": [55, 148, 169, 179, 261, 461, 519, 520, 560, 569, 783, 786, 793, 797], "mask": [55, 151, 152, 407, 852], "rnn": [55, 57, 149, 151, 158, 159, 161], "requant": 55, "wider": 55, "impact": [55, 151, 739, 793, 847], "overflow": [55, 176, 466, 482, 487, 489, 490, 495, 496, 497, 499, 507, 512, 522, 525, 526, 534, 539, 544, 549, 553], "accumul": [55, 73, 148, 152, 164, 572, 752, 818, 819, 821], "underflow": [55, 478, 482, 489, 492, 495, 496, 497, 507, 525, 534], "encourag": 55, "satur": [55, 151, 167], "fuse": [55, 61, 63, 150, 153, 158, 159], "mecan": 55, "_op": [55, 166], "src_": [55, 83, 85, 86, 116, 120, 121, 122, 123, 124, 125, 126], "weights_": [55, 443], "dst_": [55, 83, 85, 86, 116, 120, 121, 122, 123, 124, 125, 126], "zero_point": [55, 151], "zero_point_": 55, "operatornam": [55, 57, 110, 132, 152, 478, 479, 491, 492, 493, 494, 498], "_to": [55, 363, 408], "_int8": 55, "_f32": 55, "conv_": 55, "comp_": 55, "regular": [55, 147, 162, 579, 793, 851], "take": [55, 61, 78, 79, 83, 85, 86, 105, 116, 120, 121, 122, 123, 124, 125, 126, 129, 148, 150, 151, 152, 156, 157, 158, 159, 175, 183, 264, 361, 374, 402, 420, 421, 422, 423, 424, 428, 429, 430, 431, 461, 551, 557, 564, 566, 572, 573, 578, 588, 753, 763, 769, 774, 775, 793, 815, 825, 847, 868, 871], "compens": 55, "term": [55, 156, 168, 169, 354, 810, 844], "account": [55, 156, 262, 871], "_s8": 55, "potenti": [55, 59, 62, 149, 150, 794, 845], "round": [55, 62, 67, 83, 85, 86, 106, 116, 145, 147, 151, 157, 158, 176, 264, 480, 501, 518, 524, 525, 532, 550, 553, 573, 824], "popular": [55, 420], "deconvolut": [55, 158, 159, 164], "would": [55, 59, 151, 152, 153, 156, 161, 163, 164, 167, 169, 258, 264, 363, 391, 397, 408, 414, 434, 435, 436, 557, 600, 612, 622, 627, 641, 670, 679, 684, 694, 699, 727, 736, 775, 810, 847], "ic": [55, 80, 83, 86, 116, 151, 156, 160, 168, 171], "ih": [55, 80, 151, 156, 160, 168], "iw": [55, 80, 151, 156, 160, 168], "oc": [55, 80, 151, 156, 160], "kh": [55, 67, 80, 81, 106, 151, 156, 160, 164], "kw": [55, 67, 80, 106, 151, 156, 160, 164], "oh": [55, 67, 80, 106, 156, 164, 168], "ow": [55, 67, 80, 106, 156, 164, 168], "now": [55, 169, 260, 775, 793, 869], "accordingli": [55, 59, 62, 85, 86, 152, 258, 261], "dim": [56, 57, 58, 59, 61, 62, 151, 156, 158, 162, 163, 164, 167, 170, 177, 557], "offset_0": 57, "laid": [57, 150, 151, 167], "length": [57, 58, 62, 113, 114, 199, 204, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 222, 228, 233, 236, 237, 238, 241, 242, 243, 247, 248, 249, 250, 252, 255, 261, 262, 263, 358, 359, 372, 393, 394, 396, 400, 407, 420, 421, 422, 423, 424, 428, 429, 430, 431, 489], "fix": [57, 183, 202, 461, 489, 530, 851], "certain": [57, 60, 148, 152, 156, 421, 422, 526, 530, 583, 587, 683, 698, 712, 726, 752, 800, 805, 847, 851, 852], "canon": 57, "cnn": [57, 149, 151, 152, 153, 156, 160, 161, 164, 170], "stand": [57, 156, 371, 787], "minibatch": [57, 59, 160], "channel": [57, 61, 70, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 86, 99, 100, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 153, 158, 161, 169, 170, 171], "spatial": [57, 67, 68, 77, 78, 79, 80, 81, 82, 97, 98, 106, 107, 148, 151, 153, 156, 160, 162, 164, 165, 168, 170], "depth": [57, 80, 81, 156, 164], "outermost": [57, 155, 170, 171, 848], "innermost": [57, 155, 170, 171, 849, 854], "plai": [57, 148], "role": [57, 148], "agre": [57, 872], "permut": [57, 59, 141, 176, 263, 275, 276, 293, 326], "geq": [57, 156, 157, 168, 347, 349, 352, 362, 365, 366, 505, 521, 550], "Then": [57, 129, 140, 160, 347, 405, 739], "i_0": 57, "i_": 57, "i_j": 57, "submemori": 57, "Their": 57, "purpos": [57, 59, 148, 178, 261, 263, 347, 368, 553, 795], "regardless": [57, 183, 219, 220, 262, 533], "_a": 57, "densli": 57, "stai": [57, 59, 151], "strides_non_transpos": 57, "a_non_transpos": 57, "strides_transpos": 57, "a_transpos": 57, "letter": [57, 844], "english": 57, "alphabet": 57, "arbitrarili": [57, 176], "word": [57, 151, 258, 262, 287, 320, 344, 844], "nomenclatur": 57, "conveni": [57, 58, 148, 158, 560], "alias": [57, 58, 173, 178, 601, 613, 628, 685, 700, 756], "That": [57, 140, 156, 163, 176, 183, 258, 261, 344, 557, 573, 756, 775], "queri": [57, 59, 148, 150, 151, 156, 158, 159, 160, 162, 169, 183, 201, 260, 261, 262, 263, 264, 790], "expens": [57, 59, 150, 156, 583], "pad": [57, 59, 67, 68, 77, 78, 79, 80, 81, 82, 106, 107, 156, 158, 164, 169, 258, 794, 795], "architectur": [57, 555, 871], "fail": [57, 59, 62, 148, 150, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 261, 268, 276, 280, 284, 287, 289, 299, 311, 317, 320, 322, 333, 552, 557, 584, 586, 622, 679, 694, 736, 739, 796, 850], "incorrect": [57, 266, 269, 270, 272, 274, 277, 278, 281, 282, 285, 286, 288, 290, 292, 294, 297, 300, 301, 303, 305, 307, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343], "calcul": [57, 67, 68, 69, 71, 75, 77, 78, 79, 80, 81, 82, 88, 97, 98, 103, 104, 106, 107, 118, 120, 121, 122, 123, 124, 125, 126, 131, 134, 135, 137, 140, 144, 148, 158, 164, 165, 201, 205, 246, 256, 257, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 360, 361, 370, 374, 400, 402, 409, 421, 422, 454, 458, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 589, 600, 773, 788, 827], "amount": [57, 59, 77, 78, 79, 80, 81, 82, 151, 350, 353, 793, 824, 851], "central": [57, 439, 440, 441, 442, 451, 454], "notion": [57, 154, 155, 166, 172, 837], "understood": [57, 183], "correctli": [57, 153, 156, 739], "matmul": [57, 62, 147, 158, 163], "placehold": [57, 156, 159, 160, 163, 169, 844], "circumst": [57, 62], "hardwar": [57, 148, 151, 183, 401, 573, 794, 806, 807, 851, 852, 853, 870, 871], "practic": [57, 167, 174, 739], "topologi": [57, 152, 164, 170, 763, 790], "lrn": [57, 149, 158, 162], "preced": [57, 68, 79, 81, 82, 148, 153, 162, 164, 170, 173, 176, 177, 573, 775, 779, 811, 817, 844, 851], "short": [57, 169, 183, 346, 370, 553, 554], "summari": [57, 153, 161, 183, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 455, 456, 457, 459, 460, 555, 573, 821, 822, 823], "de": [57, 83, 85, 86, 116], "bandwidth": 57, "pool": [57, 67, 68, 106, 107, 149, 158, 159, 845], "shuffl": [57, 149, 158, 159], "softmax": [57, 62, 103, 135, 147, 149, 158, 159], "hint_pd": 57, "further": [57, 80, 156, 158, 168, 259, 260, 262, 263, 408, 451, 577, 578, 579, 761, 788, 824], "categori": [57, 553], "hand": [57, 163, 250, 255, 283, 284, 285, 286, 295, 316, 317, 318, 319, 328, 329], "sens": [57, 566, 572, 824], "come": [57, 157, 164, 170, 183, 794], "mini": 57, "3d": [57, 99, 100, 153, 156, 160, 161, 162, 163, 164, 168, 170, 557], "bca": 57, "4d": [57, 99, 100, 151, 160], "bacd": 57, "bcda": 57, "5d": [57, 151, 156, 161], "abdec": 57, "acbd": 57, "bcdea": 57, "6d": 57, "acbdef": 57, "cn": 57, "chwn": 57, "owi": 57, "iwo": 57, "ohwi": 57, "ihwo": 57, "iohw": 57, "odhwi": 57, "iodhw": 57, "idhwo": 57, "giohw": 57, "giodhw": 57, "seq_length": 57, "num_lay": 57, "num_direct": 57, "input_channel": 57, "num_gat": 57, "output_channel": 57, "lstm": [57, 149, 150, 158, 159], "gru": [57, 149, 158], "num_channels_in_hidden_st": 57, "num_channels_in_recurrent_project": 57, "forc": [58, 62, 849], "plain": [58, 150, 151, 156, 160, 163, 167], "yet": [59, 169, 174, 573, 751, 779, 791, 850, 851, 853], "chose": [59, 151], "proper": [59, 159, 355, 356, 368, 373, 386, 416, 584], "match": [59, 66, 76, 84, 97, 105, 108, 109, 112, 129, 142, 148, 154, 155, 158, 167, 173, 176, 177, 183, 258, 261, 434, 435, 436, 484, 489, 548, 553, 557, 568, 770, 786], "inequ": 59, "along": [59, 76, 85, 86, 120, 121, 122, 123, 124, 125, 126, 134, 148, 151, 170, 171, 258, 261, 557, 588, 788], "ordinari": [59, 824], "being": [59, 148, 167, 169, 170, 176, 182, 258, 261, 263, 311, 489, 572, 785, 837], "volum": [59, 140], "numpi": [59, 62, 66, 84, 108, 109, 112, 129, 139, 140, 142], "concaten": [59, 76, 155, 158, 169, 568, 573], "ill": [59, 682, 697, 711, 725, 815], "clear": [59, 554, 569, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 777, 788, 858, 859, 864], "implicitli": [59, 61, 169, 258, 259, 263, 420, 421, 422, 428, 429, 461, 566, 570, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 794, 811, 827, 849, 850], "adim": [59, 62], "adata_typ": 59, "aformat_tag": 59, "allow_empti": [59, 150, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "signifi": [59, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "area": 59, "encompass": 59, "reshap": 59, "imposs": 59, "constant": [59, 62, 70, 99, 100, 101, 140, 151, 153, 161, 180, 414, 513, 553, 590, 598, 611, 626, 640, 661, 669, 682, 697, 711, 725, 739, 775, 778, 826, 840], "join": [59, 561, 564, 572, 573, 761, 773, 818, 851, 852, 853], "consecut": [59, 181, 185, 195, 205, 532, 533, 566, 572, 573, 853], "counterpart": [59, 158], "And": [59, 169], "adjust": [59, 771, 793, 817, 845], "ndim": [59, 62, 161], "new_desc": 59, "in_md": 59, "expect_out_md": 59, "involv": [59, 260], "is_zero": 59, "etc": [59, 60, 62, 149, 150, 158, 168, 173, 181, 183, 261, 368, 416, 541, 848], "md": 59, "aengin": [59, 60, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172], "dnnl_memory_non": 59, "doesn": [59, 151, 169], "dnnl_memory_alloc": 59, "memory_kind": 59, "astream": [59, 60, 158, 167], "hint": [59, 153, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 177, 432, 576, 579, 611, 622, 626, 636, 640, 650, 669, 679, 682, 694, 697, 708, 711, 722, 725, 736, 763], "even": [59, 145, 153, 169, 183, 244, 245, 246, 261, 262, 263, 461, 525, 526, 531, 548, 557, 561, 573, 739, 754, 794, 848, 851, 853], "map_data": 59, "exclus": [59, 398, 407, 560, 801, 802, 805, 809, 836, 839, 842], "unmap": 59, "unmap_data": 59, "mainli": [59, 183, 358, 393], "debug": [59, 560, 582, 843], "suboptim": [59, 156, 161], "mapped_ptr": 59, "previous": [59, 151, 152, 183, 256, 257, 258, 299, 333, 770, 856], "make_memori": 59, "adesc": 59, "akind": [59, 60, 62], "ahandl": 59, "thrown": [59, 148, 256, 257, 258, 261, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 397, 398, 399, 403, 404, 406, 410, 411, 413, 414, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 552, 561, 739, 764, 787, 836, 849, 851, 852], "attach": [59, 152, 840, 842, 845, 850, 851, 853], "withing": 59, "abuff": 59, "impli": [59, 140, 176, 565], "get_memory_kind": 59, "amemori": 59, "said": 59, "make_engin": [60, 149], "adevic": 60, "acontext": 60, "ti": [60, 148, 150], "ephemer": 60, "relev": [60, 183, 256, 257, 258, 259, 261, 262, 263, 370, 434, 435, 436], "portion": [60, 824, 851], "explan": [60, 346, 370, 844], "bitwis": [60, 153, 161, 434, 435, 436, 482, 489, 507, 534, 764], "OR": [60, 153, 161, 482, 489, 507, 534], "in_ord": 60, "out_of_ord": 60, "default_flag": 60, "aflag": 60, "make_stream": [60, 149], "aqueu": 60, "get_queu": 60, "suggest": [61, 580, 622, 636, 650, 679, 694, 708, 722, 736], "logical_tensor": [61, 62], "boolean": [61, 62, 129, 150, 573, 622, 636, 650, 679, 694, 708, 722, 736, 810, 837], "z": [61, 230, 259, 262, 287, 289, 320, 322, 366, 468, 485, 495, 521, 536, 537, 541, 543, 545, 552, 558, 559, 573, 586], "s0": 61, "s1": [61, 714, 728], "s2": [61, 714, 728], "suppos": [61, 851], "strictli": [61, 310, 313, 344, 421, 422, 428, 429], "scheme": 61, "insert": [61, 105, 176, 588, 598, 600, 609, 611, 612, 614, 623, 626, 627, 637, 640, 641, 651, 669, 670, 680, 682, 684, 686, 695, 697, 699, 709, 711, 723, 725, 727, 737], "honor": 61, "faithfulli": [61, 573], "elimin": [61, 773], "don": [61, 148, 152, 764], "recogn": 61, "subgraph": [61, 148], "fewer": 61, "vice": [61, 105, 152, 258], "versa": [61, 105, 152, 258], "clearli": [61, 183], "underneath": [61, 62], "decid": [62, 148, 153, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171, 573], "unchang": [62, 181, 212, 213, 217, 218, 861], "dnnl_dim_t": 62, "tid": 62, "ltype": 62, "ptype": 62, "inlin": [62, 158, 178, 772, 782], "deleg": 62, "deduc": [62, 168, 261, 557, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742], "lid": 62, "get_dim": 62, "get_id": [62, 859], "get_property_typ": 62, "get_layout_typ": 62, "get_layout_id": 62, "rais": [62, 529, 549, 553, 560, 596, 851], "get_strid": [62, 156, 158, 164], "get_mem_s": 62, "is_equ": 62, "lt": 62, "tenor": 62, "regard": [62, 150, 564, 848], "eg": 62, "absbackward": [62, 147], "avgpool": [62, 147], "avgpoolbackward": [62, 107, 147], "batchnormforwardtrain": [62, 147], "batchnorminfer": [62, 69, 147], "batchnormtrainingbackward": [62, 147], "biasadd": [62, 73, 147], "biasaddbackward": [62, 147], "clamp": [62, 75, 147], "clampbackward": [62, 147], "convolutionbackwarddata": [62, 77, 147], "convolutionbackwardweight": [62, 147], "convtranspos": [62, 147], "convtransposebackwarddata": [62, 147], "convtransposebackwardweight": [62, 147], "dynamicdequant": [62, 147], "dynamicquant": [62, 147], "elu": [62, 88, 147, 149, 158], "elubackward": [62, 147], "exp": [62, 147, 262, 352, 354, 357, 382, 384, 385, 388, 390, 392, 406, 413, 491, 492, 494, 499, 553], "gelu": [62, 92, 147, 158], "gelubackward": [62, 147], "hardsigmoid": [62, 94, 147, 157, 158], "hardsigmoidbackward": [62, 147], "hardswish": [62, 96, 147, 158], "hardswishbackward": [62, 147], "interpol": [62, 98, 147, 168], "interpolatebackward": [62, 147], "layernorm": [62, 100, 147], "layernormbackward": [62, 147], "leakyrelu": [62, 147], "log": [62, 103, 147, 487, 495, 496, 497, 499, 516, 518, 539, 564, 566, 572, 574], "logsoftmax": [62, 104, 147, 158, 171], "logsoftmaxbackward": [62, 147], "maxpool": [62, 147], "maxpoolbackward": [62, 147], "mish": [62, 111, 147, 158], "mishbackward": [62, 147], "pow": [62, 147, 158, 529, 530, 553], "prelu": [62, 101, 114, 147, 158, 159], "prelubackward": [62, 147], "reciproc": [62, 147], "reducel1": [62, 147], "reducel2": [62, 147], "reducemax": [62, 147], "reducemean": [62, 147], "reducemin": [62, 147], "reduceprod": [62, 147], "reducesum": [62, 147], "relubackward": [62, 147], "sigmoid": [62, 131, 147, 158, 169], "sigmoidbackward": [62, 147], "softmaxbackward": [62, 147], "softplu": [62, 110, 133, 147], "softplusbackward": [62, 147], "sqrtbackward": [62, 147], "squareddiffer": [62, 147], "statictranspos": [62, 147], "tanhbackward": [62, 147], "wildcard": [62, 147, 148, 158, 163], "lastsymbol": 62, "illeg": [62, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342], "lead": [62, 152, 156, 167, 183, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 221, 222, 224, 225, 226, 227, 228, 233, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 423, 430, 854], "weight_shap": 62, "same_upp": [62, 67, 68, 77, 78, 79, 80, 81, 82, 106, 107], "same_low": [62, 67, 68, 77, 78, 79, 80, 81, 82, 106, 107], "half_pixel": [62, 97, 98], "align_corn": [62, 97, 98], "ncx": [62, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 97, 98, 106, 107, 113, 114], "nxc": [62, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 97, 98, 106, 107, 113, 114], "bilinear": [62, 97, 98, 158], "trilinear": [62, 97, 98, 158, 168], "per_channel": [62, 83, 85, 86, 113, 116], "per_tensor": [62, 83, 85, 86, 116], "ceil": [62, 67, 106, 553], "floor": [62, 67, 81, 106, 553, 775], "oix": [62, 80, 81, 82], "xio": [62, 80, 81, 82], "iox": [62, 77, 78, 79], "xoi": [62, 77, 78, 79], "add_input": 62, "add_output": 62, "set_attr": 62, "self": 62, "engine_kind": 62, "fpmath_mod": [62, 151], "allow_except": [62, 148], "dag": 62, "alreadi": [62, 262, 428, 429, 430, 431, 605, 751, 788, 794, 796, 798, 809, 837, 849, 851, 852, 858, 859, 863], "schema": [62, 148], "success": [62, 158, 162, 258, 262, 263, 349, 375, 377, 387, 482, 489, 507, 534], "similarli": [62, 148, 164, 169, 180, 181, 258, 262, 756, 810], "un": [62, 489], "is_fin": [62, 823], "polici": [62, 151, 173, 174, 175, 176, 177, 180, 598, 682, 697, 711, 725, 752, 753, 758, 761, 762, 769, 774], "fusion": [62, 63, 148, 150, 153], "claim": 62, "scalabl": [63, 148, 150, 752, 791, 792, 796, 797, 798], "awar": [63, 148, 150, 566], "wise": [64, 66, 84, 90, 102, 108, 109, 110, 112, 113, 115, 119, 128, 136, 138, 139, 142, 145, 158, 273, 551], "ge": [64, 87, 101, 113, 265, 267, 268, 271, 273, 298, 299, 308, 309, 328, 329, 330, 331, 332, 333, 342, 343, 350, 353, 365, 366, 371, 375, 376, 377, 380, 382, 383, 387, 389, 390, 399, 403, 404, 406, 410, 411, 413], "overlin": [66, 76, 84, 108, 109, 112, 142, 154, 155, 156, 157, 167, 170, 171, 172, 197, 361, 402], "_0": [66, 84, 108, 109, 112, 129, 142, 258], "mathbin": [66, 84, 154], "_1": [66, 84, 108, 109, 112, 129, 142, 152, 258], "src_0": [66, 84, 108, 109, 112, 129, 139, 142, 154], "src_1": [66, 84, 108, 109, 112, 129, 139, 142, 154], "denom": [67, 164], "limits_": [67, 69, 99, 106, 120, 121, 123, 125, 126, 151, 153, 161, 162, 164, 166, 171, 172], "sh": [67, 80, 81, 106, 156, 164], "ph_l": [67, 80, 81, 106, 156, 164], "sw": [67, 80, 81, 106, 156, 164], "pw_l": [67, 80, 81, 106, 156, 164], "overlap": [67, 164, 224, 225, 259, 295, 847], "window": [67, 68, 106, 107, 164, 583, 584], "s64": [67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 97, 98, 99, 100, 103, 104, 106, 107, 116, 120, 121, 122, 123, 124, 125, 126, 132, 133, 134, 135, 141], "front": [67, 68, 77, 78, 79, 80, 81, 82, 106, 107, 156, 164, 739, 743], "left": [67, 68, 77, 78, 79, 80, 81, 82, 99, 100, 105, 106, 107, 129, 155, 156, 157, 158, 162, 163, 164, 168, 169, 170, 171, 183, 195, 210, 229, 239, 240, 251, 253, 254, 258, 259, 261, 262, 263, 273, 274, 304, 305, 306, 307, 308, 309, 338, 339, 340, 341, 342, 343, 344, 347, 350, 353, 354, 357, 365, 366, 371, 375, 376, 377, 380, 382, 383, 387, 389, 390, 392, 396, 397, 399, 403, 404, 406, 407, 410, 411, 413, 420, 421, 422, 478, 491, 492, 494, 560, 566, 568, 569, 572, 573, 580, 588, 591, 596, 600, 605, 612, 622, 627, 636, 641, 650, 654, 658, 662, 667, 670, 679, 684, 694, 699, 708, 713, 722, 727, 736, 740, 741, 822, 858, 861], "bottom": [67, 68, 77, 78, 79, 80, 81, 82, 106, 107, 156, 164, 344, 760], "right": [67, 68, 77, 78, 79, 80, 81, 82, 99, 100, 105, 106, 107, 129, 151, 155, 156, 157, 158, 162, 163, 164, 168, 169, 170, 171, 183, 195, 210, 229, 239, 240, 250, 251, 253, 254, 255, 258, 259, 261, 262, 263, 273, 283, 284, 285, 286, 295, 304, 305, 306, 307, 308, 309, 316, 317, 318, 319, 328, 329, 338, 339, 340, 341, 342, 343, 344, 347, 350, 353, 354, 357, 365, 366, 371, 375, 376, 377, 380, 382, 383, 387, 389, 390, 392, 396, 397, 399, 400, 403, 404, 406, 407, 409, 410, 411, 413, 420, 478, 491, 492, 494, 560, 566, 569, 572, 573, 580, 763, 822, 872], "srcshape": 68, "mu": [69, 70, 99, 100, 153, 161, 418], "nhw": [69, 153], "gamma": [69, 70, 71, 99, 100, 153, 156, 161, 346, 370, 371, 380, 512, 549, 553], "neither": [69, 71, 572, 574, 836], "running_mean": 69, "running_vari": 69, "batch_mean": 69, "batch_vari": 69, "batch_norm": [70, 158], "stabil": [70, 99, 100, 153, 161], "diff_gamma": [71, 100], "diff_beta": [71, 100], "clip": [74, 158], "src_i": [74, 76, 103, 115, 134, 155, 172], "_valu": 74, "smaller": [74, 75, 105, 151, 167, 262, 421, 422, 423, 424, 428, 429, 430, 431, 503, 520, 553, 779, 791], "upper": [74, 75, 151, 183, 192, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 265, 267, 268, 271, 273, 275, 276, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 342, 343, 344, 432, 560, 577, 793], "ou": [76, 155, 170, 171], "c_": [76, 155, 169, 361, 374, 402], "stretch": [77, 78, 79, 80, 81, 82], "_channel": [77, 78, 79, 80, 81, 82], "_shape": [77, 78, 79, 80, 81, 82], "furthermor": [80, 150, 151, 152, 156], "comment": [80, 81, 156], "pd_l": [80, 81, 156], "pd_r": [80, 81, 156], "ph_r": [80, 81, 156], "pw_r": [80, 81, 156], "sd": [80, 81, 156], "dd": [80, 81, 156, 157], "dh": [80, 81, 106, 156], "dw": [80, 81, 106, 156], "fist": 80, "rest": [80, 418, 760, 849], "lfloor": [80, 156, 168, 258, 262, 362, 377, 387, 389, 399, 403, 404, 411, 501, 505, 521, 550], "rfloor": [80, 156, 168, 258, 262, 362, 377, 387, 389, 399, 403, 404, 411, 501, 505, 521, 550], "oc_g": [80, 156], "ic_g": [80, 156], "dkh": [80, 156], "dkw": [80, 156], "firstli": [81, 105], "_pad": 81, "_h": 81, "_padding_h": 81, "src_h": 81, "dst_h": 81, "zps_i": [83, 85], "scale_i": [83, 86, 116], "unlik": [85, 101, 127, 161, 183, 432, 557, 564, 576, 751, 766, 851], "scales_i": 85, "channelnum": [85, 120, 121, 122, 123, 124, 125, 126], "zp_i": [86, 116], "exponenti": [90, 158, 183, 264, 346, 347, 370, 371, 495, 496, 497, 498, 499, 551, 553], "erf": [91, 157, 158, 478, 492, 493, 494, 553], "sqrt2": 91, "dev_guide_convent": 93, "terpol": [97, 98], "resiz": [97, 98, 739, 793], "x_resiz": [97, 98], "differenti": [97, 573], "modul": [99, 100], "affin": [99, 100, 576, 579, 852], "span": [99, 100, 201, 298, 299, 332, 333, 385, 398, 404], "diffgamma": [100, 153, 161], "diffbeta": [100, 153, 161], "mark": [100, 148, 153, 161, 345, 389, 553, 770, 844], "asterisk": [100, 153, 161], "small": [101, 358, 393, 578, 579, 763, 794, 859], "slope": [101, 113, 114, 152, 153, 156, 169], "coeffici": [101, 248, 250, 255, 283, 284, 295, 316, 328, 436, 451, 454, 580], "leakag": 101, "natur": [102, 158, 261, 397, 512, 514, 516, 553, 867], "logarithm": [102, 158, 512, 514, 515, 516, 517, 551, 553], "formul": [103, 132, 133, 156], "dst_i": [103, 115, 134, 139], "src_j": [103, 134], "unsqueez": 105, "effect": [105, 152, 179, 181, 261, 535, 557, 558, 559, 560, 566, 569, 751, 761, 763, 793, 837, 850, 851, 852, 858, 860], "ln": [110, 132, 171, 347, 357, 392, 515, 553], "omega": [111, 157], "delta": [111, 157, 262, 263, 739, 740], "parametr": 113, "uni": [113, 114], "direction": [113, 114], "met": [113, 114, 560, 592, 601, 613, 628, 642, 655, 663, 671, 682, 685, 696, 697, 700, 711, 714, 724, 725, 728, 742, 806, 807, 815, 850], "rightmost": 113, "nd": [113, 114], "shape_i": 113, "pytorch": 114, "tensorflow": 114, "slope_shap": 114, "input_forward_shap": 114, "diff_slop": 114, "power": [115, 119, 166, 183, 264, 371, 526, 529, 530, 553], "infin": [119, 480, 501, 532, 541, 553], "neq": 119, "infti": [119, 352, 354, 365, 384, 464, 478, 492, 498, 514, 515], "l1": 120, "ident": [120, 121, 122, 123, 124, 125, 126, 148, 155, 172, 180, 181, 225, 258, 259, 262, 368, 391, 408, 416, 418, 557, 564, 572, 573, 851, 853], "shapeof": [120, 121, 122, 123, 124, 125, 126], "l2": 121, "backend": [127, 148, 260, 419, 432, 434, 435, 436], "pleas": [127, 258, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "op_typecast": 127, "op_dequant": 127, "cond": 129, "invalid_shap": 129, "_0_i": 139, "_1_i": 139, "overal": [140, 775], "rearrang": 141, "substract": 142, "bind": [148, 763], "benefit": [148, 150, 579, 794], "offload": [148, 174], "dnn": 148, "know": [148, 461, 573, 844, 850], "anymor": 148, "wild": 148, "conduct": 148, "aliv": 148, "analyz": 148, "topolog": 148, "port": [148, 579, 756, 766, 768, 769, 770, 771, 772, 773, 774, 776, 782, 786, 834, 843, 871], "cycl": 148, "put": [148, 156, 361, 374, 402, 770, 773], "among": [148, 150, 478, 479, 491, 492, 493, 494, 556, 779], "down": [148, 151, 156, 583], "isa": 148, "incomplet": [148, 419, 434, 435, 436], "succe": [148, 794, 850], "predecessor": [148, 753, 754, 755, 758, 760, 762, 763, 766, 767, 769, 770, 771, 772, 774, 777, 779, 780, 782, 785, 786], "amort": [148, 150, 159], "fall": [148, 150, 151, 152, 262, 532, 551, 796], "summar": [148, 169, 262, 552, 583, 836, 837, 844], "arrow": 148, "critic": [148, 156, 160, 775, 806, 807, 871], "exchang": [148, 588], "toward": [148, 480, 501, 532, 550, 553, 566], "against": [148, 183, 586, 799], "appear": [148, 170, 573, 574], "twice": [148, 364, 573], "prevent": [148, 156, 258, 793, 850], "cyclic": 148, "safe": [148, 150, 151, 157, 159, 183, 590, 593, 597, 598, 603, 604, 608, 610, 611, 616, 624, 626, 630, 638, 640, 644, 652, 653, 660, 661, 664, 668, 669, 673, 681, 682, 683, 689, 696, 697, 698, 703, 710, 711, 712, 717, 724, 725, 726, 731, 738, 750, 799, 849, 850, 851, 858, 859, 861, 865], "unit": [148, 158, 169, 183, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 275, 276, 293, 326, 328, 329, 391, 400, 409, 435, 436, 541, 553, 775, 862], "captur": [148, 150, 262, 848, 849, 851], "under": [148, 173, 258, 262, 405, 415, 743, 752, 850, 872], "abl": [148, 152, 163, 167, 261, 266, 269, 270, 272, 274, 277, 278, 281, 282, 285, 286, 288, 290, 292, 294, 297, 300, 301, 303, 305, 307, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343, 753, 760, 770, 818], "lifecycl": 148, "invok": [148, 177, 179, 261, 262, 564, 566, 568, 571, 572, 573, 587, 753, 758, 760, 762, 767, 774, 815, 849, 851, 852, 861, 866, 867], "prepack": 148, "late": [148, 566], "trivial": [148, 258], "shallow": 148, "vanilla": 149, "ctx": 149, "buf_src": 149, "static_cast": [149, 259, 261, 379, 382, 383, 384, 388, 390, 392, 406, 413], "malloc_devic": [149, 183, 259, 260, 461], "buf_dst": 149, "mem_src": 149, "mem_dst": 149, "publish": 149, "apach": 149, "licens": [149, 872], "profil": 149, "intention": [149, 150], "extent": 149, "futur": [149, 178, 183, 421, 422, 555, 761], "cooper": 149, "co": [149, 183, 202, 345, 347, 371, 486, 487, 488, 539, 541, 553], "comprehens": 149, "suit": [149, 222, 225, 228, 871], "consult": 149, "readm": 149, "although": 150, "open": [150, 557, 558, 559, 560, 591, 600, 605, 612, 622, 624, 627, 636, 638, 641, 650, 652, 654, 662, 670, 679, 681, 684, 694, 696, 699, 708, 710, 713, 722, 724, 727, 736, 738, 740, 741, 866, 870, 872], "tile": 150, "functor": [150, 159, 179, 568, 569, 571, 573, 620, 634, 648, 677, 767, 851, 853, 858, 860], "thing": 150, "pure": [150, 159, 769], "approach": [150, 159, 558, 559, 800, 805, 810], "tailor": [150, 159], "inspect": [150, 152, 159, 264, 753, 758, 762, 767, 774], "instanti": [150, 159, 181, 258, 261, 756, 760, 769, 786, 787, 797, 801, 802], "transpar": [150, 461, 793, 871], "effort": [150, 572, 573], "resid": [150, 180], "extra": [151, 153, 572, 794, 795], "equival": [151, 179, 181, 183, 258, 432, 557, 564, 565, 572, 574, 588, 589, 591, 594, 595, 600, 603, 604, 605, 606, 607, 612, 614, 616, 619, 622, 624, 627, 630, 633, 636, 638, 640, 641, 644, 647, 650, 652, 654, 656, 657, 662, 665, 666, 670, 673, 676, 679, 681, 684, 686, 689, 690, 691, 694, 696, 699, 703, 704, 705, 708, 710, 711, 713, 717, 718, 719, 722, 724, 727, 731, 732, 733, 736, 738, 740, 741, 747, 763, 787, 854], "im2col": 151, "longer": [151, 183, 564, 775], "too": [151, 526, 568, 578], "proport": [151, 556, 557, 558, 559, 560, 576, 577, 579, 824, 825], "contrast": [151, 796], "littl": [151, 763], "summand": 151, "though": [151, 169, 177, 179, 420, 525, 573, 794], "op_pd": [151, 152], "param": [151, 152, 231, 232, 261, 793, 847], "much": [151, 364, 578, 794], "query_s64": [151, 158], "memory_consumption_s64": 151, "zero_md": 151, "get_scratchpad_mod": 151, "op_d": 151, "scratchpad_md": 151, "scratchpad_desc": [151, 158], "prim": 151, "fine": [151, 577], "scratchpad_ptr": 151, "user_memory_manag": 151, "explain": [151, 263], "d_0": 151, "d_": [151, 293, 326], "d_i": 151, "le": [151, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "mathtt": 151, "wei_plain_f32_md": 151, "wei_scal": 151, "conv_pd": 151, "wei_conv_s8_md": 151, "weights_desc": [151, 153, 156, 158, 160, 161, 163], "quantization_mask": 151, "wei_s8": 151, "wei_f32": 151, "wei_reorder_pd": 151, "wei_reord": 151, "complementari": [151, 478, 479, 491, 492, 493, 494, 553], "ideal": [151, 560, 739, 824], "sai": [151, 183], "src_scale": 151, "src_f32": 151, "src_s8": 151, "dst_scale": 151, "dst_f32": 151, "dst_s8": 151, "src_conv_s8_any_md": 151, "wei_conv_s8_any_md": 151, "dst_conv_s8_any_md": 151, "ditto": 151, "data_mask": 151, "wei_mask": 151, "padding_l": [151, 156, 164], "padding_r": [151, 156, 164], "padding_kind": 151, "fp32": [151, 259, 261, 262, 263], "notic": 151, "narrow": 151, "tf32": 151, "strict": [151, 513], "disabl": [151, 156, 463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 583, 793, 852], "environ": [151, 183, 790, 793], "delai": 151, "successfulli": [151, 183, 256, 257, 258, 261, 262, 263, 358, 393, 482, 489, 507, 534, 739, 754, 761, 769], "whatev": 151, "try": [151, 584, 850], "get_fpmath_mod": 151, "get_scales_mask": 151, "set_output_scal": [151, 156], "get_post_op": 151, "set_rnn_data_qparam": 151, "mb": [151, 163], "sic": 151, "slc": 151, "dic": 151, "dlc": 151, "op_desc": 151, "rnn_d": 151, "src_layer": 151, "src_iter": 151, "dst_iter": 151, "dst_layer": 151, "set_rnn_weights_qparam": 151, "five": [151, 371, 760], "weights_lay": 151, "weights_iter": 151, "append": [152, 183, 739, 740, 750], "po": [152, 177, 526, 611, 624, 626, 638, 640, 652, 669, 681, 682, 696, 697, 710, 711, 724, 725, 738], "preserv": [152, 263, 574, 783, 853], "suitabl": [152, 181, 261, 489], "sketch": [152, 565, 852], "append_someth": 152, "append_something_els": 152, "other_param": 152, "matter": [152, 564], "pd": [152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172], "robust": 152, "magnitud": [152, 184, 189, 504, 519, 520, 553], "reinterpret": [152, 183], "as_data_typ": 152, "p_op": 152, "summand_md": 152, "pretti": 152, "resnet": 152, "famili": [152, 361, 374, 402, 478, 479, 491, 492, 493, 494, 793], "unus": [152, 157, 750, 793], "conv_d": 152, "conv": [152, 156], "entri": [152, 183, 195, 201, 205, 222, 225, 228, 231, 232, 246, 251, 253, 254, 258, 259, 262, 263, 344, 355, 373, 386, 420, 421, 422, 428, 429, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 852], "residu": 152, "simplest": [152, 420], "get_params_sum": 152, "aalgorithm": [152, 154, 156, 157, 162, 164, 166, 168, 171], "eltwise_op": 152, "get_params_eltwis": 152, "src1_desc": [152, 154], "binary_op": [152, 176, 180], "another_input": 152, "operand": [152, 568], "get_params_binari": 152, "straightforward": [153, 156, 161, 164, 165, 168], "flavor": [153, 161, 314], "popul": 153, "unbias": 153, "mu_i": 153, "2_i": 153, "mu_": 153, "2_": 153, "clariti": [153, 161], "Not": [153, 161, 434, 435, 436, 851, 855], "data_desc": [153, 157], "diff_data_desc": 153, "overwritten": [153, 154, 157, 161, 171, 187, 194, 195, 200, 201, 202, 203, 205, 210, 214, 215, 221, 222, 224, 225, 226, 227, 228, 240, 244, 245, 246, 251, 253, 254, 265, 267, 271, 273, 274, 275, 279, 283, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 489, 777, 788], "sp_n": 153, "sp_0": 153, "0d": [153, 160, 162], "aprop_kind": [153, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171], "src_desc": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172], "dst_desc": [153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172], "default_attr": [153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171], "mean_desc": [153, 161], "variance_desc": [153, 161], "get_prop_kind": [153, 156, 157, 158, 160, 161, 162, 164, 165, 169, 170, 171], "get_epsilon": [153, 158, 161, 166], "get_flag": [153, 158, 161], "batch_normalization_backward": [153, 158], "diff_src_desc": [153, 156, 157, 158, 160, 161, 162, 164, 165, 168, 170, 171], "diff_dst_desc": [153, 156, 157, 158, 160, 161, 162, 164, 165, 168, 170, 171], "hint_fwd_pd": [153, 156, 157, 160, 161, 162, 164, 165, 168, 169, 170, 171], "diff": [153, 156, 157, 158, 160, 161, 162, 164, 165, 168, 169, 170, 171], "diff_weights_desc": [153, 156, 158, 160, 161, 165], "x_0": [154, 157, 167, 358, 359, 393, 394, 414], "overwrit": [154, 156, 160, 163, 167, 263, 304, 306, 308, 338, 340, 342, 777, 788], "src0": 154, "src1": 154, "pdx": [154, 155, 158, 172], "src0_desc": 154, "get_algorithm": [154, 156, 157, 158, 162, 164, 166, 171], "concat_dimens": 155, "sum_i": 155, "c_i": 155, "_l": 156, "_r": 156, "broken": [156, 739, 743], "exposit": [156, 347, 588], "realiti": 156, "depthwis": 156, "diffbia": [156, 160, 169], "kd": [156, 160], "feasibl": 156, "pseudo": [156, 167, 181, 345, 418, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838], "eta": 156, "simd": [156, 345, 372, 407], "notabl": 156, "winograd": [156, 158, 167], "loss": 156, "fast": [156, 345, 370, 372, 407, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 485, 486, 488, 536, 537, 538, 540, 545, 546, 548], "lavin": 156, "grai": [156, 400, 409], "heurist": 156, "bias_desc": [156, 158, 160, 163, 169], "get_dil": [156, 158, 164], "get_padding_l": [156, 158, 164], "get_padding_r": [156, 158, 164], "convolution_backward_data": [156, 158], "convolution_backward_weight": [156, 158], "diff_bias_desc": [156, 158, 160, 169], "deconvolution_forward": [156, 158], "deconvolution_backward_data": [156, 158], "deconvolution_backward_weight": [156, 158], "pi": [157, 262, 347, 354, 357, 371, 379, 384, 385, 392, 398, 464, 478, 491, 492, 493, 494, 514, 515], "044715": 157, "log_": 157, "rl": 157, "134145": 157, "dnnl_forward_train": 157, "dnnl_forward_infer": 157, "benefici": 157, "rather": [157, 824], "tip": 157, "unari": [157, 176, 179, 180, 858, 860], "get_alpha": [157, 158, 162, 169], "get_beta": [157, 158, 162, 169], "use_dst_for_bwd": 157, "subclass": 158, "inner_product_backward_data": [158, 160], "inner_product_backward_weight": [158, 160], "inner_product_forward": [158, 160], "layer_normalization_backward": [158, 161], "lrn_backward": [158, 162], "lrn_forward": [158, 162], "pooling_backward": [158, 164], "prelu_backward": [158, 165], "prelu_forward": [158, 165], "resampling_backward": [158, 168], "resampling_forward": [158, 168], "shuffle_backward": [158, 170], "softmax_backward": [158, 171], "softmax_forward": [158, 171], "layer_norm": 158, "inner_product": 158, "resampl": [158, 159], "unordered_map": 158, "dnnl_arg_": 158, "query_md": 158, "exec_arg_md": 158, "rh": [158, 569, 572, 590, 594, 595, 598, 606, 607, 611, 617, 618, 619, 625, 626, 631, 632, 633, 639, 640, 645, 646, 647, 653, 656, 657, 661, 665, 666, 669, 674, 675, 676, 682, 690, 691, 697, 704, 705, 711, 718, 719, 725, 732, 733, 739, 745, 746, 747, 818], "aprimit": 158, "impl_info_str": 158, "get_axi": [158, 170, 171], "get_local_s": [158, 162], "get_k": [158, 162], "get_p": [158, 166], "get_factor": 158, "get_cell_kind": [158, 169], "rnn_direct": [158, 169], "get_direct": [158, 169], "get_activation_kind": [158, 169], "get_kernel": [158, 164], "get_group_s": [158, 170], "src_md": [158, 167], "dst_md": [158, 167], "weights_md": 158, "scratchpad_engin": 158, "get_primitive_attr": 158, "frequent": [158, 793], "src_layer_desc": [158, 169], "src_iter_desc": [158, 169], "src_iter_c_desc": [158, 169], "weights_layer_desc": [158, 169], "weights_iter_desc": [158, 169], "weights_peephole_desc": [158, 169], "peephol": 158, "weights_projection_desc": [158, 169], "augru_attention_desc": 158, "augru": 158, "attent": [158, 169], "dst_layer_desc": [158, 169], "dst_iter_desc": [158, 169], "dst_iter_c_desc": [158, 169], "diff_src_layer_desc": [158, 169], "diff_src_iter_desc": [158, 169], "diff_src_iter_c_desc": [158, 169], "diff_weights_layer_desc": [158, 169], "diff_weights_iter_desc": [158, 169], "diff_weights_peephole_desc": [158, 169], "diff_weights_projection_desc": [158, 169], "diff_augru_attention_desc": 158, "diff_dst_layer_desc": [158, 169], "diff_dst_iter_desc": [158, 169], "diff_dst_iter_c_desc": [158, 169], "subsequ": [158, 176, 258, 391, 408, 417, 560, 739, 761, 770, 793], "forward_scor": 158, "backward_weight": 158, "backward_bia": 158, "bounded_relu": 158, "rectifi": 158, "soft_relu": 158, "swish": 158, "hyperbol": [158, 264, 464, 469, 474, 487, 539, 547, 553], "tangent": [158, 471, 472, 473, 474, 475, 545, 546, 547, 548, 553], "exclud": [158, 557, 837], "c_t": [158, 169], "w_c": 158, "x_t": 158, "b_": [158, 169, 265], "c_x": 158, "r_t": [158, 169], "u_c": 158, "h_": [158, 169, 231, 232], "c_h": 158, "lrb": 158, "mul": [158, 166, 553], "binary_div": 158, "div": [158, 553], "binary_sub": 158, "binary_g": 158, "binary_gt": 158, "binary_l": 158, "binary_lt": 158, "binary_eq": 158, "binary_n": 158, "reduction_max": [158, 166], "reduction_min": [158, 166], "reduction_sum": [158, 166], "reduction_mul": [158, 166], "reduction_mean": [158, 166], "reduction_norm_lp_max": [158, 166], "norm_lp_max": 158, "reduction_norm_lp_sum": [158, 166], "norm_lp_sum": 158, "reduction_norm_lp_power_p_max": [158, 166], "norm_lp_power_p_max": 158, "reduction_norm_lp_power_p_sum": [158, 166], "norm_lp_power_p_sum": 158, "softmax_accur": [158, 171], "stabl": [158, 171, 176, 574], "softmax_log": [158, 171], "mnemon": 158, "conceptu": 159, "concret": 159, "prefer": [159, 260, 775, 805, 809, 851], "embodi": 159, "nest": [159, 173, 588, 791, 845, 847, 853], "something_forward": 159, "action": [159, 783, 793, 836], "flatten": [160, 866], "stat_desc": 161, "_ndim": 161, "_dim": [161, 446], "advis": 161, "n_": [162, 258, 262], "local_s": 162, "restor": [164, 851, 853], "leaki": 165, "trainabl": 165, "mbox": 165, "weight_desc": 165, "mathop": 166, "lp": 166, "idl": [166, 577], "ep": [166, 485, 486, 488, 506, 513, 526, 535, 536, 537, 538, 540, 545, 546, 548], "kept": [167, 763, 853], "simultan": [167, 176, 183, 587, 752, 753, 773, 791, 794, 837, 850, 851, 859], "encount": [167, 219, 220, 541], "bug": 167, "team": 167, "dnnl_s8": 167, "dnnl_f32": 167, "allevi": 167, "fact": 167, "1024": 167, "127": [167, 414, 513], "124": 167, "dt_src": 167, "memory_format": 167, "fmt_src": 167, "dt_dst": 167, "fmt_dst": 167, "output_scal": 167, "src_engin": 167, "dst_engin": 167, "get_src_engin": 167, "get_dst_engin": 167, "upsampl": 168, "downsampl": 168, "f_h": 168, "f_w": 168, "ih_0": 168, "iw_0": 168, "w_": [168, 169, 407, 414], "ih_1": 168, "iw_1": 168, "lceil": [168, 480, 505, 521, 550], "rceil": [168, 480, 505, 521, 550], "_spatial": 168, "_size": [168, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 268, 276, 280, 284, 311, 317], "stack": [169, 847, 871], "unrol": 169, "srciter": 169, "dstiter": 169, "four": [169, 229, 256, 257, 259, 347, 361, 371, 402, 472, 473, 553, 557], "evalu": [169, 176, 177, 567, 793, 858, 860, 861], "left2right": 169, "right2left": 169, "decreas": [169, 499, 553, 583, 739, 758, 771, 869], "bidirectional_concat": 169, "dstlayer": 169, "bidirectional_sum": 169, "srclayer": 169, "six": 169, "vanilla_rnn_pd": 169, "aprop": 169, "a_t": 169, "h_t": 169, "lstm_pd": 169, "src_iter_h_desc": 169, "dst_iter_h_desc": 169, "give": [169, 420], "i_t": 169, "w_i": 169, "b_i": [169, 284, 285, 317, 318], "f_t": 169, "w_f": 169, "u_f": 169, "b_f": 169, "u_": [169, 275, 396], "o_t": 169, "w_o": 169, "u_o": 169, "b_o": 169, "weightslay": 169, "weightsit": 169, "srciterc": 169, "dstiterc": 169, "p_i": [169, 276, 398], "p_f": 169, "p_o": 169, "weights_peephol": 169, "simplic": [169, 358, 393], "weights_project": 169, "gru_pd": 169, "u_t": 169, "w_u": 169, "u_u": 169, "b_u": 169, "w_r": 169, "u_r": 169, "b_r": 169, "lbr_gru_pd": 169, "augru_pd": 169, "attention_desc": 169, "lbr_augru_pd": 169, "weightspeephol": 169, "weightsproject": 169, "diffsrclay": 169, "diffsrcit": 169, "diffsrciterc": 169, "diffweightslay": 169, "diffweightsit": 169, "diffweightspeephol": 169, "diffweightsproject": 169, "diffdstlay": 169, "diffdstit": 169, "diffdstiterc": 169, "diff_": 169, "shorten": 169, "variant": [169, 173, 219, 220, 287, 320, 573], "rnn_flag": 169, "unidirectional_left2right": 169, "unidirect": 169, "unidirectional_right2left": 169, "bidirect": 169, "info": [169, 183, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 839, 842, 851], "lbr": 169, "thought": 170, "formal": [170, 181], "group_siz": [170, 187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334], "essenti": 170, "nu": [171, 371], "dpl": [173, 176, 177, 178, 179, 180, 181], "shorter": 173, "analogu": [173, 181], "prefix": [173, 176, 573, 841], "preprocessor": [173, 183], "macro": [173, 183, 582, 789, 843], "compliant": [173, 183, 261], "onedpl_spec_vers": 173, "decim": [173, 586], "liter": [173, 461, 586, 844], "minor": [173, 183, 289, 310, 311, 322, 584, 586], "latest": [173, 261, 586], "104": 173, "iso": [174, 561, 563, 565, 567, 572, 573, 574, 576, 577, 578, 579, 590, 591, 592, 593, 596, 598, 600, 601, 603, 605, 611, 612, 613, 614, 615, 622, 626, 627, 628, 629, 636, 640, 641, 642, 643, 650, 653, 654, 655, 658, 661, 662, 663, 664, 667, 669, 670, 671, 672, 679, 682, 683, 684, 685, 686, 688, 694, 697, 698, 699, 700, 702, 708, 711, 712, 713, 714, 716, 722, 725, 726, 727, 728, 730, 736, 739, 740, 741, 742, 744, 753, 755, 756, 758, 762, 763, 766, 767, 769, 771, 774, 777, 779, 780, 785, 787, 788, 789, 791, 792, 794, 796, 798, 800, 802, 805, 808, 809, 810, 815, 817, 851, 853, 854, 858, 860, 866], "iec": [174, 792], "14882": [174, 792], "17": [174, 371, 565, 569, 572, 573, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 753, 762, 769, 774, 785, 792], "complement": 174, "wrapper": [174, 175, 461, 795], "6th": [175, 178, 180], "edit": [175, 178, 180], "20": [175, 178, 180, 777, 851], "variat": [175, 180, 377, 385, 418, 451, 454], "inputkeyit": 176, "inputvalueit": 176, "outputvalueit": 176, "iterator_trait": [176, 179, 565, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 815], "value_typ": [176, 179, 557, 565, 588, 590, 591, 592, 596, 598, 599, 600, 601, 605, 611, 612, 613, 614, 620, 622, 624, 625, 626, 627, 628, 634, 636, 638, 639, 640, 641, 642, 648, 650, 652, 653, 654, 655, 658, 661, 662, 663, 667, 669, 670, 671, 677, 679, 681, 682, 684, 685, 686, 694, 696, 697, 699, 700, 708, 710, 711, 713, 714, 722, 724, 725, 727, 728, 736, 738, 739, 740, 741, 742, 743, 750, 794, 796, 798, 815, 826, 859, 866], "binarypr": 176, "equal_to": [176, 180, 682, 685, 697, 700, 711, 714, 725, 728], "binaryop": 176, "plu": [176, 275, 480, 532, 553, 561], "exclusive_scan_by_seg": 176, "keys_first": 176, "keys_last": 176, "values_first": 176, "values_result": 176, "initial_valu": 176, "binary_pr": 176, "scan": [176, 573, 821, 823], "predic": [176, 654, 684, 692, 699, 706, 713, 720, 727, 734], "binarypredc": 176, "inclusive_scan_by_seg": 176, "outputkeyit": 176, "reduce_by_seg": 176, "keys_result": 176, "inputit1": 176, "inputit2": 176, "outputit": 176, "inputit": 176, "binary_search": 176, "value_first": 176, "value_last": 176, "outputiter": 176, "comp": [176, 180, 574, 611, 612, 625, 626, 627, 639, 640, 641, 669, 670], "lower_bound": [176, 611, 626, 640, 669], "lowest": 176, "upper_bound": [176, 611, 626, 640, 669], "unaryop": 176, "unarypred": 176, "transform_if": 176, "pred": [176, 180], "binarypred": [176, 682, 697, 711, 725], "start1": 176, "end1": 176, "start2": 176, "past": [176, 810, 812], "keyit": 176, "valueit": 176, "sort_by_kei": 176, "unstabl": [176, 295], "valueswapp": [176, 574], "stable_sort_by_kei": 176, "valuetyp": 176, "histogram": 176, "exec": 176, "num_interv": 176, "first_interval_begin": 176, "last_interval_end": 176, "histogram_first": 176, "boundary_start": 176, "boundary_end": 176, "bin": 176, "silent": 176, "suffici": [176, 256, 257, 260, 261, 577], "evenli": [176, 824], "bin_siz": 176, "truncat": [176, 521, 771], "allocatort": 177, "tagt": 177, "read_writ": 177, "no_init": 177, "helper": [177, 458, 752, 843], "dpcpp_default": [177, 178], "value_index": 177, "derefer": [177, 179], "deduct": [177, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739], "overridden": [177, 852], "buf_begin": 177, "write_onli": 177, "buf_end_1": 177, "42": [177, 344], "ok": 177, "buf_end_2": 177, "sequenced_polici": 178, "parallel_polici": 178, "parallel_unsequenced_polici": 178, "unsequenced_polici": 178, "seq": 178, "par": 178, "par_unseq": 178, "unseq": 178, "is_execution_polici": 178, "false_typ": 178, "kernelnam": 178, "newkernelnam": 178, "oldkernelnam": 178, "kernel_nam": 178, "othernam": 178, "movement": [178, 183], "resolut": [178, 592, 601, 603, 604, 605, 613, 616, 622, 624, 628, 630, 636, 638, 642, 644, 652, 655, 663, 671, 673, 681, 685, 689, 694, 696, 700, 703, 708, 710, 714, 717, 724, 728, 731, 738, 740, 741, 742, 861, 869], "is_execution_policy_v": [178, 180], "deprec": [178, 258, 261, 263, 751, 842], "true_typ": [178, 794, 796, 798], "strip": 178, "cv": 178, "decay_t": [178, 762, 767, 769, 785], "adaptingiteratorsourc": 179, "permutation_iter": 179, "transform_iter": 179, "counting_iter": 179, "discard_iter": 179, "zip_iter": 179, "difference_typ": [179, 590, 598, 611, 626, 640, 653, 669, 682, 697, 711, 725, 739, 826, 859, 866], "counter": [179, 348, 361, 372, 374, 402, 771], "dereferenc": [179, 461, 574, 624, 638, 652, 681, 696, 710, 724, 738], "rvalu": [179, 815], "ptrdiff_t": 179, "lvalu": [179, 815], "discard": [179, 753, 754, 758, 761, 762, 766, 771, 774, 786, 832], "sourceiter": 179, "indexmap": 179, "input1": 179, "input2": 179, "make_permutation_iter": 179, "unaryfunc": [179, 858, 859, 860], "invoke_result": 179, "remove_refer": 179, "unary_func": 179, "make_transform_iter": 179, "make_sign": 179, "tupl": [179, 258, 557, 614, 686, 756, 766, 769, 770, 773, 774, 786, 788], "make_zip_iter": 179, "newer": [180, 791], "earlier": [180, 358, 393, 573, 775, 821], "lookup": [180, 371, 590, 598, 605, 611, 622, 626, 636, 640, 650, 653, 661, 669, 679, 682, 694, 697, 708, 711, 722, 725, 736, 739, 794, 796, 798, 869], "predefin": [180, 181, 752, 753, 762, 774], "for_each": 180, "draft": 180, "26": 180, "all_of": 180, "executionpolici": 180, "random_access_rang": 180, "proj": 180, "indirect_unary_pred": 180, "iterator_t": 180, "remove_cvref_t": 180, "sized_rang": 180, "pol": 180, "any_of": 180, "none_of": 180, "indirectly_unary_invoc": 180, "fn": 180, "borrowed_iterator_t": 180, "projected_value_t": 180, "indirect_binary_pred": 180, "range_difference_t": 180, "count_if": 180, "find_if": 180, "find_if_not": 180, "adjacent_find": 180, "min_el": 180, "indirect_strict_weak_ord": 180, "max_el": 180, "r1": 180, "r2": 180, "proj1": 180, "proj2": 180, "indirectly_compar": 180, "borrowed_subrange_t": 180, "search_n": 180, "sortabl": [180, 810], "stable_sort": 180, "is_sort": 180, "outr": 180, "mergeabl": 180, "merge_result": 180, "indirectly_copy": 180, "copy_result": 180, "copy_if": 180, "copy_if_result": 180, "copy_construct": 180, "indirectly_writ": 180, "indirect_result_t": 180, "unary_transform_result": 180, "unary_op": 180, "binary_transform_result": 180, "linear_congruential_engin": 181, "subtract_with_carry_engin": 181, "adaptor": [181, 866], "discard_block_engin": 181, "minstd_rand0": 181, "minstd_rand": 181, "ranlux24_bas": 181, "ranlux48_bas": 181, "ranlux24": 181, "ranlux48": 181, "uniform_int_distribut": 181, "uniform_real_distribut": 181, "normal_distribut": 181, "exponential_distribut": 181, "bernoulli_distribut": 181, "geometric_distribut": 181, "weibull_distribuion": 181, "lognormal_distribut": 181, "cauchy_distribut": 181, "extreme_value_distribut": 181, "deviat": [181, 354, 357, 384, 390, 392], "random_devic": 181, "seed_seq": 181, "vec": [181, 287, 288, 289, 290, 320, 321, 322, 323, 355, 358, 359, 360, 361, 367, 592, 655, 663], "result_typ": [181, 349, 350, 351, 352, 353, 354, 355, 357, 362, 364, 365, 366, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 412, 413], "scalar_typ": 181, "element_typ": 181, "seed": [181, 358, 359, 360, 361, 367, 374, 391, 393, 394, 395, 396, 397, 402, 405, 407, 408, 414, 415, 418], "meet": [181, 358, 360, 393, 395, 487, 495, 512, 539, 549, 556, 557, 558, 559, 560, 561, 563, 565, 566, 567, 569, 572, 573, 574, 589, 590, 591, 592, 593, 596, 598, 600, 601, 603, 605, 608, 611, 612, 613, 614, 615, 621, 622, 626, 627, 628, 629, 635, 636, 640, 641, 642, 643, 649, 650, 653, 654, 655, 658, 661, 662, 663, 664, 667, 669, 670, 671, 672, 678, 679, 682, 683, 684, 685, 686, 688, 693, 694, 697, 698, 699, 700, 702, 707, 708, 711, 712, 713, 714, 716, 721, 722, 725, 726, 727, 728, 730, 735, 736, 739, 740, 741, 742, 744, 748, 753, 755, 756, 758, 762, 766, 767, 769, 771, 774, 777, 779, 780, 785, 787, 788, 792, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 848, 851, 853, 854, 858, 860, 866], "minstd_rand0_vec": 181, "uint_fast32_t": 181, "16807": 181, "2147483647": 181, "minstd_rand_vec": 181, "48271": 181, "ranlux24_base_vec": 181, "ranlux48_base_vec": 181, "uint_fast64_t": 181, "48": 181, "12": [181, 231, 232, 344, 360, 395, 397], "ranlux24_vec": 181, "223": 181, "ranlux48_vec": 181, "389": 181, "invoc": [181, 753, 763, 778, 851, 852], "10000th": 181, "1043618065": 181, "399268537": 181, "7937952": 181, "61839128582725": 181, "9901578": 181, "1112339016": 181, "item": [182, 563, 565, 568, 570, 590, 596, 599, 605, 614, 622, 636, 650, 653, 661, 679, 686, 694, 708, 722, 736, 755, 767, 771, 777, 779, 780, 785, 788, 794, 810, 813, 815, 826, 832, 844], "human": 182, "p1673": 182, "broader": 182, "technic": 182, "advisori": 182, "board": 182, "valuabl": 182, "feedback": [182, 372, 396, 405, 872], "thank": 182, "therein": 183, "great": 183, "nonessenti": 183, "enqueu": [183, 256, 257, 261, 262, 847, 851, 853], "standalon": 183, "aid": 183, "rng": [183, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 372, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "dft": [183, 256, 257, 258, 259, 260, 261, 264], "setup": 183, "subdevic": 183, "facilit": [183, 799], "likewis": [183, 261, 756, 793], "manual": [183, 260, 391], "launch": [183, 461, 760], "antidepend": 183, "reserv": [183, 682, 687, 697, 701, 711, 715, 725, 729, 739, 755, 761, 770, 777, 779, 780, 785, 788, 793, 841, 851], "deadlock": [183, 566], "link": [183, 755, 779, 780], "in_ev": 183, "consumpt": [183, 260], "paradigm": 183, "elegantli": 183, "burden": 183, "correspondingli": 183, "prerequisit": 183, "secondari": 183, "fourier": [183, 256, 257, 261, 263, 555], "vm": [183, 264, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552], "trigonometr": [183, 264, 485, 486, 536, 537, 538, 545, 546, 553], "act": [183, 795, 848, 859], "constitut": [183, 775], "breadth": 183, "permit": [183, 577, 587, 590, 653, 661, 763, 810, 852, 867], "live": 183, "easili": [183, 871], "intn_t": 183, "uintn_t": 183, "basi": [183, 298, 299, 332, 333, 381], "2020": 183, "fortran": [183, 344, 554], "interchang": [183, 275, 276, 293, 326], "conjug": [183, 189, 190, 197, 207, 227, 244, 245, 246, 262, 483, 523, 553], "tran": [183, 199, 204, 205, 214, 215, 221, 222, 224, 225, 226, 227, 228, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 283, 284, 285, 286, 304, 305, 306, 307, 308, 309, 328, 329, 338, 339, 340, 341, 342, 343, 434, 435, 436, 461], "conjtran": [183, 214, 215, 221, 224, 225, 226, 227, 244, 245, 246, 283, 284, 285, 286, 328, 329, 338, 339, 340, 341, 342, 343, 434, 435, 436], "hermitian": [183, 190, 191, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 287, 289, 291, 293, 295, 310, 311, 314, 316, 317, 336, 342, 433], "uplo": [183, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 342, 343, 344, 433], "triangl": [183, 203, 210, 214, 215, 240, 244, 245, 246, 271, 289, 291, 314, 315, 316, 317, 318, 319, 322, 324, 344, 347, 371], "triangular": [183, 190, 191, 192, 203, 209, 211, 212, 213, 216, 217, 218, 233, 236, 237, 238, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 271, 275, 276, 287, 288, 289, 290, 291, 292, 293, 294, 295, 310, 311, 312, 313, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 344, 432, 433, 435, 436, 437], "diag": [183, 195, 247, 248, 249, 250, 251, 252, 253, 254, 255, 328, 329, 433, 435, 436], "diagon": [183, 195, 199, 209, 212, 213, 215, 216, 217, 218, 232, 233, 247, 248, 251, 253, 254, 265, 267, 268, 273, 275, 276, 283, 284, 287, 289, 291, 293, 314, 316, 317, 320, 322, 324, 326, 328, 329, 344, 385, 405, 433, 435], "nonunit": [183, 328, 329, 433, 436], "c_offset": [183, 202], "index_bas": [183, 219, 220, 421, 422, 428, 429], "nonzero": [183, 504], "tradition": 183, "col_major": [183, 443], "uniniti": [183, 261, 421, 422, 423, 424, 428, 429, 430, 431, 432, 434, 435, 436], "computation_error": [183, 265, 267, 271, 273, 275, 279, 283, 287, 289, 291, 293, 296, 298, 302, 304, 306, 308, 310, 314, 316, 320, 322, 324, 326, 328, 330, 332, 336, 338, 340, 342, 434, 435, 436], "batch_error": [183, 268, 276, 280, 284, 299, 311, 317, 333], "familiar": 183, "catch": [183, 584, 850], "subroutin": 183, "inconsist": [183, 256, 257, 261], "issu": [183, 566, 872], "experienc": 183, "onemkl_blas_spec_vers": 183, "onemkl_lapack_spec_vers": 183, "onemkl_spblas_spec_vers": 183, "onemkl_dft_spec_vers": 183, "onemkl_rng_spec_vers": 183, "onemkl_stats_spec_vers": 183, "onemkl_vm_spec_vers": 183, "digit": [183, 586], "reflect": 183, "000": 183, "101": 183, "102": 183, "103": [183, 372, 405], "uxlfound": 183, "verif": 183, "imaginari": [184, 212, 213, 215, 216, 217, 218, 256, 257, 258, 259, 262, 263, 466, 487, 490, 495, 522, 526, 539, 541, 544], "im": [184, 219, 220, 462, 463, 464, 466, 467, 469, 474, 487, 495, 514, 515, 522, 526, 539, 541, 544], "tre": [184, 196, 223], "incx": [184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 211, 212, 213, 216, 217, 218, 219, 220, 223, 229, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 252, 255, 344, 461], "topic": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554], "leftarrow": [185, 186, 193, 199, 200, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 226, 227, 229, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 253, 434, 435, 436], "inci": [185, 186, 187, 193, 194, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 211, 213, 216, 218, 229, 231, 233, 235, 236, 238, 239, 241, 243, 461], "value_or_point": [185, 186, 187, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 251, 253, 254, 461], "axpi": [187, 189], "batch_siz": [187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334], "stridex": [187, 194, 195, 205], "stridei": [187, 194, 205], "group_count": [187, 194, 195, 201, 205, 222, 225, 228, 246, 254, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334], "_batch": [187, 194, 195, 201, 205, 222, 225, 228, 246, 254], "_count": [187, 194, 195, 201, 205, 222, 225, 228, 246, 254], "total_batch_count": [187, 194, 195, 201, 205, 222, 225, 228, 246, 254], "subprogram": 188, "level1": 188, "level2": 188, "level3": 188, "asum": 189, "sdsdot": 189, "dotc": 189, "dotu": 189, "unconjug": [189, 190, 208], "nrm2": 189, "rot": 189, "plane": [189, 229, 231], "rotat": [189, 229, 230, 231, 232], "rotg": 189, "rotm": 189, "rotmg": 189, "scal": 189, "iamax": 189, "iamin": 189, "gbmv": 190, "gemv": [190, 205, 461], "ger": 190, "gerc": 190, "geru": 190, "hbmv": 190, "hemv": 190, "her": 190, "her2": 190, "hpmv": 190, "hpr": 190, "hpr2": 190, "sbmv": 190, "spmv": [190, 437], "spr": [190, 238], "spr2": 190, "symv": 190, "syr": 190, "syr2": 190, "tbmv": 190, "tbsv": 190, "solut": [190, 248, 250, 253, 254, 255, 283, 284, 295, 316, 317, 328, 871], "tpmv": 190, "tpsv": 190, "trmv": 190, "trsv": 190, "hemm": 191, "herk": 191, "her2k": 191, "2k": [191, 214, 244], "symm": 191, "syrk": [191, 246], "syr2k": 191, "trmm": 191, "trsm": [191, 254], "axpy_batch": 192, "gemm_batch": 192, "trsm_batch": 192, "gemmt": 192, "gemm_bia": 192, "imatcopi": [192, 222], "omatcopi": [192, 228], "omatcopy2": 192, "omatadd": [192, 225], "imatcopy_batch": 192, "omatcopy_batch": [192, 225], "omatadd_batch": [192, 228], "dgmm": 195, "stridea": [195, 201, 205, 225, 227, 228, 246, 254], "stridec": [195, 201, 225, 246], "left_right": [195, 210, 240, 251, 253, 254], "mxn": 195, "a_arrai": [195, 225, 228], "c_arrai": [195, 225], "x_arrai": 195, "x_iy_i": [196, 198, 235], "kl": [199, 344], "ku": [199, 344], "super": [199, 209, 233, 247, 248, 265, 344], "ta": [200, 201, 202], "tb": [200, 201, 202], "tc": [200, 201, 229, 230, 304, 306, 308], "int8_t": [200, 201, 202, 349], "value_or_poitn": 200, "strideb": [201, 225, 227, 228, 254], "bias": 202, "scriptstyl": [202, 344], "_offset": 202, "a_offset": 202, "ao": 202, "b_offset": 202, "bo": 202, "uint8_t": [202, 349, 434, 435, 436], "offset_typ": 202, "upper_low": [203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 233, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 308, 309, 310, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 342, 343, 344], "treal": [212, 214, 215, 217], "conjg": [213, 214, 218], "nan": [219, 220, 295, 463, 464, 467, 469, 474, 487, 495, 498, 502, 503, 504, 514, 515, 519, 520, 529, 531, 539, 541, 543, 547], "smallest": [220, 258], "matrix_in_out": 221, "ld_in": [221, 222], "ld_out": [221, 222], "seri": [222, 225, 228, 568], "awai": [222, 225, 227, 228, 533, 763], "matrix_array_in_out": 222, "trans_arrai": [222, 228], "m_arrai": [222, 225, 228], "n_arrai": [222, 225, 228], "alpha_arrai": [222, 225, 228], "ld_in_arrai": 222, "ld_out_arrai": 222, "groupsiz": [222, 225, 228], "stride_a": [225, 228, 246, 268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334], "stride_b": [225, 228, 284, 285, 317, 318], "stride_c": [225, 246], "b_arrai": [225, 228], "transa_arrai": 225, "transb_arrai": 225, "lda_arrai": [225, 228], "beta_arrai": 225, "ldb_arrai": [225, 228], "ldc_arrai": 225, "lapack": [227, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "adjac": 227, "phantom": 229, "conj": [229, 259, 463, 464, 469, 474, 487, 539, 541, 543, 547, 553], "cartesian": [230, 232, 557, 558, 559], "unitari": [230, 265, 271, 273, 287, 291, 295, 299, 304, 306, 324, 330, 332, 333, 336, 338, 340, 342], "bmatrix": [230, 231, 232, 344], "switch": [231, 232, 371, 775, 848], "21": [231, 232, 344, 360, 395, 513], "22": [231, 232, 344, 360, 395, 488, 540], "yparam": 231, "x1": [232, 347, 466, 490, 522, 541, 544], "y1": [232, 466, 490, 522, 541, 544], "d1": 232, "d2": 232, "sb": 235, "incxi": 235, "unit_nonunit": [247, 248, 249, 250, 252, 255], "unit_diag": [251, 253, 254, 328, 329], "specific": [251, 253], "untouch": 253, "commit": [256, 257, 258, 259, 260, 262, 263], "prepend": [256, 257, 258, 259, 260, 261, 263], "concis": [256, 257, 258, 259, 260, 261, 262, 263, 810], "protect": [256, 257, 625, 639, 799, 806, 807, 836, 844], "friend": [256, 257, 261], "config_valu": [256, 257, 258, 259, 260, 261, 262], "real_real": [256, 257, 258, 259, 263], "config_param": [256, 257, 258, 259, 260, 261, 262], "complex_storag": [256, 257, 258, 259, 261, 263], "descriptor_typ": [256, 257], "inout": [256, 257], "inout_r": [256, 257], "inout_im": [256, 257], "input_typ": [256, 257, 753, 754, 758, 774], "output_typ": [256, 257, 753, 754, 758, 766, 769, 785], "in_r": [256, 257], "in_im": [256, 257], "out_r": [256, 257], "out_im": [256, 257], "capac": [256, 257, 557, 558, 559, 560, 590, 591, 598, 611, 626, 640, 653, 654, 669, 682, 697, 711, 725, 739, 750, 859], "commit_statu": [256, 257, 261, 263], "fwd_stride": [258, 259, 261, 263], "resp": [258, 259, 261, 262, 263], "bwd_stride": [258, 259, 261, 263], "number_of_transform": [258, 259, 261, 263], "fwd_distanc": [258, 259, 261, 263], "bwd_distanc": [258, 259, 261, 263], "superscript": 258, "fwd": 258, "bwd": 258, "k_1": [258, 259, 262, 263, 361, 402], "k_2": [258, 259, 262, 263], "k_d": [258, 259, 262, 263], "k_": [258, 262, 374, 377, 398, 399], "thereof": [258, 262, 296, 330], "xwd": 258, "_2": 258, "_d": 258, "_j": 258, "foral": [258, 261, 262], "lbrace": [258, 261, 262, 263], "rbrace": [258, 261, 262, 263], "elementari": [258, 259, 265, 267, 268, 271, 291, 296, 298, 299, 300, 301, 304, 305, 306, 307, 324, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343], "consequ": [258, 261], "complex_complex": [258, 259, 263], "unbatch": 258, "break": 258, "displac": [258, 350, 352, 353, 357, 376, 379, 382, 383, 388, 392, 406, 413], "_k": 258, "consider": [258, 262, 555], "inplac": [258, 259, 263], "placement": [258, 259, 261, 263], "abid": 258, "input_strid": [258, 261, 263], "output_strid": [258, 261, 263], "caus": [258, 295, 482, 489, 507, 534, 558, 559, 560, 586, 739, 824, 847, 849], "trigger": [258, 261, 758, 848], "attempt": [258, 577, 605, 622, 679, 694, 736, 761, 767, 769, 770, 794, 802, 808, 809, 836, 837], "revers": [258, 573, 744], "set_valu": [258, 259, 260, 262], "fwd_domain_strid": 258, "bwd_domain_strid": 258, "compute_forward": [258, 259, 261, 262], "compute_backward": [258, 261, 262], "warn": [258, 261, 295, 482, 489, 507, 534], "messag": [258, 583, 753, 754, 755, 757, 760, 761, 762, 763, 766, 767, 769, 770, 771, 772, 774, 779, 780, 781, 782, 784, 785, 786, 787, 788, 833, 835, 843], "IN": 258, "put_strid": 258, "wd_stride": 258, "eq": 259, "not_inplac": [259, 263], "snippet": 259, "n_1": [259, 261, 262, 263, 400, 409], "n_2": [259, 262], "n_3": 259, "n1": [259, 344], "n2": [259, 344], "n3": [259, 344], "dist": 259, "k1": [259, 589, 827], "k2": [259, 589, 827], "k3": 259, "ev": 259, "upon": [259, 425, 426, 427, 434, 435, 436, 588, 851], "zr": 259, "zi": 259, "decltyp": [259, 815, 851, 853], "fwd_dist": 259, "bwd_dist": 259, "complex_data": 259, "whilst": [260, 261], "workspace_automat": [260, 263], "workspace_plac": [260, 261, 263], "workspace_extern": [260, 261, 263], "malloc": [260, 461, 796, 798], "set_workspac": [260, 262, 263], "uncommit": [260, 263], "dom": [260, 261, 262, 263], "myqueu": 260, "workspacebyt": 260, "get_valu": [260, 262], "workspace_external_byt": [260, 261, 263], "workspaceusm": [260, 261], "prec": [261, 262, 263], "real_scalar_t": 261, "conditional_t": 261, "enable_if_t": 261, "is_integral_v": 261, "is_floating_point_v": 261, "value_ptr": 261, "workspacebuf": 261, "fp64": [261, 262, 263], "n_d": [261, 262, 263], "equip": [261, 262], "thereaft": 261, "n_j": [261, 262], "insuffici": [261, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342], "larger": [261, 500, 502, 519, 553, 577, 579, 775, 791], "forward_scal": [261, 263], "backward_scal": [261, 263], "redirect": 261, "variad": [261, 557], "writabl": [261, 262, 263], "promot": 261, "emit": 261, "forward_domain": [261, 263], "config": 261, "queryabl": 261, "aforement": 261, "tune": [261, 871], "twiddl": 261, "again": [261, 561, 574], "lack": 261, "finit": [262, 418, 466, 487, 490, 495, 504, 522, 525, 526, 531, 539, 541, 544, 858, 859, 861], "ell": 262, "wherein": 262, "sigma_": [262, 263], "displaystyl": 262, "j_d": 262, "j_2": 262, "j_1": 262, "imath": 262, "j_": 262, "unambigu": 262, "inde": 262, "pmod": 262, "symmetri": 262, "roughli": 262, "redund": 262, "k_j": [262, 374], "lbrace1": 262, "constrain": [262, 557], "deliv": [262, 263], "hotpath": 262, "pertain": 262, "meant": 263, "fft": 263, "scratch": 263, "sparsiti": 264, "unmodifi": 264, "pseudorandom": [264, 345, 348, 351, 358, 359, 360, 361, 372, 374, 378, 393, 394, 395, 396, 397, 402, 405, 407, 414], "quasi": [264, 345, 372, 400, 409], "qbp": 265, "pmatrix": 265, "b_1": 265, "q_1b_1p_h": 265, "q_": 265, "q_1b_1p_1": 265, "reflector": [265, 267, 268, 271, 291, 296, 298, 299, 300, 301, 304, 305, 306, 307, 324, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343], "orgbr": [265, 295, 297], "ungbr": [265, 295, 331], "realt": [265, 273, 287, 289, 291], "tauq": [265, 296, 330], "taup": [265, 296, 330], "scratchpad_s": [265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 297, 298, 299, 302, 304, 305, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 331, 332, 333, 336, 338, 339, 340, 342], "gebrd_scratchpad_s": [265, 295], "superdiagon": [265, 273, 291, 324], "subdiagon": [265, 271, 291, 324], "off": [265, 287, 289, 291, 320, 322, 324, 553, 583, 775, 793], "had": [265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 753, 758, 762, 767, 769, 771, 774, 786], "gebrd": [266, 295, 296, 297, 330, 331], "wrong": [266, 269, 270, 272, 274, 277, 278, 281, 282, 285, 286, 288, 290, 292, 294, 297, 300, 301, 303, 305, 307, 309, 312, 313, 315, 318, 319, 321, 323, 325, 327, 329, 331, 334, 335, 337, 339, 341, 343], "qr": [267, 268, 287, 295, 298, 299, 304, 320, 332, 333, 338], "pivot": [267, 268, 271, 275, 276, 293, 326], "tau": [267, 268, 269, 271, 291, 296, 298, 299, 300, 302, 304, 306, 308, 324, 330, 332, 333, 334, 336, 338, 340, 342], "geqrf_scratchpad_s": [267, 295], "trapezoid": [267, 268, 271, 275, 276, 371], "stride_tau": [268, 269, 299, 300, 333, 334], "a_i": [268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334, 480, 501, 505, 521, 550], "tau_i": [268, 269, 299, 300, 333, 334], "geqrf_batch_scratchpad_s": [268, 295], "r_i": [268, 374], "q_i": [268, 295, 299, 300, 333, 334], "q_ir_i": 268, "m_g": [268, 269, 276, 277, 299, 300, 333, 334], "n_g": [268, 269, 276, 277, 280, 281, 284, 285, 299, 300, 311, 312, 317, 318, 333, 334], "_g": [268, 277, 280, 281, 284, 285, 311, 312, 317, 318], "geqrf_batch": [269, 295, 299, 333], "lda_g": [269, 276], "geqrf": [270, 295, 298, 304, 332, 338], "rq": [271, 295, 304, 306, 338, 340], "gerqf_scratchpad_s": [271, 295], "subarrai": 271, "gerqf": [272, 295, 304, 306, 338, 340], "rectangular": [273, 295, 304, 306, 338, 340, 371], "svd": 273, "job": [273, 274, 287, 288, 289, 290, 320, 321, 322, 323], "jobu": [273, 274], "jobvt": [273, 274], "ldu": [273, 274], "vt": [273, 274], "ldvt": [273, 274], "allvec": [273, 274], "somevec": [273, 274], "overwritevec": [273, 274], "novec": [273, 274, 287, 288, 289, 290, 320, 321, 322, 323], "gesvd_scratchpad_s": [273, 295], "columnwis": 273, "rowwis": 273, "ne": 273, "referenc": [273, 290, 292, 310, 313, 321, 328, 329, 344, 756, 789, 848, 850], "bdsqr": 273, "did": [273, 287, 289, 320, 322], "converg": [273, 287, 289, 320, 322], "unconverg": 273, "ubv": 273, "gesvd": [274, 295], "lu": [275, 276, 279, 280, 283, 284, 295, 311, 317], "ipiv": [275, 276, 277, 279, 280, 281, 283, 284, 285, 293, 326], "getrf_scratchpad_s": [275, 295], "ii": [275, 293, 326], "p_il_iu_i": 276, "l_i": [276, 311, 317, 318], "stride_ipiv": [276, 277, 280, 281, 284, 285], "ipiv_i": [276, 281, 285], "getrf_batch_scratchpad_s": [276, 295], "getrf_batch": [277, 280, 284, 295], "getrf": [278, 279, 283, 295], "invers": [279, 280, 295, 314, 347, 371, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 475, 479, 491, 492, 493, 494, 509, 510, 511, 553], "getri_scratchpad_s": [279, 295], "getri_batch_scratchpad_s": [280, 295], "getri_batch": [281, 295], "getri": [282, 295], "hx": [283, 286, 328, 329], "nrh": [283, 284, 285, 286, 316, 317, 318, 319, 328, 329], "getrs_scratchpad_s": [283, 295], "a_ix_i": [284, 285, 317], "tx_i": [284, 285], "hx_i": [284, 285], "xi": 284, "getrs_batch_scratchpad_s": [284, 295], "trans_g": 284, "onemkl_lapack_getrf_batch_usm": 284, "getrs_batch": [285, 295], "a_ihx_i": 285, "nrhsg": 285, "getr": [286, 295], "z_": [287, 320, 414, 573], "az_i": 287, "z_i": [287, 320, 521], "pal": [287, 320], "walker": [287, 320], "ql": [287, 320], "jobz": [287, 288, 289, 290, 320, 321, 322, 323], "butter": 287, "heevd_scratchpad_s": [287, 295], "ascend": [287, 289, 320, 322, 432], "tridiagon": [287, 289, 291, 295, 302, 308, 320, 322, 324, 336, 342], "submatrix": [287, 289, 320, 322], "ly": [287, 289, 320, 322, 370], "mod": [287, 289, 320, 322, 345, 358, 359, 360, 374, 393, 394, 395, 405, 414], "heevd": [288, 295], "eigenproblem": [289, 295, 322], "bx": [289, 290, 322, 323], "abx": [289, 290, 322, 323], "bax": [289, 290, 322, 323], "ityp": [289, 290, 322, 323], "hegvd_scratchpad_s": [289, 295], "bz": [289, 322], "choleski": [289, 295, 310, 311, 314, 316, 317, 322], "ll": [289, 310, 316, 319, 322], "hegvd": [290, 295], "chetrd": 291, "zhetrd": 291, "qtq": [291, 302, 308, 324, 336, 342], "hetrd_scratchpad_s": [291, 295], "hetrd": [292, 295, 336, 337, 342, 343], "kaufman": [293, 295, 326], "udu": [293, 294, 326, 327], "ldl": [293, 294, 326, 327], "int_64": [293, 326], "hetrf_scratchpad_s": [293, 295], "hetrf": [294, 295], "packag": [295, 756, 871], "invert": [295, 553], "orgqr": [295, 301], "orgqr_scratchpad_s": [295, 298], "ormqr": [295, 305], "ormqr_scratchpad_s": [295, 304], "ormrq": [295, 307], "ormrq_scratchpad_s": [295, 306], "potrf": [295, 313, 314, 316], "potrf_scratchpad_s": [295, 310], "potri": [295, 315], "potri_scratchpad_s": [295, 314], "potr": [295, 319], "potrs_scratchpad_s": [295, 316], "sytrf": [295, 327], "sytrf_scratchpad_s": [295, 326], "trtr": [295, 329], "trtrs_scratchpad_s": [295, 328], "ungqr": [295, 335], "ungqr_scratchpad_s": [295, 332], "unmqr": [295, 339], "unmqr_scratchpad_s": [295, 338], "unmrq": [295, 341], "unmrq_scratchpad_s": [295, 340], "orgbr_scratchpad_s": [295, 296], "orgtr": [295, 303], "orgtr_scratchpad_s": [295, 302], "sytrd": [295, 302, 303, 308, 309, 325], "ormtr": [295, 309], "ormtr_scratchpad_s": [295, 308], "syevd": [295, 321], "syevd_scratchpad_s": [295, 320], "sygvd": [295, 323], "sygvd_scratchpad_s": [295, 322], "sytrd_scratchpad_s": [295, 324], "ungbr_scratchpad_s": [295, 330], "ungtr": [295, 337], "ungtr_scratchpad_s": [295, 336], "unmtr": [295, 343], "unmtr_scratchpad_s": [295, 342], "orgqr_batch": [295, 300], "orgqr_batch_scratchpad_s": [295, 299], "potrf_batch": [295, 312, 317], "potrf_batch_scratchpad_s": [295, 311], "potrs_batch": [295, 318], "potrs_batch_scratchpad_s": [295, 317], "ungqr_batch": [295, 334], "ungqr_batch_scratchpad_s": [295, 333], "754": [295, 476, 513, 541], "inf": [295, 482, 489, 507, 534], "unexpect": 295, "gen": [296, 297, 330, 331], "constraint": [296, 297, 330, 331, 790, 794, 851, 871], "orthonorm": [298, 299, 332, 333], "k_g": [299, 300, 333, 334], "kg": 300, "ai": [300, 504, 531], "qc": [304, 306, 308, 338, 340, 342], "cq": [304, 306, 308, 338, 340, 342], "onemkl_lapack_sytrd": 308, "tu_i": [311, 317, 318], "hu_i": [311, 317, 318], "l_il_i": [311, 317, 318], "ng": 312, "ldag": 312, "tu": 316, "hu": 316, "rhs_g": 318, "hh": [338, 340], "hc": [338, 340], "visual": [344, 871], "a_": [344, 360, 395, 396, 397, 414], "13": [344, 348, 359, 360, 372, 394, 395, 548, 560], "1n": 344, "2n": 344, "31": [344, 348, 358, 372, 393, 396, 397, 405], "33": 344, "3n": 344, "vdot": 344, "ddot": 344, "m1": [344, 685, 700], "m2": [344, 685, 700], "m3": 344, "mn": 344, "underbrac": 344, "smallmatrix": 344, "34": [344, 397], "35": 344, "43": 344, "53": [344, 513], "scriptscriptstyl": 344, "ldm": 344, "sequenti": [344, 372, 564, 572, 573, 752, 824, 858, 860], "bratley88": [345, 372, 409], "bratlei": [345, 400, 409], "fox": [345, 400, 409], "sobol": [345, 372], "quasirandom": 345, "vol": 345, "14": [345, 408, 560], "88": 345, "march": 345, "1988": 345, "bratley92": [345, 372, 400], "niederreit": [345, 372], "discrep": 345, "simul": [345, 372, 396, 397], "195": 345, "213": [345, 485, 536, 537, 545], "juli": 345, "1992": 345, "coddington94": [345, 372], "coddington": 345, "mont": [345, 372, 397], "carlo": [345, 372, 397], "phy": 345, "547": 345, "1994": 345, "ecuyer99": [345, 348, 358, 372, 393], "ecuy": 345, "pierr": 345, "congruenti": [345, 348, 358, 359, 372, 393, 394, 414], "good": [345, 358, 360, 393, 395], "lattic": 345, "68": 345, "225": 345, "249": [345, 405], "260": 345, "1999": 345, "ecuyer99a": [345, 348, 358, 360, 372, 395], "recurs": [345, 348, 360, 372, 395, 557, 558, 559, 560, 564, 566, 572, 578, 800, 803, 804, 806, 807, 808, 824, 836, 837], "research": 345, "47": 345, "159": 345, "164": 345, "kirkpatrick81": [345, 372, 405], "kirkpatrick": 345, "stoll": 345, "journal": 345, "40": [345, 409], "517": 345, "526": 345, "1981": 345, "matsumoto98": [345, 372, 396, 397], "matsumoto": 345, "nishimura": 345, "mersenn": [345, 372, 396, 397, 407], "twister": [345, 372, 396, 397, 407], "623": [345, 396], "equidistribut": [345, 396], "30": [345, 371, 396, 397], "januari": 345, "1998": 345, "matsumoto00": [345, 372, 397], "56": 345, "69": [345, 397], "ed": 345, "spanier": 345, "2000": 345, "http": 345, "www": 345, "hiroshima": 345, "ac": 345, "jp": 345, "7em": 345, "mat": 345, "mt": 345, "dc": 345, "html": 345, "nag": [345, 348, 359, 372, 394, 414], "uk": 345, "numerical_librari": 345, "asp": 345, "saito08": [345, 372, 407], "saito": 345, "128": [345, 348, 360, 361, 372, 374, 402, 407], "2006": 345, "607": 345, "622": 345, "2008": [345, 476, 513], "articl": 345, "earticl": 345, "salmon11": [345, 348, 361, 372, 374, 402], "salmon": 345, "john": 345, "moral": 345, "dror": 345, "ron": 345, "shaw": 345, "david": 345, "easi": [345, 572], "sc": 345, "2011": 345, "sobol76": [345, 372], "levitan": 345, "yu": 345, "uniformli": [345, 346, 347, 364, 365, 366, 370, 371, 410, 411, 412, 579], "cube": [345, 371, 477, 510, 527, 528, 553, 763, 773], "preprint": 345, "institut": 345, "ussr": 345, "academi": 345, "1976": 345, "russian": 345, "mt2203": [345, 372, 396], "mt2002": 345, "emt19937ar": 345, "fip": [345, 374], "197": [345, 374], "feder": 345, "encrypt": [345, 374], "ae": [345, 372, 374], "brng": [346, 347, 351, 361, 370, 374, 402], "gaussian": [346, 347, 368, 370, 371, 415, 416], "lognorm": [346, 347, 370, 371], "uniform_bit": [346, 370], "poisson": [346, 347, 370, 371, 404], "bernoulli": [346, 347, 370, 371, 377], "uniform_method": [347, 365, 366, 371, 410, 411], "gaussian_method": [347, 354, 371, 384], "box_muller2": [347, 354, 357, 371, 384, 385, 392], "x2": [347, 466, 490, 522, 541, 544], "u1": 347, "u2": 347, "u_1": [347, 371], "sin": [347, 371, 487, 538, 539, 540, 541, 553], "u_2": [347, 371], "exponential_method": [347, 352, 370, 371, 382], "icdf": [347, 349, 352, 371, 375, 379, 382, 384, 385, 387, 388, 390, 392, 406, 413], "icdf_accur": [347, 352, 370, 371, 382, 392, 406, 413], "cumul": [347, 349, 350, 352, 353, 354, 357, 362, 365, 366, 371, 375, 376, 377, 379, 380, 382, 383, 384, 387, 388, 389, 390, 392, 399, 403, 404, 406, 410, 411, 413, 478, 479, 491, 492, 494, 553], "lognormal_method": [347, 357, 370, 371, 392], "bernoulli_method": [347, 349, 371, 375], "poisson_method": [347, 362, 371, 403], "devroy": [347, 362], "27": [347, 371], "parallelogram": [347, 371], "tail": [347, 371, 760], "mrg32k3a": [348, 351, 372, 408], "philox4x32x10": [348, 351, 364, 367, 372, 415], "philox4x32": [348, 361, 372], "period": [348, 358, 359, 360, 372, 393, 394, 395, 396, 407, 793, 845], "mcg31m1": [348, 351, 372, 391, 408], "mcg": [348, 358, 359, 372, 393], "1132489760": [348, 358, 372, 393], "mcg59": [348, 351, 364, 372], "59": [348, 359, 372, 394], "trial": [349, 375, 377, 387, 389, 398], "f_p": 349, "inttyp": [349, 362, 375, 377, 387, 389, 398, 399, 403, 404], "method_typ": [349, 350, 352, 353, 354, 357, 362, 365, 366, 375, 376, 377, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 398, 399, 403, 404, 406, 410, 411, 413], "int16_t": 349, "uint16_t": 349, "uint32_t": [349, 351, 358, 359, 360, 361, 362, 364, 366, 375, 378, 385, 387, 389, 393, 395, 396, 397, 398, 399, 400, 405, 407, 409, 412, 414], "rcl": [350, 353, 375, 376, 377, 380, 382, 383, 387, 389, 390, 392, 399, 403, 404, 406, 410, 411, 413], "dy": [350, 353, 354, 376, 380, 383, 384], "realtyp": [350, 352, 353, 354, 357, 365, 376, 379, 380, 382, 383, 384, 385, 388, 390, 392, 406, 410, 413], "count_rejected_numb": [350, 353], "uinttyp": [351, 364, 378, 412], "scalefactor": [352, 357, 376, 379, 382, 388, 390, 392, 406, 413], "densiti": [352, 354, 357, 365, 385], "x_a": [353, 383], "stddev": [354, 384], "int_": [354, 478], "phi": [354, 357, 392, 491, 492, 494], "distr": [355, 367, 386, 415], "vec_siz": [355, 358, 359, 360, 361, 367], "subject": [357, 392, 872], "displ": [357, 392], "possess": [358, 393, 405], "ax_": [358, 359, 393, 394], "u_n": [358, 359, 360, 361, 374, 393, 394, 395, 400, 402, 405, 407, 409, 414], "vecsiz": [358, 359, 360, 361], "default_se": [358, 359, 360, 361, 374, 393, 394, 395, 396, 397, 402, 405, 407, 414], "0x7fffffff": [358, 393, 396], "57": [359, 394], "approx": [360, 395], "191": [360, 395], "m_": [360, 395, 414], "y_": [360, 395, 396, 397, 414, 573], "m_2": [360, 395, 414], "z_n": [360, 395, 414], "m_1": [360, 395, 414], "1403580": [360, 395], "810728": [360, 395], "209": [360, 395], "527612": [360, 395], "1370589": [360, 395], "22853": [360, 395], "initializer_list": [360, 361, 363, 374, 395, 396, 397, 402, 407, 408, 414, 590, 591, 598, 600, 601, 605, 611, 612, 613, 622, 626, 627, 628, 636, 640, 641, 642, 650, 653, 654, 655, 661, 662, 669, 670, 671, 679, 682, 684, 685, 694, 697, 699, 700, 708, 711, 713, 714, 722, 725, 727, 728, 736, 739, 740, 741, 742], "geqslant": [360, 395, 405, 414], "prove": [360, 395], "num_to_skip": [360, 361, 363, 408], "k_0": [361, 374, 402], "c_n": [361, 374, 402], "omega_n": [361, 402], "l_1": [361, 402], "r_1": [361, 402], "l_0": [361, 402], "r_0": [361, 402], "96": [361, 402], "mullo": [361, 402], "0xd2511f53": [361, 402], "mulhi": [361, 402], "0xcd9e8d57": [361, 402], "oplu": [361, 374, 396, 397, 400, 402, 405, 407, 409], "0xbb67ae85": [361, 402], "0x9e3779b9": [361, 402], "r_": [361, 402, 407], "4n": [361, 402, 407], "quadrupl": [361, 402, 407], "r_n": [361, 374, 402, 407], "num": [363, 408], "_skip": [363, 408], "notin": [365, 410], "numeric_limit": [366, 411], "callabl": [368, 418, 848], "your": [368, 400, 409, 585, 789, 793, 852, 871, 872], "binomi": [368, 370, 371, 399, 416], "skip_ahead": [369, 415, 417], "laplac": 370, "weibul": [370, 371, 406], "cauchi": [370, 371], "rayleigh": [370, 371], "gumbel": [370, 371], "extrem": 370, "chi_squar": [370, 371], "chi": [370, 371, 380], "gaussian_mv": [370, 371], "multivari": [370, 385], "geometr": [370, 371], "hypergeometr": [370, 371], "poisson_v": [370, 371], "negative_binomi": [370, 371], "pascal": 370, "multinomi": [370, 371], "demand": [370, 857, 871], "irrespect": 370, "unform_method": 370, "weibull_method": [370, 371, 413], "rayleigh_method": [370, 371, 406], "box_muller2_accur": [370, 371, 392], "gamma_method": [370, 371, 383], "marsaglia_accur": [370, 371, 383], "beta_method": [370, 371, 376], "cja_accur": [370, 371, 376], "standard_accur": 371, "box_mul": [371, 384, 385], "thru": 371, "2lnu_1": 371, "cauchy_method": [371, 379], "geometric_method": [371, 387], "gumbel_method": [371, 388], "marsaglia": [371, 383], "properli": 371, "cja": [371, 376], "cheng": 371, "jonhnk": 371, "atkinson": 371, "johnk": 371, "p2": 371, "852": 371, "956": 371, "chi_square_method": [371, 380], "gamma_bas": [371, 380], "odd": [371, 526, 548], "15": [371, 396, 397], "binomial_method": [371, 377], "btpe": [371, 377], "ntrial": [371, 377, 398], "ptpe": [371, 403], "gaussian_icdf_bas": [371, 403, 404], "cdf": 371, "poisson_v_method": [371, 404], "hypergeometric_method": [371, 389], "h2pe": [371, 389], "negative_binomial_method": [371, 399], "nbar": [371, 399], "multinomial_method": [371, 398], "poisson_icdf_bas": [371, 398], "gaussian_mv_method": [371, 385], "boxmul": 371, "boxmuller2": 371, "default_engin": 372, "231": [372, 393], "r250": 372, "gfsr": [372, 405], "250": [372, 405], "wichmann_hil": 372, "wichmann": [372, 414], "hill": [372, 414], "273": [372, 414], "19937": [372, 396, 407], "6024": [372, 397], "2203": 372, "mutual": [372, 398, 801, 802, 836, 839, 842], "sfmt19937": 372, "ars5": 372, "ni": 372, "nondeterminist": [372, 572], "leapfrog": [372, 415, 417], "1313": 372, "259": 372, "c_0": 374, "subbyt": 374, "shiftrow": 374, "mixcolumn": 374, "addroundkei": 374, "lo": 374, "0x9e3779b97f4a7c15": 374, "hi": 374, "0xbb67ae8584caa73b": 374, "truli": 378, "arctan": 379, "degre": [380, 486, 538, 824], "freedom": 380, "dxd": 385, "det": 385, "sequencecontainerorview": [385, 398, 404], "mdspan": [385, 398, 404], "dimen": [385, 400, 409], "distrtyp": 386, "enginetyp": [386, 391, 408], "lot": 389, "bigcup": 389, "unmark": [389, 770], "k_mc": 389, "s_l": 389, "laplace_method": 390, "particularli": 391, "engine_1": [391, 408], "engine_2": [391, 408], "engine_3": [391, 408], "twist": 396, "624": 396, "397": 396, "0x80000000": 396, "0x9d2c5680": 396, "0xefc60000": 396, "18": [396, 397], "a_j": [396, 397], "32x32": [396, 397], "ccccc": [396, 397], "0x9908b0df": 396, "0xffffffe0": 397, "0x1f": 397, "b_j": 397, "engine_idx": [397, 414], "outcom": 398, "x_k": 398, "theoret": [400, 405], "asymptot": 400, "318": 400, "irreduc": 400, "polynomi": 400, "v_c": [400, 409], "hypercub": [400, 409, 557], "default_dimensions_numb": [400, 409], "irred_polynomi": 400, "ke": [403, 404], "ampl": [405, 577], "foundat": [405, 872], "cryptograph": 405, "69069x_": 405, "7k": 405, "247": 405, "156": 407, "w_n": [407, 414], "w_0": [407, 414], "w_m": 407, "wb": 407, "wc": 407, "wd": 407, "0xbffffff6": 407, "0xdffaffff": 407, "0xddfecb7f": 407, "0xdfffffef": 407, "2nd": [408, 439, 440, 441, 442, 452, 453, 466, 472, 473, 484, 490, 500, 502, 503, 504, 508, 513, 519, 520, 522, 523, 525, 526, 529, 531, 544], "3rd": [408, 439, 440, 441, 442, 452, 453], "1st": [408, 466, 472, 473, 484, 490, 500, 502, 503, 504, 508, 511, 513, 518, 519, 520, 522, 523, 525, 526, 529, 530, 531, 543, 544], "direction_numb": 409, "372": 414, "112": 414, "prime": 414, "16718909": 414, "16776917": 414, "y_0": 414, "z_0": 414, "m_3": 414, "m_4": 414, "sycl_buff": 415, "usm_ptr": 415, "s_0": 418, "rightarrow": 418, "transit": 418, "symbol": [418, 586], "u_0": 418, "s_": 418, "prng": 418, "imit": 418, "dense_vector_handl": 419, "dense_vector_handle_t": [419, 424, 426, 431, 435, 436], "init_dense_vector": [419, 426, 431], "set_dense_vector_data": [419, 424], "release_dense_vector": [419, 424, 431], "dense_matrix_handl": 419, "dense_matrix_handle_t": [419, 423, 425, 430, 434], "init_dense_matrix": [419, 425, 430], "set_dense_matrix_data": [419, 423], "release_dense_matrix": [419, 423, 430], "matrix_handl": 419, "matrix_handle_t": [419, 421, 422, 427, 428, 429, 432, 434, 435, 436], "init_coo_matrix": [419, 427, 428], "init_csr_matrix": [419, 427, 429], "set_coo_matrix_data": [419, 421], "set_csr_matrix_data": [419, 422], "set_matrix_properti": 419, "release_sparse_matrix": [419, 421, 422, 428, 429], "coo": [420, 421, 428, 432], "onemkl_sparse_supported_typ": 420, "row_ind": [420, 421, 428], "col_ind": [420, 421, 422, 428, 429], "val": [420, 421, 422, 423, 424, 428, 429, 430, 431, 561, 598, 611, 626, 640, 669, 682, 697, 711, 725, 787], "subordin": [420, 849], "num_row": [420, 421, 422, 423, 428, 429, 430], "num_col": [420, 421, 422, 423, 428, 429, 430], "nnz": [420, 421, 422, 428, 429], "row_ptr": [420, 422, 429], "clarifi": [421, 422], "indextyp": [421, 422, 428, 429, 438], "p_smhandl": [421, 422], "null": [421, 422, 428, 429, 836], "p_dmhandl": 423, "ld": [423, 430], "dense_layout": [423, 430], "p_dvhandl": 424, "dmhandl": [425, 430], "dvhandl": [426, 431], "smhandl": [427, 428, 429, 432], "matrix_properti": 432, "strong": 432, "matrix_view": [432, 434, 435, 436], "type_view": [433, 434, 435, 436], "uplo_view": [433, 434], "diag_view": [433, 434, 435, 436], "mathsf": [434, 435, 436], "spmm_descr_t": 434, "p_spmm_descr": 434, "default_alg": [434, 435, 436], "no_optimize_alg": [434, 435, 436], "coo_alg1": [434, 435], "coo_alg2": [434, 435], "coo_alg3": 434, "coo_alg4": 434, "csr_alg1": [434, 435], "csr_alg2": [434, 435], "csr_alg3": [434, 435], "reproduc": [434, 435, 436, 872], "atom": [434, 435, 436, 482, 507, 534], "sorted": [434, 435, 436], "spmm_buffer_s": 434, "opa": [434, 435, 436], "opb": 434, "a_view": [434, 435, 436], "a_handl": [434, 435, 436], "b_handl": 434, "c_handl": 434, "alg": [434, 435, 436, 574, 611, 626, 640, 653, 669, 779], "temp_buffer_s": [434, 435, 436], "spmm_optim": 434, "matrix_descr": [434, 435, 436], "spmv_descr_t": 435, "p_spmv_descr": 435, "spmv_buffer_s": 435, "x_handl": [435, 436], "y_handl": [435, 436], "spmv_optim": 435, "spsv_descr_t": 436, "p_spsv_descr": 436, "spsv_buffer_s": 436, "spsv_optim": 436, "spmm": 437, "spsv": 437, "4th": [439, 440, 441, 442, 452, 453], "observationslayout": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460], "central_moment_2": [439, 440], "central_moment_3": [439, 440], "central_moment_4": [439, 440], "one_pass": [439, 441, 444, 448, 452, 453, 456, 459], "central_sum_2": [441, 442], "central_sum_3": [441, 442], "central_sum_4": [441, 442], "consolid": [443, 451], "n_dims_": 443, "n_observations_": 443, "observations_": 443, "indices_": 443, "n_dim": [443, 446, 458], "n_observ": [443, 446, 458], "nt64_t": 446, "_observ": 446, "fourth": [451, 454], "skew": [451, 454], "excess": 451, "kurtosi": [451, 454], "raw_moment_2": 452, "raw_moment_3": 452, "raw_moment_4": 452, "raw_sum_2": 453, "raw_sum_3": 453, "raw_sum_4": 453, "raw_sum": 454, "central_sum": 454, "raw_moment": 454, "central_mo": 454, "min_max": 454, "make_dataset": [455, 458], "1000": [458, 561, 573, 586], "dataset_ptr": 458, "mean_ptr": 458, "alpha_ptr": 461, "beta_ptr": 461, "malloc_host": 461, "anyth": [461, 760], "slightli": 461, "not_defin": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550], "qnan": [462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 521, 522, 524, 526, 527, 528, 529, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "snan": [462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 505, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 521, 522, 524, 526, 527, 528, 529, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550], "hypot": [462, 553], "set_mod": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 554], "cosin": [463, 464, 465, 481, 485, 486, 487, 488, 537, 551, 553], "error_handl": [463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549], "errhandl": [463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549], "\u03c0": [463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 486, 488, 514, 538, 540, 546, 548, 553], "errdom": [463, 464, 465, 468, 470, 474, 479, 481, 482, 485, 486, 488, 489, 493, 494, 498, 507, 511, 514, 515, 516, 517, 518, 526, 528, 529, 531, 534, 536, 537, 538, 540, 543, 545, 546, 548, 549], "create_error_handl": [463, 464, 465, 466, 468, 470, 474, 478, 479, 481, 485, 486, 487, 488, 490, 492, 493, 494, 495, 496, 497, 498, 499, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 525, 526, 527, 528, 529, 530, 531, 536, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 554], "nonneg": [464, 529], "aco": [465, 553], "y2": [466, 490, 522, 541, 544], "la": [466, 485, 486, 488, 506, 513, 522, 526, 535, 536, 537, 538, 540, 544, 545, 546, 548], "accuracy_warn": [466, 482, 489, 507, 513, 522, 526, 534, 544], "atan2": [467, 553], "sine": [468, 469, 470, 481, 536, 537, 538, 539, 540, 551, 553], "asinh": [468, 553], "atanh": [471, 553], "quadrant": [472, 473, 553], "ad2d": 472, "arctang": [472, 473], "sing": [474, 479, 482, 489, 490, 493, 494, 498, 504, 507, 509, 510, 511, 512, 514, 515, 516, 517, 534, 549], "atan": [475, 553], "ieee754": 476, "ansi": [476, 513], "erfc": [478, 491, 494, 553], "cdfnorm": [479, 491, 492, 553], "erfcinv": [479, 494, 553], "erfinv": [479, 493, 553], "2x": [479, 491, 492, 493, 494], "old_statu": [482, 534], "216": [485, 536, 537, 545], "enhanc": [485, 486, 488, 506, 535, 536, 537, 538, 540, 545, 546, 548], "cosh": [485, 553], "180": [486, 538, 546, 553], "52": [486, 538], "flt_max": [487, 495, 496, 497, 499, 508, 528, 529, 539, 553], "log2": [487, 553], "dbl_max": [487, 495, 496, 497, 499, 508, 529, 539, 553], "ci": [487, 539, 541, 553], "51": [488, 540], "status_arrai": 489, "fixup": 489, "copysign": [489, 548, 553], "errarrai": 489, "status_cod": 489, "int_0": [491, 492, 493, 494], "int_x": [492, 498], "complimentari": 493, "cdfnorminv": [493, 494, 553], "e_1": 498, "int_1": 498, "xt": 498, "minu": [501, 532, 553], "modulu": [504, 553], "trunc": [504, 553], "provis": 506, "beyond": [512, 549], "scalea": 513, "shifta": 513, "scaleb": 513, "shiftb": 513, "addend": 513, "correct": [513, 566], "2emin": 513, "emax": 513, "2emax": 513, "\u03b41": 513, "\u03b42": 513, "emin": 513, "126": 513, "1022": 513, "1023": 513, "ifscalea": 513, "ifscaleb": 513, "fmax": [519, 553], "fmin": [520, 553], "infinit": 525, "subnorm": 525, "treatment": [529, 530], "halfwai": 533, "new_statu": 534, "former": [534, 535], "new_mod": 535, "old_mod": 535, "sinh": [536, 553], "z1": 541, "z2": 541, "i2": [541, 568], "quiet": 541, "intersect": 541, "cpp": 544, "tan": [546, 547, 548, 553], "38": 546, "67": [546, 548], "erro": 547, "nonlinear": 551, "graphic": 551, "sinco": [552, 553], "sqr": 553, "mulbyconj": 553, "linearfrac": 553, "fmod": 553, "remaind": [553, 557, 558, 559, 560], "inv": 553, "invsqrt": 553, "cbrt": 553, "invcbrt": 553, "pow2o3": 553, "pow3o2": 553, "powx": 553, "powr": 553, "exp2": 553, "exp10": 553, "expm1": 553, "log10": 553, "log1p": 553, "logb": 553, "asin": 553, "cospi": 553, "sinpi": 553, "tanpi": 553, "acospi": 553, "asinpi": 553, "atanpi": 553, "atan2pi": 553, "cosd": 553, "sind": 553, "tand": 553, "acosh": 553, "lgamma": 553, "tgamma": 553, "expint1": 553, "nearbyint": 553, "rint": 553, "inexact": 553, "modf": 553, "nextaft": 553, "fdim": 553, "maxmag": 553, "minmag": 553, "get_mod": 554, "set_statu": 554, "get_statu": 554, "clear_statu": 554, "subdivid": [555, 577, 578, 824], "worth": 555, "acknowledg": 555, "collaborative_call_onc": [556, 562], "collaborative_once_flag": 556, "parallel_reduc": [556, 560, 561, 564, 573, 580, 581, 811, 818, 819, 820, 824], "parallel_deterministic_reduc": 556, "parallel_scan": [556, 560, 575, 580, 581, 821, 822, 823, 824], "pre_scan_tag": [556, 573, 821], "final_scan_tag": [556, 573, 821], "parallel_for_each": [556, 563, 812, 815], "feeder": [556, 815], "parallel_invok": 556, "parallel_pipelin": [556, 569, 570, 571], "filter_mod": [556, 568], "flow_control": [556, 569, 777, 813, 832], "parallel_sort": [556, 812], "blocked_rang": [556, 557, 558, 559, 561, 572, 573, 577, 578, 580, 581, 811, 824, 844], "blocked_range2d": [556, 557, 559, 580, 581, 811, 824], "blocked_range3d": [556, 557, 580, 581, 811, 824], "blocked_nd_rang": [556, 580, 581, 811, 824], "loop": [556, 560, 566, 576, 577, 578, 579, 752, 760, 824], "auto_partition": [556, 566, 572, 573], "affinity_partition": [556, 566, 572], "static_partition": [556, 564, 566, 572], "simple_partition": [556, 564, 566, 572, 573, 577], "distinct": [557, 766, 769, 794, 859, 864], "analog": [557, 573, 793], "tbb": [557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 586, 589, 590, 592, 596, 598, 599, 601, 611, 613, 617, 625, 626, 628, 631, 639, 640, 642, 645, 653, 655, 661, 663, 669, 671, 674, 682, 685, 697, 700, 711, 714, 725, 728, 739, 742, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 813, 815, 832, 838, 844, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 858, 859, 866, 869], "dim_range_typ": 557, "size_typ": [557, 558, 559, 560, 590, 596, 597, 598, 600, 602, 604, 609, 611, 616, 623, 624, 626, 630, 637, 638, 640, 644, 651, 652, 653, 654, 659, 661, 668, 669, 673, 680, 681, 682, 683, 684, 685, 687, 689, 695, 696, 697, 698, 699, 700, 701, 703, 709, 710, 711, 712, 713, 714, 715, 717, 723, 724, 725, 726, 727, 728, 729, 731, 737, 738, 739, 740, 741, 743, 748, 749, 750, 794, 796, 798, 826, 859, 864, 866], "dim0": 557, "dim_siz": 557, "grainsiz": [557, 560, 598, 608, 739, 748, 824, 826, 859, 862], "proportional_split": [557, 558, 559, 560, 580, 824, 825], "dim_count": 557, "is_divis": [557, 558, 559, 560, 566, 572, 577, 578, 824], "blockedrangevalu": [557, 560, 810], "measur": [557, 560, 869], "brace": [557, 844], "grain": [557, 558, 559, 560, 564, 573, 577, 578, 579, 826], "statement": [557, 558, 559, 560, 624, 638, 652, 681, 710, 738, 836, 837], "subrang": [557, 558, 559, 560, 564, 566, 572, 573, 577, 578, 579, 624, 638, 652, 681, 696, 710, 724, 738, 818, 819, 824, 825], "biggest": [557, 824], "repeat": [557, 558, 559, 574, 844], "cubic": 557, "i0": 558, "j0": 558, "i1": [558, 568], "j1": 558, "rowvalu": [558, 559], "colvalu": [558, 559], "row_range_typ": [558, 559], "col_range_typ": [558, 559], "row_begin": [558, 559], "row_end": [558, 559], "row_grains": [558, 559], "col_begin": [558, 559], "col_end": [558, 559], "col_grains": [558, 559], "9": [558, 559, 584], "pagevalu": 559, "page_range_typ": 559, "page_begin": 559, "page_end": 559, "page_grains": 559, "splittabl": [560, 810, 824], "const_iter": [560, 590, 593, 598, 603, 608, 611, 615, 616, 621, 622, 624, 626, 629, 630, 635, 636, 638, 640, 643, 644, 649, 650, 652, 661, 664, 669, 672, 673, 678, 679, 681, 682, 688, 689, 693, 694, 696, 697, 702, 703, 707, 708, 710, 711, 716, 717, 721, 722, 724, 725, 730, 731, 735, 736, 738, 739, 744, 748, 859, 862, 866], "despit": 560, "mere": 560, "lazi": 561, "cachedproperti": 561, "foo": [561, 844, 861], "lazydata": 561, "getproperti": 561, "serial": [561, 566, 568, 572, 573, 593, 597, 603, 610, 624, 638, 652, 660, 664, 668, 681, 683, 696, 698, 710, 712, 724, 726, 738, 750, 767, 773, 778, 785, 788, 824, 847, 865], "collabor": 561, "inlet": 563, "copyconstruct": [563, 572, 573, 753, 755, 756, 758, 762, 763, 766, 767, 769, 774, 779, 780, 785, 787], "moveconstruct": [563, 574], "bodi": [563, 564, 565, 566, 569, 572, 573, 577, 753, 758, 759, 760, 762, 763, 767, 769, 774, 775, 778, 783, 785, 788, 813, 814, 815, 818, 821, 825, 828, 829, 830, 832, 834, 838, 844], "termin": [563, 565, 847, 850, 851, 852], "partition": [564, 566, 572, 573, 576, 577, 578, 579, 580, 581, 843, 857], "task_group_context": [564, 565, 566, 567, 568, 572, 764, 845, 854], "imper": 564, "react": 564, "steal": [564, 577], "coarsen": 564, "nearli": [564, 566, 572, 824], "piec": [564, 565, 566, 572, 825], "inputiter": [565, 590, 591, 592, 598, 600, 601, 605, 611, 612, 613, 622, 626, 627, 628, 636, 640, 641, 642, 650, 653, 654, 655, 661, 662, 663, 669, 670, 671, 679, 682, 684, 685, 694, 697, 699, 700, 708, 711, 713, 714, 722, 725, 727, 728, 736, 739, 740, 741, 742, 815], "parallelforeachbodi": [565, 810], "containerbasedsequ": [565, 574, 810], "mybodi": 565, "item_t": 565, "parallel_do_feed": 565, "new_item": 565, "parallelforbodi": [566, 810, 815], "parallelforindex": [566, 810, 816], "parallelforfunc": [566, 810], "around": [566, 760, 773], "lesser": 566, "someth": [566, 572], "look": [566, 573, 775, 810, 844], "trace": 566, "effici": [566, 578, 791, 824, 871], "tend": 566, "algortihm": 567, "bar": [567, 844], "myfunctor": 567, "runfunctionsinparallel": 567, "strongli": [568, 569], "max_number_of_live_token": 568, "filter_chain": 568, "make_filt": [568, 569], "mode0": 568, "g0": 568, "mode1": 568, "g1": 568, "i3": 568, "mode2": 568, "g2": 568, "moden": 568, "gn": 568, "notifi": [568, 831], "fc": [568, 571, 767, 777, 813, 832], "dummi": [568, 571, 575, 825], "rootmeansquar": 568, "serial_in_ord": [568, 570], "compos": [569, 787], "inputtyp": [569, 756, 774, 813], "outputtyp": [569, 756, 813], "firstfilterbodi": [569, 813], "lastfilterbodi": [569, 813], "middlefilterbodi": [569, 813], "singlefilterbodi": [569, 813], "composit": [569, 571], "filter_input": 569, "filter_output": 569, "serial_out_of_ord": 570, "filterbodi": [571, 810], "requiremnt": 571, "parallelreducebodi": [572, 810], "copyassign": [572, 573, 658, 755, 767, 769, 777, 779, 780, 785, 788], "parallelreducefunc": [572, 810], "parallelreducereduct": [572, 810], "commut": 572, "noncommut": 572, "temp": [572, 573], "parallelsum": 572, "occurr": 572, "parallelscanbodi": [573, 810], "parallelscanfunc": [573, 810], "parallelscancombin": [573, 810], "inher": 573, "reassoci": 573, "outperform": 573, "prescan": 573, "why": 573, "get_sum": 573, "is_final_scan": [573, 575], "reverse_join": [573, 821], "doparallelscan": 573, "crucial": 573, "somewhat": 573, "understand": 573, "randomaccessiter": [574, 739, 744], "swappabl": 574, "moveassign": [574, 596, 658, 667], "scan_tag": 575, "phase": 575, "copyconstructib": [576, 577, 578, 579], "subdivis": [577, 824], "opportun": [577, 579, 851], "global_contol": [577, 579], "task_arena": [577, 579, 790, 840, 842, 845, 846, 847, 848, 850, 852, 853], "stolen": [577, 852], "balanc": [577, 579], "bring": 579, "overhead": [579, 763], "openmp": 579, "_left": 580, "_right": 580, "debug_featur": 583, "tbb_use_debug": 583, "_debug": 583, "slow": 583, "stderr": [583, 586], "abort": [583, 590], "breakpoint": 583, "assertion_failur": 583, "inspector": 583, "xe": 583, "vtune": 583, "amplifi": 583, "advisor": 583, "feature_macro": 584, "microsoft": [584, 793], "linux": [584, 793], "maco": 584, "gnu": 584, "libstdc": 584, "10000": [584, 850], "patch": 584, "gcc": 584, "dumpvers": 584, "40902": 584, "incl": 585, "version_inform": 586, "reveal": 586, "onetbb_spec_vers": 586, "tbb_version_major": 586, "tbb_version_minor": 586, "tbb_version_str": 586, "tbb_interface_version_major": 586, "tbb_interface_version_minor": 586, "tbb_interface_vers": 586, "concurrent_vector": [587, 741, 742, 744, 745, 746, 747, 748, 750], "concurrent_queu": [587, 590, 592, 662, 663, 664, 665, 666, 668], "concurrent_bounded_queu": [587, 591, 592, 593, 594, 595, 597], "concurrent_priority_queu": [587, 654, 655, 656, 657, 660], "concurrent_hash_map": [587, 589, 599, 600, 601, 603, 606, 607, 608, 610], "concurrent_unordered_map": [587, 588, 683, 684, 685, 687, 688, 690, 691, 693, 694, 696, 697, 700, 708], "concurrent_unordered_multimap": [587, 588, 682, 694, 698, 699, 700, 701, 702, 704, 705, 707, 708, 710], "concurrent_unordered_set": [587, 588, 711, 714, 722, 726, 727, 728, 729, 730, 732, 733, 735, 736, 738], "concurrent_unordered_multiset": [587, 588, 712, 713, 714, 715, 716, 718, 719, 721, 722, 724, 725, 736], "concurrent_map": [587, 588, 612, 613, 615, 617, 618, 619, 621, 622, 624, 625, 626, 628, 636], "concurrent_multimap": [587, 588, 611, 622, 627, 628, 629, 631, 632, 633, 635, 636, 638, 639], "concurrent_set": [587, 588, 640, 642, 650, 670, 671, 672, 674, 675, 676, 678, 679, 681], "concurrent_multiset": [587, 588, 641, 642, 643, 645, 646, 647, 649, 650, 652, 669, 679], "tbb_hash_compar": [587, 598, 601, 769, 770], "node_handl": 588, "key_typ": [588, 598, 600, 603, 604, 605, 611, 612, 614, 616, 624, 626, 627, 630, 638, 640, 641, 644, 652, 669, 670, 673, 681, 682, 683, 684, 686, 689, 696, 697, 698, 699, 703, 710, 711, 712, 713, 717, 724, 725, 726, 727, 731, 738], "mapped_typ": [588, 598, 605, 611, 626, 682, 697], "allocator_typ": [588, 590, 591, 592, 596, 597, 598, 600, 601, 610, 611, 612, 613, 620, 624, 626, 627, 628, 634, 638, 640, 641, 642, 648, 652, 653, 654, 655, 660, 661, 662, 663, 667, 668, 669, 670, 671, 677, 681, 682, 684, 685, 692, 696, 697, 699, 700, 706, 710, 711, 713, 714, 720, 724, 725, 727, 728, 734, 738, 739, 741, 742, 750, 798, 859, 866], "nh": [588, 611, 622, 626, 636, 640, 650, 669, 679, 682, 694, 697, 708, 711, 722, 725, 736], "node_typ": [588, 611, 622, 624, 626, 636, 638, 640, 650, 652, 669, 679, 681, 682, 694, 696, 697, 708, 710, 711, 722, 724, 725, 736, 738], "unsafe_extract": [588, 611, 624, 626, 638, 640, 652, 669, 681, 682, 696, 697, 710, 711, 724, 725, 738], "allocator_trait": [588, 590, 591, 597, 598, 600, 610, 611, 612, 624, 626, 627, 638, 640, 641, 652, 654, 660, 661, 662, 668, 669, 670, 681, 682, 684, 696, 697, 699, 710, 711, 713, 724, 725, 727, 738, 739, 741, 750], "propagate_on_container_move_assign": [588, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 794, 796, 798], "propagate_on_container_swap": [588, 597, 610, 624, 638, 652, 660, 668, 681, 696, 710, 724, 738, 750], "hash": [589, 598, 600, 682, 684, 685, 690, 691, 692, 697, 699, 700, 704, 705, 706, 711, 713, 714, 718, 719, 720, 725, 727, 728, 732, 733, 734, 770, 827, 833], "hashcompar": [589, 598, 599, 601, 606, 607, 769, 810], "pop": [590, 653, 661], "cache_aligned_alloc": [590, 592, 653, 655, 661, 663, 739, 742, 792, 795, 859], "const_refer": [590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 826, 859, 866], "const_point": [590, 598, 611, 626, 640, 661, 669, 682, 697, 711, 725, 739, 866], "forwarditer": [590, 593, 598, 603, 611, 615, 626, 629, 640, 643, 661, 664, 669, 672, 682, 683, 688, 697, 698, 702, 711, 712, 716, 725, 726, 730], "get_alloc": [590, 591, 597, 598, 610, 611, 612, 622, 624, 626, 627, 636, 638, 640, 641, 650, 652, 653, 654, 660, 661, 662, 668, 669, 670, 679, 681, 682, 684, 694, 696, 697, 699, 708, 710, 711, 713, 722, 724, 725, 727, 736, 738, 739, 750], "try_push": [590, 596], "emplac": [590, 596, 598, 611, 626, 640, 653, 658, 661, 667, 669, 682, 697, 711, 725], "try_emplac": [590, 596], "try_pop": [590, 596, 653, 658, 659, 661, 667], "set_capac": [590, 596], "new_capac": [590, 596], "unsafe_begin": [590, 661, 682, 683, 697, 698, 711, 712, 725, 726], "unsafe_cbegin": [590, 661, 682, 683, 697, 698, 711, 712, 725, 726], "unsafe_end": [590, 661, 682, 683, 697, 698, 711, 712, 725, 726], "unsafe_cend": [590, 661, 682, 683, 697, 698, 711, 712, 725, 726], "eras": [590, 598, 653, 661, 739], "impos": [590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 812], "stricter": [590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 812], "unsaf": [590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 764, 845, 859, 867], "reachabl": [590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739, 794, 796, 798, 869], "lh": [590, 594, 595, 598, 606, 607, 611, 617, 618, 619, 625, 626, 631, 632, 633, 639, 640, 645, 646, 647, 653, 656, 657, 661, 665, 666, 669, 674, 675, 676, 682, 690, 691, 697, 704, 705, 711, 718, 719, 725, 732, 733, 739, 745, 746, 747], "unbound": [591, 653, 661, 755, 770], "select_on_container_copy_construct": [591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741], "propagate_on_container_copy_assign": [591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741], "iterator_value_t": [592, 642, 655, 663, 671, 714, 728, 742], "cq1": [592, 663], "cq2": [592, 663], "copyinsert": [596, 605, 622, 636, 650, 658, 667, 679, 694, 736, 740], "moveinsert": [596, 605, 622, 636, 650, 658, 667, 679, 694, 736, 740], "emplaceconstruct": [596, 605, 614, 622, 636, 650, 658, 667, 679, 686, 694, 736, 740], "wake": 596, "user_abort": 596, "unord": [598, 682, 697, 711, 725, 843], "erasur": [598, 609, 611, 626, 640, 669, 682, 697, 711, 725], "tbb_alloc": [598, 601, 611, 613, 626, 628, 640, 642, 669, 671, 682, 685, 697, 700, 711, 714, 725, 728, 792, 796], "hash_compare_typ": [598, 600, 603, 604, 605], "range_typ": [598, 608, 611, 621, 626, 635, 640, 649, 669, 678, 682, 693, 697, 707, 711, 721, 725, 735, 739, 748, 859, 862], "containerrang": [598, 608, 621, 635, 649, 678, 682, 693, 697, 707, 711, 721, 725, 735, 739, 748, 810, 862], "const_range_typ": [598, 608, 611, 621, 626, 635, 640, 649, 669, 678, 682, 693, 697, 707, 711, 721, 725, 735, 739, 748, 859, 862], "const_accessor": [598, 604, 605], "rehash": [598, 682, 697, 711, 725], "sz": 598, "bucket_count": [598, 682, 684, 697, 699, 711, 713, 725, 727], "max_siz": [598, 611, 626, 640, 669, 682, 697, 711, 725, 739, 750, 794], "item_accessor": [598, 605], "cbegin": [598, 611, 626, 640, 669, 682, 697, 711, 725, 739], "cend": [598, 611, 626, 640, 669, 682, 697, 711, 725, 739], "equal_rang": [598, 611, 626, 640, 669, 682, 697, 711, 725], "prealloc": 600, "iterator_key_t": [601, 613, 628, 685, 700], "iterator_alloc_value_t": [601, 613, 628, 685, 700], "iterator_mapped_t": [601, 613, 628, 685, 700], "first_typ": [601, 613, 628, 685, 700], "second_typ": [601, 613, 628, 685, 700], "add_const_t": [601, 613, 628, 685, 700], "chmap1": 601, "chmap2": 601, "is_transpar": [603, 604, 605, 616, 624, 630, 638, 644, 652, 673, 681, 682, 697, 711, 725], "defaultconstruct": [605, 740, 753, 762, 767, 769, 771, 774, 777, 788], "is_construct": [605, 622, 636, 694, 708], "wherea": [608, 621, 635, 649, 678, 693, 707, 721, 735, 748, 862], "pend": [609, 623, 637, 651, 659, 680, 695, 709, 723, 737], "key_compar": [611, 612, 616, 620, 624, 625, 626, 627, 630, 634, 638, 639, 640, 641, 644, 648, 652, 669, 670, 673, 677, 681], "value_compar": [611, 620, 626, 634, 640, 648, 669, 677], "emplace_hint": [611, 622, 626, 636, 640, 650, 669, 679, 682, 694, 697, 708, 711, 722, 725, 736], "srccompar": [611, 622, 626, 636, 640, 650, 669, 679], "unsafe_eras": [611, 624, 626, 638, 640, 652, 669, 681, 682, 696, 697, 710, 711, 724, 725, 738], "key_comp": [611, 626, 640, 669], "value_comp": [611, 626, 640, 669], "lexicograph": [611, 626, 640, 669, 739], "cm1": [613, 628], "cm2": [613, 628], "3f": [613, 628], "piecewise_construct": [614, 686], "forward_as_tupl": [614, 686], "took": [622, 679, 694, 736], "is_convert": [624, 638, 652, 681, 696, 710, 724, 738], "concurrent_mutlimap": 626, "cs1": [642, 671], "cs2": [642, 671], "init_capac": [653, 654], "cpq1": 655, "cpq2": 655, "unsafe_s": [661, 668], "keyequ": [682, 685, 690, 691, 697, 700, 704, 705, 711, 714, 718, 719, 725, 728, 732, 733], "hasher": [682, 684, 689, 692, 696, 697, 699, 703, 706, 710, 711, 713, 717, 720, 724, 725, 727, 731, 734, 738], "key_equ": [682, 684, 692, 696, 697, 699, 706, 710, 711, 713, 720, 724, 725, 727, 734, 738], "local_iter": [682, 683, 697, 698, 711, 712, 725, 726], "const_local_iter": [682, 683, 697, 698, 711, 712, 725, 726], "srchash": [682, 694, 697, 708, 711, 722, 725, 736], "srckeyequ": [682, 694, 697, 708, 711, 722, 725, 736], "unsafe_bucket_count": [682, 683, 687, 697, 698, 701, 711, 712, 715, 725, 726, 729], "unsafe_max_bucket_bount": [682, 697, 711, 725], "unsafe_bucket_s": [682, 683, 697, 698, 711, 712, 725, 726], "unsafe_bucket": [682, 683, 697, 698, 711, 712, 725, 726], "load_factor": [682, 687, 697, 701, 711, 715, 725, 729], "max_load_factor": [682, 687, 697, 701, 711, 715, 725, 729], "ml": [682, 687, 697, 701, 711, 715, 725, 729], "hash_funct": [682, 697, 711, 725], "key_eq": [682, 697, 711, 725], "transparent_key_equ": [682, 689, 696, 697, 703, 710, 711, 717, 724, 725, 731, 738], "unsafe_max_bucket_count": [683, 698, 712, 726], "is_always_equ": [684, 696, 699, 710, 713, 724, 727, 738, 741, 750, 794, 796, 798], "is_nothrow_move_assign": [684, 699, 713, 727], "map_size_typ": [685, 700], "customhash": [685, 700, 714, 728], "exceed": [687, 701, 715, 729, 793], "is_nothrow_swapp": [696, 710, 724, 738], "set_size_typ": [714, 728], "grown": 739, "reverse_iter": [739, 744], "const_reverse_iter": [739, 744], "growth": [739, 743], "grow_bi": 739, "grow_to_at_least": 739, "emplace_back": 739, "rbegin": 739, "crbegin": 739, "rend": 739, "crend": 739, "shrink_to_fit": 739, "grow": 739, "nonetheless": 739, "unalloc": [739, 743], "unbroken": 739, "arr": 742, "cv1": 742, "cv2": 742, "length_error": 750, "reorgan": 750, "task_arena_attach_tag": 751, "arena": [751, 843, 851, 852, 853], "flow_graph": [752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788], "behalf": 752, "reset_flag": 752, "graph_nod": [752, 753, 754, 755, 756, 758, 762, 766, 767, 769, 771, 774, 777, 779, 780, 785, 786, 788], "sender": [752, 753, 754, 755, 756, 757, 758, 762, 766, 767, 769, 771, 772, 774, 777, 779, 780, 782, 785, 786, 788], "successor": [752, 753, 754, 755, 760, 761, 762, 766, 767, 769, 770, 771, 772, 774, 777, 779, 780, 782, 785, 786, 788, 831], "continue_nod": [752, 759, 760, 761, 763, 771, 775, 829], "function_nod": [752, 759, 761, 763, 773, 775, 777, 778, 785, 788, 830], "input_nod": [752, 759, 761, 777, 785, 832], "multifunction_nod": [752, 759, 761, 763, 775, 776, 778, 834], "async_nod": [752, 759, 763, 775, 778, 828, 831], "copy_bodi": [752, 753, 758, 762, 767, 774], "overwrite_nod": [752, 761, 788], "write_once_nod": [752, 761, 777], "buffer_nod": [752, 761, 780, 788], "queue_nod": [752, 761], "priority_queue_nod": [752, 761], "sequencer_nod": [752, 761, 779, 835], "reusabl": 752, "limiter_nod": [752, 761], "broadcast_nod": [752, 760, 761, 773, 775, 786], "join_nod": [752, 761, 766, 768, 773, 777, 788, 833], "split_nod": [752, 761, 776], "indexer_nod": [752, 761, 768, 776, 787], "composite_nod": [752, 768, 776], "input_port": [752, 756, 766, 769, 773, 788], "output_port": [752, 756, 774, 786], "make_edg": [752, 758, 760, 763, 773, 775, 777, 785, 788], "remove_edg": [752, 758], "continue_msg": [752, 758, 760, 762, 771, 775, 829], "tagged_msg": [752, 766], "implemet": 753, "node_priority_t": [753, 758, 762, 774, 775], "no_prior": [753, 758, 762, 774, 775], "gateway_typ": [753, 828, 831], "gatewai": [753, 828], "try_put": [753, 754, 755, 758, 760, 762, 763, 771, 773, 774, 775, 777, 779, 780, 785, 786, 788, 831, 834], "try_get": [753, 754, 755, 758, 761, 762, 766, 767, 769, 770, 771, 777, 779, 780, 785, 788], "asyncnodebodi": [753, 810], "incom": [753, 754, 758, 762, 770, 773, 774, 786, 788], "settabl": [753, 762, 774], "held": [753, 758, 762, 767, 774, 777, 787, 788, 800, 802, 805, 808, 809, 837], "gatewaytyp": [753, 810, 828], "immedi": [754, 762, 832, 851, 853, 854], "unabl": [754, 770], "tri": [755, 761, 770, 771, 779, 780, 785, 800, 801, 805], "inputtupl": 756, "outputtupl": [756, 769, 833], "input_ports_typ": [756, 766, 769, 772, 782], "output_ports_typ": [756, 772, 774, 782, 786, 834], "set_external_port": 756, "input_ports_tupl": 756, "output_ports_tupl": 756, "border": 756, "mandatori": 756, "nth": 756, "number_of_predecessor": 758, "continuenodebodi": [758, 810], "continue_output_t": 758, "invoke_result_t": 758, "head": [760, 770], "cstdio": [760, 773], "my_nam": 760, "printf": [760, 773, 777, 785, 844], "c_str": 760, "wait_for_al": [760, 763, 764, 773, 775, 777, 785, 788, 848], "forwarding_and_buff": 761, "fate": 761, "resend": 761, "tag_match": [761, 769, 770], "fuction_nod": 762, "functionnodebodi": [762, 810], "input_t": [762, 767, 769, 785], "output_t": [762, 769], "function_node_polici": 763, "queueing_lightweight": 763, "rejecting_lightweight": 763, "rf_reset_protocol": [764, 783], "cancel": [764, 849, 854, 855], "is_cancel": 764, "exception_thrown": 764, "t0": 766, "implementation_defin": 766, "arriv": 766, "inputnodebodi": [767, 810], "toggl": 767, "inact": [767, 852], "nodetyp": [768, 776], "tag_valu": [769, 770], "joinpolici": 769, "khash": [769, 770], "key_match": [769, 770], "b0": 769, "b1": 769, "b2": 769, "b3": 769, "b4": 769, "b5": 769, "b6": 769, "b7": 769, "b8": 769, "b9": 769, "joinnodefunctionobject": [769, 810], "bn": 769, "join_node_polici": 770, "decrementtyp": 771, "embed": 771, "multioutputnod": [772, 782], "multiinputnod": [772, 782], "enter": [773, 851, 852], "squarer": 773, "cuber": 773, "summer": 773, "lock": [773, 800, 801, 802, 803, 804, 805, 806, 808, 809, 836, 837], "my_sum": 773, "multifunctionnodebodi": [774, 810], "node_prior": 775, "f1": 775, "f3": 775, "f2": 775, "fe": 775, "cmath": 775, "tick_count": [775, 868], "global_control": [775, 845, 850], "spin_for": 775, "delta_second": 775, "unit_of_tim": 775, "max_thread": 775, "max_allowed_parallel": [775, 847], "heavi": 775, "elaps": 775, "is_valid": [777, 788], "data_limit": 777, "data_set_prepar": 777, "overwrite_storag": 777, "data_gener": 777, "data_from_storag": 777, "concurrency_limit": 778, "enforc": [779, 836, 847], "fifo": 780, "taken": [780, 808, 809, 844], "rf_reset_bodi": 783, "rf_clear_edg": 783, "reiniti": [783, 849], "duplic": 785, "msg": [785, 788], "writer": [785, 805, 807, 809, 836, 837], "reciev": 785, "tupletyp": 786, "tagtyp": 787, "cast_to": 787, "is_a": 787, "static_result_computer_n": 788, "write_once_n": 788, "buffer_n": 788, "join_n": 788, "consumer_n": 788, "precomput": 788, "precomputed_result": 788, "dynamic_data": 788, "underscore_styl": 789, "pascalcas": 789, "__tbb": 789, "info_namespac": 790, "numa_node_id": [790, 851], "core_type_id": [790, 851], "numa_nod": [790, 851], "core_typ": [790, 851], "default_concurr": 790, "numa": [790, 851], "pars": 790, "intro": 791, "multithread": 791, "memory_alloc": [792, 793, 794, 795, 796, 797, 798], "scalable_alloc": [792, 793, 797], "pmr": [792, 795, 797], "polymorphic_alloc": [792, 797], "mem": 792, "poli": 792, "memory_resourc": [792, 795, 797], "cache_aligned_resourc": 792, "scalable_memory_resourc": 792, "scalable_alloc_c_interfac": 793, "scalable_malloc": 793, "scalable_fre": [793, 797], "ptr": 793, "scalable_calloc": 793, "nobj": 793, "scalable_realloc": 793, "_msize": 793, "malloc_s": 793, "malloc_usable_s": 793, "scalable_ms": 793, "posix_memalign": 793, "scalable_posix_memalign": 793, "memptr": 793, "scalable_aligned_malloc": [793, 797], "scalable_aligned_fre": 793, "scalable_aligned_realloc": 793, "scalable_allocation_": 793, "tbbmalloc_ok": 793, "tbbmalloc_invalid_param": 793, "tbbmalloc_unsupport": 793, "tbbmalloc_no_memori": 793, "tbbmalloc_no_effect": 793, "scalableallocationresult": 793, "huge": 793, "tbbmalloc_use_huge_pag": 793, "forcefulli": 793, "clean": [793, 852], "tbbmalloc_set_soft_heap_limit": 793, "cleanup": 793, "tbbmalloc_set_huge_size_threshold": 793, "allocationmodeparam": 793, "scalable_allocation_mod": 793, "intptr_t": 793, "tbbmalloc_clean_all_buff": 793, "tbbmalloc_clean_thread_buff": 793, "scalableallocationcmd": 793, "scalable_allocation_command": 793, "cmd": 793, "scalable_x": 793, "posix": 793, "influenc": 793, "succeed": [793, 800, 805], "tell": 793, "tbb_malloc_use_huge_pag": 793, "ask": 793, "administr": 793, "urg": 793, "bigger": 793, "tbb_malloc_set_huge_size_threshold": 793, "long_max": 793, "care": 793, "boundari": [794, 795], "hurt": 794, "net": 794, "traffic": 794, "inappropri": 794, "upstream_resourc": 795, "do_alloc": 795, "do_dealloc": 795, "do_is_equ": 795, "get_default_resourc": 795, "beforehand": 795, "upstream": 795, "revert": 798, "malloc_typ": 798, "race": 799, "rw_mutex": [799, 837], "spin_mutex": [799, 806, 836], "spin_rw_mutex": [799, 807, 837], "speculative_spin_mutex": [799, 836], "speculative_spin_rw_mutex": [799, 837], "queuing_mutex": [799, 836], "queuing_rw_mutex": [799, 837], "null_mutex": [799, 836], "null_rw_mutex": [799, 837], "adapt": [800, 805], "spin": [800, 805, 806, 808, 809], "fair": [800, 803, 804, 806, 807, 808, 836, 837], "scoped_lock": [800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837], "try_lock": [800, 801, 802, 805, 808, 809], "unlock": [800, 801, 802, 803, 804, 805, 806, 807, 808, 809], "is_rw_mutex": [800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837], "is_recursive_mutex": [800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837], "is_fair_mutex": [800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 836, 837], "busi": [800, 805], "mutex": [801, 802, 803, 804, 805, 806, 807, 808, 809, 839, 841], "syntact": [801, 802, 810, 844], "readerwritermutex": [802, 804, 805, 807, 809, 810], "sharedmutex": [802, 805, 809], "lock_shar": [802, 805, 809], "try_lock_shar": [802, 805, 809], "unlock_shar": [802, 805, 809], "unfair": [805, 809], "reader": [805, 807, 809, 836, 837], "tsx": [806, 807], "contend": [806, 807], "specul": [806, 807], "conflict": [806, 807], "wors": [806, 807], "backoff": 809, "named_requir": 810, "chapter": 810, "cpprefer": 810, "com": 810, "site": 810, "drawback": 810, "releg": 810, "deal": 810, "suspendfunc": [810, 848], "req": [811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838], "blocked_range_valu": 811, "container_based_sequ": 812, "filter_bodi": 813, "parallel_for_bodi": 814, "parallel_for_each_bodi": 815, "itemtyp": 815, "spawn": [815, 851, 852], "volatil": 815, "parallel_for_func": 816, "parallel_for_index": 817, "quotient": 817, "_note": 817, "parallel_reduce_bodi": [818, 819], "parallel_determinstic_reduc": [818, 819, 820], "parallel_reduce_reduct": 820, "parallel_scan_combin": 822, "parallel_scan_func": 823, "yield": 824, "indivis": 824, "fork": 825, "container_rang": 826, "cr": 826, "hash_compar": 827, "keytyp": 827, "returntyp": 827, "async_node_bodi": 828, "enclos": [828, 844], "continue_node_bodi": 829, "function_node_bodi": 830, "reserve_wait": 831, "release_wait": 831, "input_node_bodi": 832, "join_node_function_object": 833, "multifunction_node_bodi": 834, "outputportstyp": 834, "spartan": 836, "rememb": [836, 852], "mylock": 836, "mymutex": 836, "try_acquir": [836, 837], "copyabl": 836, "movabl": 836, "reentrant": [836, 837], "opposit": [836, 837], "rational": 836, "rwm": 837, "upgrade_to_writ": 837, "downgrade_to_read": 837, "superset": 837, "reacquir": 837, "suspend_func": 838, "suspend_point": [838, 848], "resum": [838, 845], "enumerable_thread_specif": [843, 857, 858, 860, 861, 862, 866], "flattened2d": [843, 857], "notational_convent": 844, "ital": 844, "titl": 844, "filenam": 844, "basenam": 844, "monospac": 844, "directori": 844, "alt": 844, "okcreateobj": 844, "hello": 844, "world": 844, "bold": 844, "emphas": 844, "0xf": 844, "bracket": 844, "fa": 844, "fac": 844, "vertic": 844, "xk": 844, "xw": 844, "xp": 844, "metacharact": 844, "quotat": 844, "negat": 844, "ellipsi": 844, "seem": 844, "client": [844, 852], "foobas": 844, "foo_v3": 844, "internal_stuff": 844, "depart": 844, "distract": 844, "clutter": 844, "drive": 845, "quanta": 845, "worker": [845, 847, 850, 851, 852, 853], "preemptiv": 845, "unrel": 845, "task_scheduler_handl": [845, 846], "task_group": [845, 849, 851, 855], "task_group_statu": [845, 854], "task_handl": [845, 851, 853, 854], "this_task_arena": [845, 852], "task_scheduler_observ": [845, 851], "thread_stack_s": 847, "terminate_on_except": 847, "active_valu": 847, "parameter_valu": 847, "disjunct": 847, "rethrow": 847, "resumable_task": 848, "suspend": [848, 859], "async": 848, "async_act": 848, "forest": 849, "isol": [849, 853], "subtre": 849, "kind_t": 849, "traits_typ": 849, "fp_set": 849, "default_trait": 849, "relation_with_par": 849, "uintptr_t": 849, "cancel_group_execut": 849, "is_group_execution_cancel": 849, "capture_fp_set": 849, "child": 849, "relation_to_par": 849, "extant": [849, 852], "uncancel": 849, "nothrow_t": 850, "prematur": 850, "deactiv": 850, "unsafe_wait": 850, "cerr": 850, "not_initi": [851, 853], "numa_node_": 851, "max_concurrency_": 851, "set_numa_id": 851, "set_max_concurr": 851, "maximal_concurr": 851, "set_core_typ": 851, "set_max_threads_per_cor": 851, "threads_numb": 851, "numa_id": 851, "max_concurr": [851, 853], "max_threads_per_cor": 851, "reserved_for_mast": 851, "a_prior": 851, "a_constraint": 851, "is_act": 851, "lazili": [851, 857, 859], "pin": [851, 852], "eventu": 851, "ever": 851, "interest": 852, "is_observ": 852, "on_scheduler_entri": 852, "is_work": 852, "on_scheduler_exit": 852, "notif": 852, "whenev": 852, "owner": 852, "pinning_observ": 852, "affinity_mask_t": 852, "m_mask": 852, "hw": 852, "set_thread_affin": 852, "current_thread_index": [852, 853], "restore_thread_affin": 852, "outer": [853, 866], "reference_wrapp": 853, "defer": [854, 856], "run_and_wait": 854, "is_current_task_group_cancel": 854, "not_complet": 855, "nullptr_t": 856, "thread_local_storag": 857, "tl": [857, 858, 859, 861, 866], "flatten2d": [857, 866], "assist": 857, "idiom": 857, "binaryfunc": [858, 859, 860], "combine_each": [858, 859, 860], "intact": [858, 861], "ets_key_usage_typ": [859, 861], "ets_key_per_inst": 859, "ets_no_kei": 859, "ets_suspend_awar": 859, "ets_key_typ": 859, "exemplar": [859, 861, 863], "cachetyp": [859, 861], "freshli": 859, "this_thread": 859, "life": 859, "fairli": 859, "viewabl": 866, "thread_safeti": 867, "departur": 867, "liber": 867, "wall": [868, 869], "clock": [868, 869], "interval_t": 868, "durat": 869, "nonmemb": 869, "behind": 871, "matur": 871, "attain": 871, "divers": 871, "scientif": 871, "artifici": 871, "intellig": 871, "systol": 871, "middlewar": 871, "contributor": 871, "ecosystem": 871, "inter": 871, "seek": 871, "conform": 871, "recompil": 871, "rfc": 871, "2119": 871, "creativ": 872, "mit": 872, "uxl": 872, "disclos": 872, "sole": 872, "oblig": 872, "intellectu": 872}, "objects": {"": [[158, 0, 1, "c.DNNL_ARG_ATTR_SCALES", "DNNL_ARG_ATTR_SCALES"], [158, 0, 1, "c.DNNL_ARG_ATTR_ZERO_POINTS", "DNNL_ARG_ATTR_ZERO_POINTS"], [158, 0, 1, "c.DNNL_ARG_BIAS", "DNNL_ARG_BIAS"], [158, 0, 1, "c.DNNL_ARG_DIFF_BIAS", "DNNL_ARG_DIFF_BIAS"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST", "DNNL_ARG_DIFF_DST"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST_0", "DNNL_ARG_DIFF_DST_0"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST_1", "DNNL_ARG_DIFF_DST_1"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST_2", "DNNL_ARG_DIFF_DST_2"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER", "DNNL_ARG_DIFF_DST_ITER"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST_ITER_C", "DNNL_ARG_DIFF_DST_ITER_C"], [158, 0, 1, "c.DNNL_ARG_DIFF_DST_LAYER", "DNNL_ARG_DIFF_DST_LAYER"], [158, 0, 1, "c.DNNL_ARG_DIFF_SCALE", "DNNL_ARG_DIFF_SCALE"], [158, 0, 1, "c.DNNL_ARG_DIFF_SHIFT", "DNNL_ARG_DIFF_SHIFT"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC", "DNNL_ARG_DIFF_SRC"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC_0", "DNNL_ARG_DIFF_SRC_0"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC_1", "DNNL_ARG_DIFF_SRC_1"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC_2", "DNNL_ARG_DIFF_SRC_2"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER", "DNNL_ARG_DIFF_SRC_ITER"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC_ITER_C", "DNNL_ARG_DIFF_SRC_ITER_C"], [158, 0, 1, "c.DNNL_ARG_DIFF_SRC_LAYER", "DNNL_ARG_DIFF_SRC_LAYER"], [158, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS", "DNNL_ARG_DIFF_WEIGHTS"], [158, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_0", "DNNL_ARG_DIFF_WEIGHTS_0"], [158, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_1", "DNNL_ARG_DIFF_WEIGHTS_1"], [158, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_ITER", "DNNL_ARG_DIFF_WEIGHTS_ITER"], [158, 0, 1, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER", "DNNL_ARG_DIFF_WEIGHTS_LAYER"], [158, 0, 1, "c.DNNL_ARG_DST", "DNNL_ARG_DST"], [158, 0, 1, "c.DNNL_ARG_DST_0", "DNNL_ARG_DST_0"], [158, 0, 1, "c.DNNL_ARG_DST_1", "DNNL_ARG_DST_1"], [158, 0, 1, "c.DNNL_ARG_DST_2", "DNNL_ARG_DST_2"], [158, 0, 1, "c.DNNL_ARG_DST_ITER", "DNNL_ARG_DST_ITER"], [158, 0, 1, "c.DNNL_ARG_DST_ITER_C", "DNNL_ARG_DST_ITER_C"], [158, 0, 1, "c.DNNL_ARG_DST_LAYER", "DNNL_ARG_DST_LAYER"], [158, 0, 1, "c.DNNL_ARG_FROM", "DNNL_ARG_FROM"], [158, 0, 1, "c.DNNL_ARG_MEAN", "DNNL_ARG_MEAN"], [158, 0, 1, "c.DNNL_ARG_MULTIPLE_DST", "DNNL_ARG_MULTIPLE_DST"], [158, 0, 1, "c.DNNL_ARG_MULTIPLE_SRC", "DNNL_ARG_MULTIPLE_SRC"], [158, 0, 1, "c.DNNL_ARG_SCALE", "DNNL_ARG_SCALE"], [158, 0, 1, "c.DNNL_ARG_SCRATCHPAD", "DNNL_ARG_SCRATCHPAD"], [158, 0, 1, "c.DNNL_ARG_SHIFT", "DNNL_ARG_SHIFT"], [158, 0, 1, "c.DNNL_ARG_SRC", "DNNL_ARG_SRC"], [158, 0, 1, "c.DNNL_ARG_SRC_0", "DNNL_ARG_SRC_0"], [158, 0, 1, "c.DNNL_ARG_SRC_1", "DNNL_ARG_SRC_1"], [158, 0, 1, "c.DNNL_ARG_SRC_2", "DNNL_ARG_SRC_2"], [158, 0, 1, "c.DNNL_ARG_SRC_ITER", "DNNL_ARG_SRC_ITER"], [158, 0, 1, "c.DNNL_ARG_SRC_ITER_C", "DNNL_ARG_SRC_ITER_C"], [158, 0, 1, "c.DNNL_ARG_SRC_LAYER", "DNNL_ARG_SRC_LAYER"], [158, 0, 1, "c.DNNL_ARG_TO", "DNNL_ARG_TO"], [158, 0, 1, "c.DNNL_ARG_VARIANCE", "DNNL_ARG_VARIANCE"], [158, 0, 1, "c.DNNL_ARG_WEIGHTS", "DNNL_ARG_WEIGHTS"], [158, 0, 1, "c.DNNL_ARG_WEIGHTS_0", "DNNL_ARG_WEIGHTS_0"], [158, 0, 1, "c.DNNL_ARG_WEIGHTS_1", "DNNL_ARG_WEIGHTS_1"], [158, 0, 1, "c.DNNL_ARG_WEIGHTS_ITER", "DNNL_ARG_WEIGHTS_ITER"], [158, 0, 1, "c.DNNL_ARG_WEIGHTS_LAYER", "DNNL_ARG_WEIGHTS_LAYER"], [158, 0, 1, "c.DNNL_ARG_WORKSPACE", "DNNL_ARG_WORKSPACE"], [62, 0, 1, "c.DNNL_GRAPH_UNKNOWN_DIM", "DNNL_GRAPH_UNKNOWN_DIM"], [62, 0, 1, "c.DNNL_GRAPH_UNKNOWN_NDIMS", "DNNL_GRAPH_UNKNOWN_NDIMS"], [59, 0, 1, "c.DNNL_MEMORY_ALLOCATE", "DNNL_MEMORY_ALLOCATE"], [59, 0, 1, "c.DNNL_MEMORY_NONE", "DNNL_MEMORY_NONE"], [158, 0, 1, "c.DNNL_RUNTIME_DIM_VAL", "DNNL_RUNTIME_DIM_VAL"], [158, 0, 1, "c.DNNL_RUNTIME_F32_VAL", "DNNL_RUNTIME_F32_VAL"], [158, 0, 1, "c.DNNL_RUNTIME_S32_VAL", "DNNL_RUNTIME_S32_VAL"], [158, 0, 1, "c.DNNL_RUNTIME_SIZE_VAL", "DNNL_RUNTIME_SIZE_VAL"], [793, 0, 1, "c.TBBMALLOC_CLEAN_ALL_BUFFERS", "TBBMALLOC_CLEAN_ALL_BUFFERS"], [793, 0, 1, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS", "TBBMALLOC_CLEAN_THREAD_BUFFERS"], [793, 0, 1, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD", "TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"], [793, 0, 1, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT", "TBBMALLOC_SET_SOFT_HEAP_LIMIT"], [793, 0, 1, "c.TBBMALLOC_USE_HUGE_PAGES", "TBBMALLOC_USE_HUGE_PAGES"], [855, 0, 1, "c.canceled", "canceled"], [855, 0, 1, "c.complete", "complete"], [855, 0, 1, "c.not_complete", "not_complete"], [793, 1, 1, "c.scalable_allocation_command", "scalable_allocation_command"], [828, 3, 1, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body", "AsyncNodeBody::Body::Body"], [828, 3, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()"], [828, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::gateway"], [828, 4, 1, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType", "AsyncNodeBody::Body::operator()::v"], [828, 3, 1, "_CPPv4N13AsyncNodeBody4BodyD0Ev", "AsyncNodeBody::Body::~Body"], [814, 3, 1, "_CPPv4N4Body4BodyERK4Body", "Body::Body"], [821, 3, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body"], [821, 4, 1, "_CPPv4N4Body4BodyER4Body5split", "Body::Body::b"], [821, 3, 1, "_CPPv4N4Body6assignER4Body", "Body::assign"], [821, 4, 1, "_CPPv4N4Body6assignER4Body", "Body::assign::b"], [814, 3, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()"], [815, 3, 1, "_CPPv4NK4BodyclE8ItemType", "Body::operator()"], [815, 3, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()"], [821, 3, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()"], [821, 3, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()"], [815, 4, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::feeder"], [815, 4, 1, "_CPPv4NK4BodyclE8ItemType", "Body::operator()::item"], [815, 4, 1, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE", "Body::operator()::item"], [821, 4, 1, "_CPPv4N4BodyclERK5Range12pre_scan_tag", "Body::operator()::r"], [821, 4, 1, "_CPPv4N4BodyclERK5Range14final_scan_tag", "Body::operator()::r"], [814, 4, 1, "_CPPv4NK4BodyclER5Range", "Body::operator()::range"], [821, 3, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join"], [821, 4, 1, "_CPPv4N4Body12reverse_joinER4Body", "Body::reverse_join::b"], [814, 3, 1, "_CPPv4N4BodyD0Ev", "Body::~Body"], [826, 3, 1, "_CPPv4N2CR5beginEv", "CR::begin"], [826, 5, 1, "_CPPv4N2CR15const_referenceE", "CR::const_reference"], [826, 5, 1, "_CPPv4N2CR15difference_typeE", "CR::difference_type"], [826, 3, 1, "_CPPv4N2CR3endEv", "CR::end"], [826, 3, 1, "_CPPv4NK2CR9grainsizeEv", "CR::grainsize"], [826, 5, 1, "_CPPv4N2CR8iteratorE", "CR::iterator"], [826, 5, 1, "_CPPv4N2CR9referenceE", "CR::reference"], [826, 5, 1, "_CPPv4N2CR9size_typeE", "CR::size_type"], [826, 5, 1, "_CPPv4N2CR10value_typeE", "CR::value_type"], [822, 3, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()"], [822, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::left"], [822, 4, 1, "_CPPv4NK7CombineclERK5ValueRK5Value", "Combine::operator()::right"], [829, 3, 1, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body", "ContinueNodeBody::Body::Body"], [829, 3, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()"], [829, 4, 1, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg", "ContinueNodeBody::Body::operator()::v"], [829, 3, 1, "_CPPv4N16ContinueNodeBody4BodyD0Ev", "ContinueNodeBody::Body::~Body"], [816, 3, 1, "_CPPv4NK1FclE5Index", "F::operator()"], [816, 4, 1, "_CPPv4NK1FclE5Index", "F::operator()::index"], [813, 3, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()"], [813, 4, 1, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "FirstFilterBody::Body::operator()::fc"], [833, 3, 1, "_CPPv4N4Func4FuncERK4Func", "Func::Func"], [819, 3, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()"], [833, 3, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()"], [819, 4, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()::range"], [833, 4, 1, "_CPPv4N4FuncclERK5Input", "Func::operator()::v"], [819, 4, 1, "_CPPv4NK4FuncclERK5RangeRK5Value", "Func::operator()::x"], [833, 3, 1, "_CPPv4N4FuncD0Ev", "Func::~Func"], [830, 3, 1, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body", "FunctionNodeBody::Body::Body"], [830, 3, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()"], [830, 4, 1, "_CPPv4N16FunctionNodeBody4BodyclERK5Input", "FunctionNodeBody::Body::operator()::v"], [830, 3, 1, "_CPPv4N16FunctionNodeBody4BodyD0Ev", "FunctionNodeBody::Body::~Body"], [827, 3, 1, "_CPPv4N1H1HERK1H", "H::H"], [827, 3, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal"], [827, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k1"], [827, 4, 1, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType", "H::equal::k2"], [827, 3, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash"], [827, 4, 1, "_CPPv4NK1H4hashERK7KeyType", "H::hash::k"], [827, 3, 1, "_CPPv4N1HD0Ev", "H::~H"], [817, 3, 1, "_CPPv4N5Index5IndexERK5Index", "Index::Index"], [817, 3, 1, "_CPPv4N5Index5IndexEi", "Index::Index"], [817, 3, 1, "_CPPv4N5IndexD0Ev", "Index::~Index"], [832, 3, 1, "_CPPv4N13InputNodeBody4Body4BodyERK4Body", "InputNodeBody::Body::Body"], [832, 3, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()"], [832, 4, 1, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE", "InputNodeBody::Body::operator()::fc"], [832, 3, 1, "_CPPv4N13InputNodeBody4BodyD0Ev", "InputNodeBody::Body::~Body"], [813, 3, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()"], [813, 4, 1, "_CPPv4NK14LastFilterBody4BodyclE9InputType", "LastFilterBody::Body::operator()::item"], [813, 3, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()"], [813, 4, 1, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType", "MiddleFilterBody::Body::operator()::item"], [834, 3, 1, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body", "MultifunctionNodeBody::Body::Body"], [834, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()"], [834, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::p"], [834, 4, 1, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType", "MultifunctionNodeBody::Body::operator()::v"], [834, 3, 1, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev", "MultifunctionNodeBody::Body::~Body"], [818, 3, 1, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split", "ParallelReduceBody::Body::Body"], [818, 3, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join"], [818, 4, 1, "_CPPv4N18ParallelReduceBody4Body4joinER4Body", "ParallelReduceBody::Body::join::rhs"], [818, 3, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()"], [818, 4, 1, "_CPPv4N18ParallelReduceBody4BodyclERK5Range", "ParallelReduceBody::Body::operator()::range"], [818, 3, 1, "_CPPv4N18ParallelReduceBody4BodyD0Ev", "ParallelReduceBody::Body::~Body"], [824, 3, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R"], [824, 3, 1, "_CPPv4N1R1RER1R5split", "R::R"], [824, 3, 1, "_CPPv4N1R1RERK1R", "R::R"], [824, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::proportion"], [824, 4, 1, "_CPPv4N1R1RER1R18proportional_split", "R::R::r"], [824, 4, 1, "_CPPv4N1R1RER1R5split", "R::R::r"], [824, 3, 1, "_CPPv4NK1R5emptyEv", "R::empty"], [824, 3, 1, "_CPPv4NK1R12is_divisibleEv", "R::is_divisible"], [824, 3, 1, "_CPPv4N1RD0Ev", "R::~R"], [837, 5, 1, "_CPPv4N3RWM11scoped_lockE", "RWM::scoped_lock"], [837, 6, 1, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE", "RWM::scoped_lock::M::is_fair_mutex"], [837, 6, 1, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE", "RWM::scoped_lock::M::is_recursive_mutex"], [837, 6, 1, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE", "RWM::scoped_lock::M::is_rw_mutex"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv", "RWM::scoped_lock::RWM::scoped_lock"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire"], [837, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::acquire::write"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv", "RWM::scoped_lock::RWM::scoped_lock::downgrade_to_reader"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv", "RWM::scoped_lock::RWM::scoped_lock::release"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire"], [837, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::try_acquire::write"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv", "RWM::scoped_lock::RWM::scoped_lock::upgrade_to_writer"], [837, 4, 1, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb", "RWM::scoped_lock::RWM::scoped_lock::write"], [837, 3, 1, "_CPPv4N3RWM11scoped_lock3RWMD0Ev", "RWM::scoped_lock::RWM::~scoped_lock"], [820, 3, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()"], [820, 4, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()::x"], [820, 4, 1, "_CPPv4NK9ReductionclERK5ValueRK5Value", "Reduction::operator()::y"], [835, 3, 1, "_CPPv4N1S1SERK1S", "S::S"], [835, 3, 1, "_CPPv4N1SclERK1T", "S::operator()"], [835, 4, 1, "_CPPv4N1SclERK1T", "S::operator()::v"], [835, 3, 1, "_CPPv4N1SD0Ev", "S::~S"], [823, 3, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()"], [823, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::is_final"], [823, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::r"], [823, 4, 1, "_CPPv4NK4ScanclERK5RangeRK5Valueb", "Scan::operator()::sum"], [813, 3, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()"], [813, 4, 1, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE", "SingleFilterBody::Body::operator()::fc"], [838, 3, 1, "_CPPv4N11SuspendFunc4Func4FuncERK4Func", "SuspendFunc::Func::Func"], [838, 3, 1, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE", "SuspendFunc::Func::operator()"], [831, 3, 1, "_CPPv4N1T12release_waitEv", "T::release_wait"], [831, 3, 1, "_CPPv4N1T12reserve_waitEv", "T::reserve_wait"], [831, 3, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put"], [831, 4, 1, "_CPPv4N1T7try_putERK6Output", "T::try_put::v"], [811, 3, 1, "_CPPv4N5Value5ValueERK5Value", "Value::Value"], [811, 3, 1, "_CPPv4N5ValueD0Ev", "Value::~Value"], [825, 3, 1, "_CPPv4N1X1XER1X5split", "X::X"], [825, 4, 1, "_CPPv4N1X1XER1X5split", "X::X::x"], [767, 3, 1, "_CPPv48activatev", "activate"], [847, 3, 1, "_CPPv412active_value9parameter", "active_value"], [847, 4, 1, "_CPPv412active_value9parameter", "active_value::param"], [563, 3, 1, "_CPPv43addRK4Item", "add"], [563, 3, 1, "_CPPv43addRR4Item", "add"], [563, 4, 1, "_CPPv43addRK4Item", "add::item"], [563, 4, 1, "_CPPv43addRR4Item", "add::item"], [794, 3, 1, "_CPPv48allocate9size_type", "allocate"], [794, 4, 1, "_CPPv48allocate9size_type", "allocate::n"], [751, 7, 1, "_CPPv46attach", "attach"], [851, 6, 1, "_CPPv49automatic", "automatic"], [560, 3, 1, "_CPPv4NK5beginEv", "begin"], [560, 3, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range"], [560, 3, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range"], [560, 3, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range"], [560, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::begin"], [560, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::end"], [560, 4, 1, "_CPPv413blocked_range5Value5Value9size_type", "blocked_range::grainsize"], [560, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::proportion"], [560, 4, 1, "_CPPv413blocked_rangeR13blocked_range18proportional_split", "blocked_range::range"], [560, 4, 1, "_CPPv413blocked_rangeR13blocked_range5split", "blocked_range::range"], [754, 3, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node"], [754, 3, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node"], [754, 4, 1, "_CPPv414broadcast_nodeR5graph", "broadcast_node::g"], [754, 4, 1, "_CPPv414broadcast_nodeRK14broadcast_node", "broadcast_node::src"], [755, 3, 1, "_CPPv411buffer_nodeR5graph", "buffer_node"], [755, 3, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node"], [755, 4, 1, "_CPPv411buffer_nodeR5graph", "buffer_node::g"], [755, 4, 1, "_CPPv411buffer_nodeRK11buffer_node", "buffer_node::src"], [795, 3, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource"], [795, 3, 1, "_CPPv422cache_aligned_resourcev", "cache_aligned_resource"], [795, 4, 1, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE", "cache_aligned_resource::r"], [764, 3, 1, "_CPPv46cancelv", "cancel"], [849, 3, 1, "_CPPv422cancel_group_executionv", "cancel_group_execution"], [849, 3, 1, "_CPPv419capture_fp_settingsv", "capture_fp_settings"], [787, 3, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to"], [787, 8, 1, "_CPPv4I0ENK7cast_toERK1Vv", "cast_to::V"], [569, 3, 1, "_CPPv45clearv", "clear"], [562, 3, 1, "_CPPv423collaborative_once_flagv", "collaborative_once_flag"], [756, 3, 1, "_CPPv414composite_nodeR5graph", "composite_node"], [756, 4, 1, "_CPPv414composite_nodeR5graph", "composite_node::g"], [560, 5, 1, "_CPPv414const_iterator", "const_iterator"], [851, 7, 1, "_CPPv411constraints", "constraints"], [851, 3, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints"], [851, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::max_concurrency_"], [851, 4, 1, "_CPPv4N11constraints11constraintsE12numa_node_idi", "constraints::constraints::numa_node_"], [851, 6, 1, "_CPPv4N11constraints9core_typeE", "constraints::core_type"], [851, 6, 1, "_CPPv4N11constraints15max_concurrencyE", "constraints::max_concurrency"], [851, 6, 1, "_CPPv4N11constraints20max_threads_per_coreE", "constraints::max_threads_per_core"], [851, 6, 1, "_CPPv4N11constraints7numa_idE", "constraints::numa_id"], [851, 3, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type"], [851, 4, 1, "_CPPv4N11constraints13set_core_typeE12core_type_id", "constraints::set_core_type::id"], [851, 3, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency"], [851, 4, 1, "_CPPv4N11constraints19set_max_concurrencyEi", "constraints::set_max_concurrency::maximal_concurrency"], [851, 3, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core"], [851, 4, 1, "_CPPv4N11constraints24set_max_threads_per_coreEi", "constraints::set_max_threads_per_core::threads_number"], [851, 3, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id"], [851, 4, 1, "_CPPv4N11constraints11set_numa_idE12numa_node_id", "constraints::set_numa_id::id"], [790, 3, 1, "_CPPv410core_typesv", "core_types"], [794, 3, 1, "_CPPv410deallocateP1T9size_type", "deallocate"], [794, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::n"], [794, 4, 1, "_CPPv410deallocateP1T9size_type", "deallocate::p"], [790, 3, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency"], [790, 3, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency"], [790, 4, 1, "_CPPv419default_concurrencyN10task_arena11constraintsE", "default_concurrency::c"], [790, 4, 1, "_CPPv419default_concurrency12numa_node_id", "default_concurrency::id"], [158, 9, 1, "_CPPv4N4dnnl9algorithmE", "dnnl::algorithm"], [158, 10, 1, "_CPPv4N4dnnl9algorithm10binary_addE", "dnnl::algorithm::binary_add"], [158, 10, 1, "_CPPv4N4dnnl9algorithm10binary_divE", "dnnl::algorithm::binary_div"], [158, 10, 1, "_CPPv4N4dnnl9algorithm9binary_eqE", "dnnl::algorithm::binary_eq"], [158, 10, 1, "_CPPv4N4dnnl9algorithm9binary_geE", "dnnl::algorithm::binary_ge"], [158, 10, 1, "_CPPv4N4dnnl9algorithm9binary_gtE", "dnnl::algorithm::binary_gt"], [158, 10, 1, "_CPPv4N4dnnl9algorithm9binary_leE", "dnnl::algorithm::binary_le"], [158, 10, 1, "_CPPv4N4dnnl9algorithm9binary_ltE", "dnnl::algorithm::binary_lt"], [158, 10, 1, "_CPPv4N4dnnl9algorithm10binary_maxE", "dnnl::algorithm::binary_max"], [158, 10, 1, "_CPPv4N4dnnl9algorithm10binary_minE", "dnnl::algorithm::binary_min"], [158, 10, 1, "_CPPv4N4dnnl9algorithm10binary_mulE", "dnnl::algorithm::binary_mul"], [158, 10, 1, "_CPPv4N4dnnl9algorithm9binary_neE", "dnnl::algorithm::binary_ne"], [158, 10, 1, "_CPPv4N4dnnl9algorithm10binary_subE", "dnnl::algorithm::binary_sub"], [158, 10, 1, "_CPPv4N4dnnl9algorithm16convolution_autoE", "dnnl::algorithm::convolution_auto"], [158, 10, 1, "_CPPv4N4dnnl9algorithm18convolution_directE", "dnnl::algorithm::convolution_direct"], [158, 10, 1, "_CPPv4N4dnnl9algorithm20convolution_winogradE", "dnnl::algorithm::convolution_winograd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm20deconvolution_directE", "dnnl::algorithm::deconvolution_direct"], [158, 10, 1, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE", "dnnl::algorithm::deconvolution_winograd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_absE", "dnnl::algorithm::eltwise_abs"], [158, 10, 1, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE", "dnnl::algorithm::eltwise_bounded_relu"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_clipE", "dnnl::algorithm::eltwise_clip"], [158, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE", "dnnl::algorithm::eltwise_clip_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_eluE", "dnnl::algorithm::eltwise_elu"], [158, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_elu_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_expE", "dnnl::algorithm::eltwise_exp"], [158, 10, 1, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE", "dnnl::algorithm::eltwise_exp_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_geluE", "dnnl::algorithm::eltwise_gelu"], [158, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE", "dnnl::algorithm::eltwise_gelu_erf"], [158, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE", "dnnl::algorithm::eltwise_gelu_tanh"], [158, 10, 1, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE", "dnnl::algorithm::eltwise_hardsigmoid"], [158, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE", "dnnl::algorithm::eltwise_hardswish"], [158, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_linearE", "dnnl::algorithm::eltwise_linear"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_logE", "dnnl::algorithm::eltwise_log"], [158, 10, 1, "_CPPv4N4dnnl9algorithm16eltwise_logisticE", "dnnl::algorithm::eltwise_logistic"], [158, 10, 1, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE", "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_mishE", "dnnl::algorithm::eltwise_mish"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11eltwise_powE", "dnnl::algorithm::eltwise_pow"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_reluE", "dnnl::algorithm::eltwise_relu"], [158, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE", "dnnl::algorithm::eltwise_relu_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_roundE", "dnnl::algorithm::eltwise_round"], [158, 10, 1, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE", "dnnl::algorithm::eltwise_soft_relu"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE", "dnnl::algorithm::eltwise_sqrt"], [158, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE", "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm14eltwise_squareE", "dnnl::algorithm::eltwise_square"], [158, 10, 1, "_CPPv4N4dnnl9algorithm13eltwise_swishE", "dnnl::algorithm::eltwise_swish"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12eltwise_tanhE", "dnnl::algorithm::eltwise_tanh"], [158, 10, 1, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE", "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd"], [158, 10, 1, "_CPPv4N4dnnl9algorithm7lbr_gruE", "dnnl::algorithm::lbr_gru"], [158, 10, 1, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE", "dnnl::algorithm::lrn_across_channels"], [158, 10, 1, "_CPPv4N4dnnl9algorithm18lrn_within_channelE", "dnnl::algorithm::lrn_within_channel"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_avgE", "dnnl::algorithm::pooling_avg"], [158, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE", "dnnl::algorithm::pooling_avg_exclude_padding"], [158, 10, 1, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE", "dnnl::algorithm::pooling_avg_include_padding"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11pooling_maxE", "dnnl::algorithm::pooling_max"], [158, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_maxE", "dnnl::algorithm::reduction_max"], [158, 10, 1, "_CPPv4N4dnnl9algorithm14reduction_meanE", "dnnl::algorithm::reduction_mean"], [158, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_minE", "dnnl::algorithm::reduction_min"], [158, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_mulE", "dnnl::algorithm::reduction_mul"], [158, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE", "dnnl::algorithm::reduction_norm_lp_max"], [158, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE", "dnnl::algorithm::reduction_norm_lp_power_p_max"], [158, 10, 1, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE", "dnnl::algorithm::reduction_norm_lp_power_p_sum"], [158, 10, 1, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE", "dnnl::algorithm::reduction_norm_lp_sum"], [158, 10, 1, "_CPPv4N4dnnl9algorithm13reduction_sumE", "dnnl::algorithm::reduction_sum"], [158, 10, 1, "_CPPv4N4dnnl9algorithm17resampling_linearE", "dnnl::algorithm::resampling_linear"], [158, 10, 1, "_CPPv4N4dnnl9algorithm18resampling_nearestE", "dnnl::algorithm::resampling_nearest"], [158, 10, 1, "_CPPv4N4dnnl9algorithm16softmax_accurateE", "dnnl::algorithm::softmax_accurate"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11softmax_logE", "dnnl::algorithm::softmax_log"], [158, 10, 1, "_CPPv4N4dnnl9algorithm5undefE", "dnnl::algorithm::undef"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_gruE", "dnnl::algorithm::vanilla_gru"], [158, 10, 1, "_CPPv4N4dnnl9algorithm12vanilla_lstmE", "dnnl::algorithm::vanilla_lstm"], [158, 10, 1, "_CPPv4N4dnnl9algorithm11vanilla_rnnE", "dnnl::algorithm::vanilla_rnn"], [153, 7, 1, "_CPPv4N4dnnl28batch_normalization_backwardE", "dnnl::batch_normalization_backward"], [153, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward"], [153, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv", "dnnl::batch_normalization_backward::batch_normalization_backward"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc", "dnnl::batch_normalization_backward::batch_normalization_backward::pd"], [153, 7, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE", "dnnl::batch_normalization_backward::primitive_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc"], [153, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv", "dnnl::batch_normalization_backward::primitive_desc::dst_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_backward::primitive_desc::get_epsilon"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_backward::primitive_desc::get_flags"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv", "dnnl::batch_normalization_backward::primitive_desc::mean_desc"], [153, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [153, 3, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aengine"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::attr"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::epsilon"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::flags"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [153, 4, 1, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::batch_normalization_backward::primitive_desc::primitive_desc::src_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv", "dnnl::batch_normalization_backward::primitive_desc::src_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv", "dnnl::batch_normalization_backward::primitive_desc::variance_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv", "dnnl::batch_normalization_backward::primitive_desc::weights_desc"], [153, 3, 1, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_backward::primitive_desc::workspace_desc"], [153, 7, 1, "_CPPv4N4dnnl27batch_normalization_forwardE", "dnnl::batch_normalization_forward"], [153, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward"], [153, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv", "dnnl::batch_normalization_forward::batch_normalization_forward"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc", "dnnl::batch_normalization_forward::batch_normalization_forward::pd"], [153, 7, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE", "dnnl::batch_normalization_forward::primitive_desc"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv", "dnnl::batch_normalization_forward::primitive_desc::dst_desc"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::batch_normalization_forward::primitive_desc::get_epsilon"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv", "dnnl::batch_normalization_forward::primitive_desc::get_flags"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv", "dnnl::batch_normalization_forward::primitive_desc::mean_desc"], [153, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [153, 3, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aengine"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::attr"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::epsilon"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::flags"], [153, 4, 1, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::batch_normalization_forward::primitive_desc::primitive_desc::src_desc"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv", "dnnl::batch_normalization_forward::primitive_desc::src_desc"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv", "dnnl::batch_normalization_forward::primitive_desc::variance_desc"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv", "dnnl::batch_normalization_forward::primitive_desc::weights_desc"], [153, 3, 1, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv", "dnnl::batch_normalization_forward::primitive_desc::workspace_desc"], [154, 7, 1, "_CPPv4N4dnnl6binaryE", "dnnl::binary"], [154, 3, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary"], [154, 3, 1, "_CPPv4N4dnnl6binary6binaryEv", "dnnl::binary::binary"], [154, 4, 1, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc", "dnnl::binary::binary::pd"], [154, 7, 1, "_CPPv4N4dnnl6binary14primitive_descE", "dnnl::binary::primitive_desc"], [154, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv", "dnnl::binary::primitive_desc::dst_desc"], [154, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv", "dnnl::binary::primitive_desc::get_algorithm"], [154, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc"], [154, 3, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv", "dnnl::binary::primitive_desc::primitive_desc"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aalgorithm"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::aengine"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::allow_empty"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::attr"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::dst"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src0"], [154, 4, 1, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::binary::primitive_desc::primitive_desc::src1"], [154, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv", "dnnl::binary::primitive_desc::src0_desc"], [154, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv", "dnnl::binary::primitive_desc::src1_desc"], [154, 3, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc"], [154, 4, 1, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi", "dnnl::binary::primitive_desc::src_desc::idx"], [155, 7, 1, "_CPPv4N4dnnl6concatE", "dnnl::concat"], [155, 3, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat"], [155, 3, 1, "_CPPv4N4dnnl6concat6concatEv", "dnnl::concat::concat"], [155, 4, 1, "_CPPv4N4dnnl6concat6concatERK14primitive_desc", "dnnl::concat::concat::pd"], [155, 7, 1, "_CPPv4N4dnnl6concat14primitive_descE", "dnnl::concat::primitive_desc"], [155, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv", "dnnl::concat::primitive_desc::dst_desc"], [155, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [155, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc"], [155, 3, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv", "dnnl::concat::primitive_desc::primitive_desc"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::aengine"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::attr"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::concat_dimension"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::dst"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [155, 4, 1, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::concat::primitive_desc::primitive_desc::srcs"], [155, 3, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc"], [155, 4, 1, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi", "dnnl::concat::primitive_desc::src_desc::idx"], [156, 7, 1, "_CPPv4N4dnnl25convolution_backward_dataE", "dnnl::convolution_backward_data"], [156, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data"], [156, 3, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv", "dnnl::convolution_backward_data::convolution_backward_data"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc", "dnnl::convolution_backward_data::convolution_backward_data::pd"], [156, 7, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE", "dnnl::convolution_backward_data::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::convolution_backward_data::primitive_desc::diff_src_desc"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_data::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_data::primitive_desc::get_dilations"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_l"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_data::primitive_desc::get_padding_r"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_data::primitive_desc::get_prop_kind"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv", "dnnl::convolution_backward_data::primitive_desc::get_strides"], [156, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv", "dnnl::convolution_backward_data::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [156, 3, 1, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv", "dnnl::convolution_backward_data::primitive_desc::weights_desc"], [156, 7, 1, "_CPPv4N4dnnl28convolution_backward_weightsE", "dnnl::convolution_backward_weights"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv", "dnnl::convolution_backward_weights::convolution_backward_weights"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc", "dnnl::convolution_backward_weights::convolution_backward_weights::pd"], [156, 7, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE", "dnnl::convolution_backward_weights::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::convolution_backward_weights::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::convolution_backward_weights::primitive_desc::get_dilations"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_l"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::convolution_backward_weights::primitive_desc::get_padding_r"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::convolution_backward_weights::primitive_desc::get_strides"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb", "dnnl::convolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 3, 1, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv", "dnnl::convolution_backward_weights::primitive_desc::src_desc"], [156, 7, 1, "_CPPv4N4dnnl19convolution_forwardE", "dnnl::convolution_forward"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv", "dnnl::convolution_forward::convolution_forward"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc", "dnnl::convolution_forward::convolution_forward::pd"], [156, 7, 1, "_CPPv4N4dnnl19convolution_forward14primitive_descE", "dnnl::convolution_forward::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv", "dnnl::convolution_forward::primitive_desc::bias_desc"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv", "dnnl::convolution_forward::primitive_desc::dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv", "dnnl::convolution_forward::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv", "dnnl::convolution_forward::primitive_desc::get_dilations"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv", "dnnl::convolution_forward::primitive_desc::get_padding_l"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv", "dnnl::convolution_forward::primitive_desc::get_padding_r"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv", "dnnl::convolution_forward::primitive_desc::get_prop_kind"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv", "dnnl::convolution_forward::primitive_desc::get_strides"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv", "dnnl::convolution_forward::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::bias_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::convolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv", "dnnl::convolution_forward::primitive_desc::src_desc"], [156, 3, 1, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv", "dnnl::convolution_forward::primitive_desc::weights_desc"], [156, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_dataE", "dnnl::deconvolution_backward_data"], [156, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [156, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv", "dnnl::deconvolution_backward_data::deconvolution_backward_data"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc", "dnnl::deconvolution_backward_data::deconvolution_backward_data::pd"], [156, 7, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE", "dnnl::deconvolution_backward_data::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv", "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_data::primitive_desc::get_dilations"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_data::primitive_desc::get_strides"], [156, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc::weights_desc"], [156, 3, 1, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv", "dnnl::deconvolution_backward_data::primitive_desc::weights_desc"], [156, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weightsE", "dnnl::deconvolution_backward_weights"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc", "dnnl::deconvolution_backward_weights::deconvolution_backward_weights::pd"], [156, 7, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE", "dnnl::deconvolution_backward_weights::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv", "dnnl::deconvolution_backward_weights::primitive_desc::get_strides"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb", "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc::strides"], [156, 3, 1, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv", "dnnl::deconvolution_backward_weights::primitive_desc::src_desc"], [156, 7, 1, "_CPPv4N4dnnl21deconvolution_forwardE", "dnnl::deconvolution_forward"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv", "dnnl::deconvolution_forward::deconvolution_forward"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc", "dnnl::deconvolution_forward::deconvolution_forward::pd"], [156, 7, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE", "dnnl::deconvolution_forward::primitive_desc"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv", "dnnl::deconvolution_forward::primitive_desc::bias_desc"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv", "dnnl::deconvolution_forward::primitive_desc::dst_desc"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv", "dnnl::deconvolution_forward::primitive_desc::get_algorithm"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv", "dnnl::deconvolution_forward::primitive_desc::get_dilations"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_l"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv", "dnnl::deconvolution_forward::primitive_desc::get_padding_r"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv", "dnnl::deconvolution_forward::primitive_desc::get_prop_kind"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv", "dnnl::deconvolution_forward::primitive_desc::get_strides"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [156, 3, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv", "dnnl::deconvolution_forward::primitive_desc::primitive_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aalgorithm"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aengine"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::allow_empty"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::aprop_kind"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::attr"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::bias_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dilates"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::dst_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_l"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::padding_r"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::src_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::strides"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 4, 1, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::deconvolution_forward::primitive_desc::primitive_desc::weights_desc"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv", "dnnl::deconvolution_forward::primitive_desc::src_desc"], [156, 3, 1, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv", "dnnl::deconvolution_forward::primitive_desc::weights_desc"], [157, 7, 1, "_CPPv4N4dnnl16eltwise_backwardE", "dnnl::eltwise_backward"], [157, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward"], [157, 3, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv", "dnnl::eltwise_backward::eltwise_backward"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc", "dnnl::eltwise_backward::eltwise_backward::pd"], [157, 7, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_descE", "dnnl::eltwise_backward::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv", "dnnl::eltwise_backward::primitive_desc::diff_dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv", "dnnl::eltwise_backward::primitive_desc::diff_src_desc"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv", "dnnl::eltwise_backward::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv", "dnnl::eltwise_backward::primitive_desc::get_alpha"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv", "dnnl::eltwise_backward::primitive_desc::get_beta"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_backward::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv", "dnnl::eltwise_backward::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::alpha"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::beta"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::data_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_dst_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::diff_src_desc"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 4, 1, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb", "dnnl::eltwise_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [157, 3, 1, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv", "dnnl::eltwise_backward::primitive_desc::src_desc"], [157, 7, 1, "_CPPv4N4dnnl15eltwise_forwardE", "dnnl::eltwise_forward"], [157, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward"], [157, 3, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv", "dnnl::eltwise_forward::eltwise_forward"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc", "dnnl::eltwise_forward::eltwise_forward::pd"], [157, 7, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_descE", "dnnl::eltwise_forward::primitive_desc"], [157, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv", "dnnl::eltwise_forward::primitive_desc::dst_desc"], [157, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv", "dnnl::eltwise_forward::primitive_desc::get_algorithm"], [157, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv", "dnnl::eltwise_forward::primitive_desc::get_alpha"], [157, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv", "dnnl::eltwise_forward::primitive_desc::get_beta"], [157, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv", "dnnl::eltwise_forward::primitive_desc::get_prop_kind"], [157, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [157, 3, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv", "dnnl::eltwise_forward::primitive_desc::primitive_desc"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aalgorithm"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aengine"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::allow_empty"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::alpha"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::aprop_kind"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::attr"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::beta"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::dst_desc"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [157, 4, 1, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::eltwise_forward::primitive_desc::primitive_desc::src_desc"], [157, 3, 1, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv", "dnnl::eltwise_forward::primitive_desc::src_desc"], [60, 7, 1, "_CPPv4N4dnnl6engineE", "dnnl::engine"], [60, 3, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine"], [60, 3, 1, "_CPPv4N4dnnl6engine6engineEv", "dnnl::engine::engine"], [60, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::akind"], [60, 4, 1, "_CPPv4N4dnnl6engine6engineE4kind6size_t", "dnnl::engine::engine::index"], [60, 3, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count"], [60, 4, 1, "_CPPv4N4dnnl6engine9get_countE4kind", "dnnl::engine::get_count::akind"], [60, 3, 1, "_CPPv4NK4dnnl6engine8get_kindEv", "dnnl::engine::get_kind"], [60, 9, 1, "_CPPv4N4dnnl6engine4kindE", "dnnl::engine::kind"], [60, 10, 1, "_CPPv4N4dnnl6engine4kind3anyE", "dnnl::engine::kind::any"], [60, 10, 1, "_CPPv4N4dnnl6engine4kind3cpuE", "dnnl::engine::kind::cpu"], [60, 10, 1, "_CPPv4N4dnnl6engine4kind3gpuE", "dnnl::engine::kind::gpu"], [150, 7, 1, "_CPPv4N4dnnl5errorE", "dnnl::error"], [62, 7, 1, "_CPPv4N4dnnl5graph5graphE", "dnnl::graph::graph"], [62, 3, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op"], [62, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::allow_exception"], [62, 4, 1, "_CPPv4N4dnnl5graph5graph6add_opERK2opb", "dnnl::graph::graph::add_op::op"], [62, 3, 1, "_CPPv4N4dnnl5graph5graph8finalizeEv", "dnnl::graph::graph::finalize"], [62, 3, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions"], [62, 4, 1, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE", "dnnl::graph::graph::get_partitions::policy"], [62, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph"], [62, 3, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph"], [62, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE", "dnnl::graph::graph::graph::engine_kind"], [62, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::engine_kind"], [62, 4, 1, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE", "dnnl::graph::graph::graph::mode"], [62, 3, 1, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv", "dnnl::graph::graph::is_finalized"], [62, 7, 1, "_CPPv4N4dnnl5graph14logical_tensorE", "dnnl::graph::logical_tensor"], [62, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE", "dnnl::graph::logical_tensor::data_type"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E", "dnnl::graph::logical_tensor::data_type::bf16"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE", "dnnl::graph::logical_tensor::data_type::boolean"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E", "dnnl::graph::logical_tensor::data_type::f16"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E", "dnnl::graph::logical_tensor::data_type::f32"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E", "dnnl::graph::logical_tensor::data_type::s32"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E", "dnnl::graph::logical_tensor::data_type::s8"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E", "dnnl::graph::logical_tensor::data_type::u8"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE", "dnnl::graph::logical_tensor::data_type::undef"], [62, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor3dimE", "dnnl::graph::logical_tensor::dim"], [62, 5, 1, "_CPPv4N4dnnl5graph14logical_tensor4dimsE", "dnnl::graph::logical_tensor::dims"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv", "dnnl::graph::logical_tensor::get_data_type"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv", "dnnl::graph::logical_tensor::get_dims"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv", "dnnl::graph::logical_tensor::get_id"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv", "dnnl::graph::logical_tensor::get_layout_id"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv", "dnnl::graph::logical_tensor::get_layout_type"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv", "dnnl::graph::logical_tensor::get_mem_size"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv", "dnnl::graph::logical_tensor::get_property_type"], [62, 3, 1, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv", "dnnl::graph::logical_tensor::get_strides"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor", "dnnl::graph::logical_tensor::is_equal::lt"], [62, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE", "dnnl::graph::logical_tensor::layout_type"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE", "dnnl::graph::logical_tensor::layout_type::any"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE", "dnnl::graph::logical_tensor::layout_type::opaque"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE", "dnnl::graph::logical_tensor::layout_type::strided"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE", "dnnl::graph::logical_tensor::layout_type::undef"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv", "dnnl::graph::logical_tensor::logical_tensor"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::adims"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::dtype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::lid"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ltype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ndims"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor", "dnnl::graph::logical_tensor::logical_tensor::other"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::ptype"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::strides"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type", "dnnl::graph::logical_tensor::logical_tensor::tid"], [62, 3, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator="], [62, 4, 1, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor", "dnnl::graph::logical_tensor::operator=::other"], [62, 9, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE", "dnnl::graph::logical_tensor::property_type"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE", "dnnl::graph::logical_tensor::property_type::constant"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE", "dnnl::graph::logical_tensor::property_type::undef"], [62, 10, 1, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE", "dnnl::graph::logical_tensor::property_type::variable"], [62, 7, 1, "_CPPv4N4dnnl5graph2opE", "dnnl::graph::op"], [62, 3, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input"], [62, 4, 1, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor", "dnnl::graph::op::add_input::t"], [62, 3, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs"], [62, 4, 1, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_inputs::ts"], [62, 3, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output"], [62, 4, 1, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor", "dnnl::graph::op::add_output::t"], [62, 3, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs"], [62, 4, 1, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE", "dnnl::graph::op::add_outputs::ts"], [62, 9, 1, "_CPPv4N4dnnl5graph2op4attrE", "dnnl::graph::op::attr"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr5alphaE", "dnnl::graph::op::attr::alpha"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE", "dnnl::graph::op::attr::auto_broadcast"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr8auto_padE", "dnnl::graph::op::attr::auto_pad"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axesE", "dnnl::graph::op::attr::axes"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr4axisE", "dnnl::graph::op::attr::axis"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE", "dnnl::graph::op::attr::begin_norm_axis"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr4betaE", "dnnl::graph::op::attr::beta"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE", "dnnl::graph::op::attr::coordinate_transformation_mode"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr11data_formatE", "dnnl::graph::op::attr::data_format"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dilationsE", "dnnl::graph::op::attr::dilations"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE", "dnnl::graph::op::attr::dst_shape"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr7epsilonE", "dnnl::graph::op::attr::epsilon"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr11exclude_padE", "dnnl::graph::op::attr::exclude_pad"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr6groupsE", "dnnl::graph::op::attr::groups"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE", "dnnl::graph::op::attr::keep_dims"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr10keep_statsE", "dnnl::graph::op::attr::keep_stats"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr6kernelE", "dnnl::graph::op::attr::kernel"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr3maxE", "dnnl::graph::op::attr::max"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr3minE", "dnnl::graph::op::attr::min"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr4modeE", "dnnl::graph::op::attr::mode"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr8momentumE", "dnnl::graph::op::attr::momentum"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr5orderE", "dnnl::graph::op::attr::order"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr14output_paddingE", "dnnl::graph::op::attr::output_padding"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr10pads_beginE", "dnnl::graph::op::attr::pads_begin"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr8pads_endE", "dnnl::graph::op::attr::pads_end"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE", "dnnl::graph::op::attr::per_channel_broadcast"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr5qtypeE", "dnnl::graph::op::attr::qtype"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE", "dnnl::graph::op::attr::rounding_type"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr6scalesE", "dnnl::graph::op::attr::scales"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr5shapeE", "dnnl::graph::op::attr::shape"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr5sizesE", "dnnl::graph::op::attr::sizes"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr12special_zeroE", "dnnl::graph::op::attr::special_zero"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr9src_shapeE", "dnnl::graph::op::attr::src_shape"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr7stridesE", "dnnl::graph::op::attr::strides"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_aE", "dnnl::graph::op::attr::transpose_a"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr11transpose_bE", "dnnl::graph::op::attr::transpose_b"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr5undefE", "dnnl::graph::op::attr::undef"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr10use_affineE", "dnnl::graph::op::attr::use_affine"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr7use_dstE", "dnnl::graph::op::attr::use_dst"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr14weights_formatE", "dnnl::graph::op::attr::weights_format"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE", "dnnl::graph::op::attr::weights_shape"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4attr3zpsE", "dnnl::graph::op::attr::zps"], [62, 9, 1, "_CPPv4N4dnnl5graph2op4kindE", "dnnl::graph::op::kind"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AbsE", "dnnl::graph::op::kind::Abs"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE", "dnnl::graph::op::kind::AbsBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3AddE", "dnnl::graph::op::kind::Add"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE", "dnnl::graph::op::kind::AvgPool"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE", "dnnl::graph::op::kind::AvgPoolBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE", "dnnl::graph::op::kind::BatchNormForwardTraining"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE", "dnnl::graph::op::kind::BatchNormInference"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE", "dnnl::graph::op::kind::BatchNormTrainingBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7BiasAddE", "dnnl::graph::op::kind::BiasAdd"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE", "dnnl::graph::op::kind::BiasAddBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind5ClampE", "dnnl::graph::op::kind::Clamp"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE", "dnnl::graph::op::kind::ClampBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind6ConcatE", "dnnl::graph::op::kind::Concat"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE", "dnnl::graph::op::kind::ConvTranspose"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE", "dnnl::graph::op::kind::ConvTransposeBackwardData"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE", "dnnl::graph::op::kind::ConvTransposeBackwardWeights"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE", "dnnl::graph::op::kind::Convolution"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE", "dnnl::graph::op::kind::ConvolutionBackwardData"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE", "dnnl::graph::op::kind::ConvolutionBackwardWeights"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind10DequantizeE", "dnnl::graph::op::kind::Dequantize"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind6DivideE", "dnnl::graph::op::kind::Divide"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE", "dnnl::graph::op::kind::DynamicDequantize"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE", "dnnl::graph::op::kind::DynamicQuantize"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EluE", "dnnl::graph::op::kind::Elu"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE", "dnnl::graph::op::kind::EluBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3EndE", "dnnl::graph::op::kind::End"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3ExpE", "dnnl::graph::op::kind::Exp"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind4GELUE", "dnnl::graph::op::kind::GELU"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE", "dnnl::graph::op::kind::GELUBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE", "dnnl::graph::op::kind::HardSigmoid"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE", "dnnl::graph::op::kind::HardSigmoidBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind9HardSwishE", "dnnl::graph::op::kind::HardSwish"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE", "dnnl::graph::op::kind::HardSwishBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind11InterpolateE", "dnnl::graph::op::kind::Interpolate"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE", "dnnl::graph::op::kind::InterpolateBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE", "dnnl::graph::op::kind::LastSymbol"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LayerNormE", "dnnl::graph::op::kind::LayerNorm"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE", "dnnl::graph::op::kind::LayerNormBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE", "dnnl::graph::op::kind::LeakyReLU"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3LogE", "dnnl::graph::op::kind::Log"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE", "dnnl::graph::op::kind::LogSoftmax"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE", "dnnl::graph::op::kind::LogSoftmaxBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind6MatMulE", "dnnl::graph::op::kind::MatMul"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE", "dnnl::graph::op::kind::MaxPool"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE", "dnnl::graph::op::kind::MaxPoolBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MaximumE", "dnnl::graph::op::kind::Maximum"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7MinimumE", "dnnl::graph::op::kind::Minimum"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind4MishE", "dnnl::graph::op::kind::Mish"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE", "dnnl::graph::op::kind::MishBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8MultiplyE", "dnnl::graph::op::kind::Multiply"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind5PReLUE", "dnnl::graph::op::kind::PReLU"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE", "dnnl::graph::op::kind::PReLUBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind3PowE", "dnnl::graph::op::kind::Pow"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8QuantizeE", "dnnl::graph::op::kind::Quantize"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind4ReLUE", "dnnl::graph::op::kind::ReLU"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE", "dnnl::graph::op::kind::ReLUBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE", "dnnl::graph::op::kind::Reciprocal"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E", "dnnl::graph::op::kind::ReduceL1"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E", "dnnl::graph::op::kind::ReduceL2"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE", "dnnl::graph::op::kind::ReduceMax"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE", "dnnl::graph::op::kind::ReduceMean"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE", "dnnl::graph::op::kind::ReduceMin"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE", "dnnl::graph::op::kind::ReduceProd"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE", "dnnl::graph::op::kind::ReduceSum"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7ReorderE", "dnnl::graph::op::kind::Reorder"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind5RoundE", "dnnl::graph::op::kind::Round"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SelectE", "dnnl::graph::op::kind::Select"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SigmoidE", "dnnl::graph::op::kind::Sigmoid"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE", "dnnl::graph::op::kind::SigmoidBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE", "dnnl::graph::op::kind::SoftMax"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE", "dnnl::graph::op::kind::SoftMaxBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE", "dnnl::graph::op::kind::SoftPlus"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE", "dnnl::graph::op::kind::SoftPlusBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind4SqrtE", "dnnl::graph::op::kind::Sqrt"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE", "dnnl::graph::op::kind::SqrtBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind6SquareE", "dnnl::graph::op::kind::Square"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE", "dnnl::graph::op::kind::SquaredDifference"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE", "dnnl::graph::op::kind::StaticReshape"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE", "dnnl::graph::op::kind::StaticTranspose"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8SubtractE", "dnnl::graph::op::kind::Subtract"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind4TanhE", "dnnl::graph::op::kind::Tanh"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE", "dnnl::graph::op::kind::TanhBackward"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8TypeCastE", "dnnl::graph::op::kind::TypeCast"], [62, 10, 1, "_CPPv4N4dnnl5graph2op4kind8WildcardE", "dnnl::graph::op::kind::Wildcard"], [62, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op"], [62, 3, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::akind"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::akind"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::id"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::id"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::inputs"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE", "dnnl::graph::op::op::name"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::name"], [62, 4, 1, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE", "dnnl::graph::op::op::outputs"], [62, 3, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr"], [62, 8, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::Type"], [62, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::name"], [62, 4, 1, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type", "dnnl::graph::op::set_attr::value"], [169, 7, 1, "_CPPv4N4dnnl12gru_backwardE", "dnnl::gru_backward"], [169, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward"], [169, 3, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardEv", "dnnl::gru_backward::gru_backward"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc", "dnnl::gru_backward::gru_backward::pd"], [169, 7, 1, "_CPPv4N4dnnl12gru_backward14primitive_descE", "dnnl::gru_backward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv", "dnnl::gru_backward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv", "dnnl::gru_backward::primitive_desc::diff_bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv", "dnnl::gru_backward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv", "dnnl::gru_backward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv", "dnnl::gru_backward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv", "dnnl::gru_backward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv", "dnnl::gru_backward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv", "dnnl::gru_backward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv", "dnnl::gru_backward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv", "dnnl::gru_backward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv", "dnnl::gru_backward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv", "dnnl::gru_backward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv", "dnnl::gru_backward::primitive_desc::workspace_desc"], [169, 7, 1, "_CPPv4N4dnnl11gru_forwardE", "dnnl::gru_forward"], [169, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward"], [169, 3, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardEv", "dnnl::gru_forward::gru_forward"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc", "dnnl::gru_forward::gru_forward::pd"], [169, 7, 1, "_CPPv4N4dnnl11gru_forward14primitive_descE", "dnnl::gru_forward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv", "dnnl::gru_forward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv", "dnnl::gru_forward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv", "dnnl::gru_forward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv", "dnnl::gru_forward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv", "dnnl::gru_forward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv", "dnnl::gru_forward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv", "dnnl::gru_forward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv", "dnnl::gru_forward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv", "dnnl::gru_forward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv", "dnnl::gru_forward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv", "dnnl::gru_forward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv", "dnnl::gru_forward::primitive_desc::workspace_desc"], [160, 7, 1, "_CPPv4N4dnnl27inner_product_backward_dataE", "dnnl::inner_product_backward_data"], [160, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data"], [160, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv", "dnnl::inner_product_backward_data::inner_product_backward_data"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc", "dnnl::inner_product_backward_data::inner_product_backward_data::pd"], [160, 7, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE", "dnnl::inner_product_backward_data::primitive_desc"], [160, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc"], [160, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv", "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc"], [160, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind"], [160, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [160, 3, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::aengine"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::allow_empty"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::attr"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_dst_desc"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::diff_src_desc"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::hint_fwd_pd"], [160, 4, 1, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_data::primitive_desc::primitive_desc::weights_desc"], [160, 3, 1, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv", "dnnl::inner_product_backward_data::primitive_desc::weights_desc"], [160, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weightsE", "dnnl::inner_product_backward_weights"], [160, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [160, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv", "dnnl::inner_product_backward_weights::inner_product_backward_weights"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc", "dnnl::inner_product_backward_weights::inner_product_backward_weights::pd"], [160, 7, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE", "dnnl::inner_product_backward_weights::primitive_desc"], [160, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc"], [160, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc"], [160, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv", "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc"], [160, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv", "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind"], [160, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [160, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [160, 3, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::aengine"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::allow_empty"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::attr"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_bias_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_dst_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::diff_weights_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::hint_fwd_pd"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [160, 4, 1, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb", "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc::src_desc"], [160, 3, 1, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv", "dnnl::inner_product_backward_weights::primitive_desc::src_desc"], [160, 7, 1, "_CPPv4N4dnnl21inner_product_forwardE", "dnnl::inner_product_forward"], [160, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward"], [160, 3, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv", "dnnl::inner_product_forward::inner_product_forward"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc", "dnnl::inner_product_forward::inner_product_forward::pd"], [160, 7, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_descE", "dnnl::inner_product_forward::primitive_desc"], [160, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv", "dnnl::inner_product_forward::primitive_desc::bias_desc"], [160, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv", "dnnl::inner_product_forward::primitive_desc::dst_desc"], [160, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv", "dnnl::inner_product_forward::primitive_desc::get_prop_kind"], [160, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [160, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [160, 3, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv", "dnnl::inner_product_forward::primitive_desc::primitive_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aengine"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::allow_empty"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::aprop_kind"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::attr"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::bias_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::dst_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::src_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [160, 4, 1, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::inner_product_forward::primitive_desc::primitive_desc::weights_desc"], [160, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv", "dnnl::inner_product_forward::primitive_desc::src_desc"], [160, 3, 1, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv", "dnnl::inner_product_forward::primitive_desc::weights_desc"], [161, 7, 1, "_CPPv4N4dnnl28layer_normalization_backwardE", "dnnl::layer_normalization_backward"], [161, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward"], [161, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv", "dnnl::layer_normalization_backward::layer_normalization_backward"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc", "dnnl::layer_normalization_backward::layer_normalization_backward::pd"], [161, 7, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE", "dnnl::layer_normalization_backward::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv", "dnnl::layer_normalization_backward::primitive_desc::dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_backward::primitive_desc::get_epsilon"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_backward::primitive_desc::get_flags"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv", "dnnl::layer_normalization_backward::primitive_desc::mean_desc"], [161, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_dst_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::diff_src_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::epsilon"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::flags"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb", "dnnl::layer_normalization_backward::primitive_desc::primitive_desc::stat_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv", "dnnl::layer_normalization_backward::primitive_desc::src_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv", "dnnl::layer_normalization_backward::primitive_desc::variance_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv", "dnnl::layer_normalization_backward::primitive_desc::weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_backward::primitive_desc::workspace_desc"], [161, 7, 1, "_CPPv4N4dnnl27layer_normalization_forwardE", "dnnl::layer_normalization_forward"], [161, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward"], [161, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv", "dnnl::layer_normalization_forward::layer_normalization_forward"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc", "dnnl::layer_normalization_forward::layer_normalization_forward::pd"], [161, 7, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE", "dnnl::layer_normalization_forward::primitive_desc"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv", "dnnl::layer_normalization_forward::primitive_desc::dst_desc"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv", "dnnl::layer_normalization_forward::primitive_desc::get_epsilon"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv", "dnnl::layer_normalization_forward::primitive_desc::get_flags"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv", "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv", "dnnl::layer_normalization_forward::primitive_desc::mean_desc"], [161, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [161, 3, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aengine"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::allow_empty"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::aprop_kind"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::attr"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::dst_desc"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::epsilon"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::flags"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::src_desc"], [161, 4, 1, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb", "dnnl::layer_normalization_forward::primitive_desc::primitive_desc::stat_desc"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv", "dnnl::layer_normalization_forward::primitive_desc::src_desc"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv", "dnnl::layer_normalization_forward::primitive_desc::variance_desc"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv", "dnnl::layer_normalization_forward::primitive_desc::weights_desc"], [161, 3, 1, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv", "dnnl::layer_normalization_forward::primitive_desc::workspace_desc"], [169, 7, 1, "_CPPv4N4dnnl16lbr_gru_backwardE", "dnnl::lbr_gru_backward"], [169, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward"], [169, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv", "dnnl::lbr_gru_backward::lbr_gru_backward"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc", "dnnl::lbr_gru_backward::lbr_gru_backward::pd"], [169, 7, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE", "dnnl::lbr_gru_backward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv", "dnnl::lbr_gru_backward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb", "dnnl::lbr_gru_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_backward::primitive_desc::workspace_desc"], [169, 7, 1, "_CPPv4N4dnnl15lbr_gru_forwardE", "dnnl::lbr_gru_forward"], [169, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward"], [169, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv", "dnnl::lbr_gru_forward::lbr_gru_forward"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc", "dnnl::lbr_gru_forward::lbr_gru_forward::pd"], [169, 7, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE", "dnnl::lbr_gru_forward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv", "dnnl::lbr_gru_forward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv", "dnnl::lbr_gru_forward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv", "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lbr_gru_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv", "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv", "dnnl::lbr_gru_forward::primitive_desc::workspace_desc"], [162, 7, 1, "_CPPv4N4dnnl12lrn_backwardE", "dnnl::lrn_backward"], [162, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward"], [162, 3, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv", "dnnl::lrn_backward::lrn_backward"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc", "dnnl::lrn_backward::lrn_backward::pd"], [162, 7, 1, "_CPPv4N4dnnl12lrn_backward14primitive_descE", "dnnl::lrn_backward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv", "dnnl::lrn_backward::primitive_desc::diff_dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv", "dnnl::lrn_backward::primitive_desc::diff_src_desc"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv", "dnnl::lrn_backward::primitive_desc::get_algorithm"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv", "dnnl::lrn_backward::primitive_desc::get_alpha"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv", "dnnl::lrn_backward::primitive_desc::get_beta"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv", "dnnl::lrn_backward::primitive_desc::get_k"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv", "dnnl::lrn_backward::primitive_desc::get_local_size"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv", "dnnl::lrn_backward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv", "dnnl::lrn_backward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aalgorithm"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::alpha"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::beta"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_dst_desc"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::diff_src_desc"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::k"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::local_size"], [162, 4, 1, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb", "dnnl::lrn_backward::primitive_desc::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv", "dnnl::lrn_backward::primitive_desc::workspace_desc"], [162, 7, 1, "_CPPv4N4dnnl11lrn_forwardE", "dnnl::lrn_forward"], [162, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward"], [162, 3, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv", "dnnl::lrn_forward::lrn_forward"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc", "dnnl::lrn_forward::lrn_forward::pd"], [162, 7, 1, "_CPPv4N4dnnl11lrn_forward14primitive_descE", "dnnl::lrn_forward::primitive_desc"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv", "dnnl::lrn_forward::primitive_desc::dst_desc"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv", "dnnl::lrn_forward::primitive_desc::get_algorithm"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv", "dnnl::lrn_forward::primitive_desc::get_alpha"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv", "dnnl::lrn_forward::primitive_desc::get_beta"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv", "dnnl::lrn_forward::primitive_desc::get_k"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv", "dnnl::lrn_forward::primitive_desc::get_local_size"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv", "dnnl::lrn_forward::primitive_desc::get_prop_kind"], [162, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [162, 3, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv", "dnnl::lrn_forward::primitive_desc::primitive_desc"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aalgorithm"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aengine"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::allow_empty"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::alpha"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::aprop_kind"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::attr"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::beta"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::dst_desc"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::k"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::local_size"], [162, 4, 1, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb", "dnnl::lrn_forward::primitive_desc::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv", "dnnl::lrn_forward::primitive_desc::src_desc"], [162, 3, 1, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv", "dnnl::lrn_forward::primitive_desc::workspace_desc"], [169, 7, 1, "_CPPv4N4dnnl13lstm_backwardE", "dnnl::lstm_backward"], [169, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward"], [169, 3, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv", "dnnl::lstm_backward::lstm_backward"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc", "dnnl::lstm_backward::lstm_backward::pd"], [169, 7, 1, "_CPPv4N4dnnl13lstm_backward14primitive_descE", "dnnl::lstm_backward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv", "dnnl::lstm_backward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv", "dnnl::lstm_backward::primitive_desc::diff_bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv", "dnnl::lstm_backward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv", "dnnl::lstm_backward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv", "dnnl::lstm_backward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv", "dnnl::lstm_backward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv", "dnnl::lstm_backward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv", "dnnl::lstm_backward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_peephole_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::diff_weights_projection_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_peephole_desc"], [169, 4, 1, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb", "dnnl::lstm_backward::primitive_desc::primitive_desc::weights_projection_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_c_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv", "dnnl::lstm_backward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv", "dnnl::lstm_backward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv", "dnnl::lstm_backward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv", "dnnl::lstm_backward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_backward::primitive_desc::weights_peephole_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv", "dnnl::lstm_backward::primitive_desc::weights_projection_desc"], [169, 3, 1, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv", "dnnl::lstm_backward::primitive_desc::workspace_desc"], [169, 7, 1, "_CPPv4N4dnnl12lstm_forwardE", "dnnl::lstm_forward"], [169, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward"], [169, 3, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv", "dnnl::lstm_forward::lstm_forward"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc", "dnnl::lstm_forward::lstm_forward::pd"], [169, 7, 1, "_CPPv4N4dnnl12lstm_forward14primitive_descE", "dnnl::lstm_forward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv", "dnnl::lstm_forward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv", "dnnl::lstm_forward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv", "dnnl::lstm_forward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv", "dnnl::lstm_forward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv", "dnnl::lstm_forward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv", "dnnl::lstm_forward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv", "dnnl::lstm_forward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_c_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_peephole_desc"], [169, 4, 1, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::lstm_forward::primitive_desc::primitive_desc::weights_projection_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_c_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv", "dnnl::lstm_forward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv", "dnnl::lstm_forward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv", "dnnl::lstm_forward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv", "dnnl::lstm_forward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv", "dnnl::lstm_forward::primitive_desc::weights_peephole_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv", "dnnl::lstm_forward::primitive_desc::weights_projection_desc"], [169, 3, 1, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv", "dnnl::lstm_forward::primitive_desc::workspace_desc"], [163, 7, 1, "_CPPv4N4dnnl6matmulE", "dnnl::matmul"], [163, 3, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul"], [163, 3, 1, "_CPPv4N4dnnl6matmul6matmulEv", "dnnl::matmul::matmul"], [163, 4, 1, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc", "dnnl::matmul::matmul::pd"], [163, 7, 1, "_CPPv4N4dnnl6matmul14primitive_descE", "dnnl::matmul::primitive_desc"], [163, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv", "dnnl::matmul::primitive_desc::bias_desc"], [163, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv", "dnnl::matmul::primitive_desc::dst_desc"], [163, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc"], [163, 3, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv", "dnnl::matmul::primitive_desc::primitive_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::aengine"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::allow_empty"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::attr"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::bias_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::dst_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::src_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [163, 4, 1, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::matmul::primitive_desc::primitive_desc::weights_desc"], [163, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv", "dnnl::matmul::primitive_desc::src_desc"], [163, 3, 1, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv", "dnnl::matmul::primitive_desc::weights_desc"], [59, 7, 1, "_CPPv4N4dnnl6memoryE", "dnnl::memory"], [54, 9, 1, "_CPPv4N4dnnl6memory9data_typeE", "dnnl::memory::data_type"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type4bf16E", "dnnl::memory::data_type::bf16"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type3f16E", "dnnl::memory::data_type::f16"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type3f32E", "dnnl::memory::data_type::f32"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type3s32E", "dnnl::memory::data_type::s32"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type2s8E", "dnnl::memory::data_type::s8"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type2u8E", "dnnl::memory::data_type::u8"], [54, 10, 1, "_CPPv4N4dnnl6memory9data_type5undefE", "dnnl::memory::data_type::undef"], [59, 7, 1, "_CPPv4N4dnnl6memory4descE", "dnnl::memory::desc"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc9data_typeEv", "dnnl::memory::desc::data_type"], [59, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc"], [59, 3, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc"], [59, 3, 1, "_CPPv4N4dnnl6memory4desc4descEv", "dnnl::memory::desc::desc"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adata_type"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adata_type"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::adims"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::adims"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::aformat_tag"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb", "dnnl::memory::desc::desc::allow_empty"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::allow_empty"], [59, 4, 1, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb", "dnnl::memory::desc::desc::strides"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc4dimsEv", "dnnl::memory::desc::dims"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc8get_sizeEv", "dnnl::memory::desc::get_size"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc7is_zeroEv", "dnnl::memory::desc::is_zero"], [59, 3, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!="], [59, 4, 1, "_CPPv4NK4dnnl6memory4descneERK4desc", "dnnl::memory::desc::operator!=::other"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator=="], [59, 4, 1, "_CPPv4NK4dnnl6memory4desceqERK4desc", "dnnl::memory::desc::operator==::other"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::allow_empty"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb", "dnnl::memory::desc::permute_axes::permutation"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::adims"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb", "dnnl::memory::desc::reshape::allow_empty"], [59, 3, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::adims"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::allow_empty"], [59, 4, 1, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb", "dnnl::memory::desc::submemory_desc::offsets"], [58, 5, 1, "_CPPv4N4dnnl6memory3dimE", "dnnl::memory::dim"], [58, 5, 1, "_CPPv4N4dnnl6memory4dimsE", "dnnl::memory::dims"], [57, 9, 1, "_CPPv4N4dnnl6memory10format_tagE", "dnnl::memory::format_tag"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag1aE", "dnnl::memory::format_tag::a"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2abE", "dnnl::memory::format_tag::ab"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3abcE", "dnnl::memory::format_tag::abc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abcdE", "dnnl::memory::format_tag::abcd"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abcdeE", "dnnl::memory::format_tag::abcde"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag6abcdefE", "dnnl::memory::format_tag::abcdef"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4abdcE", "dnnl::memory::format_tag::abdc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5abdecE", "dnnl::memory::format_tag::abdec"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3acbE", "dnnl::memory::format_tag::acb"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acbdeE", "dnnl::memory::format_tag::acbde"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag6acbdefE", "dnnl::memory::format_tag::acbdef"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4acdbE", "dnnl::memory::format_tag::acdb"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5acdebE", "dnnl::memory::format_tag::acdeb"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3anyE", "dnnl::memory::format_tag::any"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2baE", "dnnl::memory::format_tag::ba"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bacE", "dnnl::memory::format_tag::bac"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bacdE", "dnnl::memory::format_tag::bacd"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bacdeE", "dnnl::memory::format_tag::bacde"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3bcaE", "dnnl::memory::format_tag::bca"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4bcdaE", "dnnl::memory::format_tag::bcda"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5bcdeaE", "dnnl::memory::format_tag::bcdea"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3cbaE", "dnnl::memory::format_tag::cba"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4cdbaE", "dnnl::memory::format_tag::cdba"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5cdebaE", "dnnl::memory::format_tag::cdeba"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4chwnE", "dnnl::memory::format_tag::chwn"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2cnE", "dnnl::memory::format_tag::cn"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4dcabE", "dnnl::memory::format_tag::dcab"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5decabE", "dnnl::memory::format_tag::decab"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag6defcabE", "dnnl::memory::format_tag::defcab"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag6dhwigoE", "dnnl::memory::format_tag::dhwigo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5dhwioE", "dnnl::memory::format_tag::dhwio"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag6giodhwE", "dnnl::memory::format_tag::giodhw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5giohwE", "dnnl::memory::format_tag::giohw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag6goidhwE", "dnnl::memory::format_tag::goidhw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5goihwE", "dnnl::memory::format_tag::goihw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4goiwE", "dnnl::memory::format_tag::goiw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5hwigoE", "dnnl::memory::format_tag::hwigo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4hwioE", "dnnl::memory::format_tag::hwio"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5idhwoE", "dnnl::memory::format_tag::idhwo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ihwoE", "dnnl::memory::format_tag::ihwo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ioE", "dnnl::memory::format_tag::io"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5iodhwE", "dnnl::memory::format_tag::iodhw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4iohwE", "dnnl::memory::format_tag::iohw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3iwoE", "dnnl::memory::format_tag::iwo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldgoE", "dnnl::memory::format_tag::ldgo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldgoiE", "dnnl::memory::format_tag::ldgoi"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ldigoE", "dnnl::memory::format_tag::ldigo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldioE", "dnnl::memory::format_tag::ldio"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldncE", "dnnl::memory::format_tag::ldnc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ldoiE", "dnnl::memory::format_tag::ldoi"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ncE", "dnnl::memory::format_tag::nc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ncdhwE", "dnnl::memory::format_tag::ncdhw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nchwE", "dnnl::memory::format_tag::nchw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ncwE", "dnnl::memory::format_tag::ncw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5ndhwcE", "dnnl::memory::format_tag::ndhwc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4nhwcE", "dnnl::memory::format_tag::nhwc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2ntE", "dnnl::memory::format_tag::nt"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3ntcE", "dnnl::memory::format_tag::ntc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3nwcE", "dnnl::memory::format_tag::nwc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5odhwiE", "dnnl::memory::format_tag::odhwi"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4ohwiE", "dnnl::memory::format_tag::ohwi"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2oiE", "dnnl::memory::format_tag::oi"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5oidhwE", "dnnl::memory::format_tag::oidhw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4oihwE", "dnnl::memory::format_tag::oihw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3oiwE", "dnnl::memory::format_tag::oiw"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3owiE", "dnnl::memory::format_tag::owi"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag2tnE", "dnnl::memory::format_tag::tn"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3tncE", "dnnl::memory::format_tag::tnc"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag5undefE", "dnnl::memory::format_tag::undef"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag4wigoE", "dnnl::memory::format_tag::wigo"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag3wioE", "dnnl::memory::format_tag::wio"], [57, 10, 1, "_CPPv4N4dnnl6memory10format_tag1xE", "dnnl::memory::format_tag::x"], [59, 3, 1, "_CPPv4NK4dnnl6memory15get_data_handleEv", "dnnl::memory::get_data_handle"], [59, 3, 1, "_CPPv4NK4dnnl6memory8get_descEv", "dnnl::memory::get_desc"], [59, 3, 1, "_CPPv4NK4dnnl6memory10get_engineEv", "dnnl::memory::get_engine"], [59, 3, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data"], [59, 8, 1, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv", "dnnl::memory::map_data::T"], [59, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory"], [59, 3, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory"], [59, 3, 1, "_CPPv4N4dnnl6memory6memoryEv", "dnnl::memory::memory"], [59, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::aengine"], [59, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::aengine"], [59, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::handle"], [59, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine", "dnnl::memory::memory::md"], [59, 4, 1, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv", "dnnl::memory::memory::md"], [59, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle"], [59, 3, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle"], [59, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::astream"], [59, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPv", "dnnl::memory::set_data_handle::handle"], [59, 4, 1, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream", "dnnl::memory::set_data_handle::handle"], [59, 3, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data"], [59, 4, 1, "_CPPv4NK4dnnl6memory10unmap_dataEPv", "dnnl::memory::unmap_data::mapped_ptr"], [158, 9, 1, "_CPPv4N4dnnl19normalization_flagsE", "dnnl::normalization_flags"], [158, 10, 1, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE", "dnnl::normalization_flags::fuse_norm_relu"], [158, 10, 1, "_CPPv4N4dnnl19normalization_flags4noneE", "dnnl::normalization_flags::none"], [158, 10, 1, "_CPPv4N4dnnl19normalization_flags16use_global_statsE", "dnnl::normalization_flags::use_global_stats"], [158, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_scaleE", "dnnl::normalization_flags::use_scale"], [158, 10, 1, "_CPPv4N4dnnl19normalization_flags9use_shiftE", "dnnl::normalization_flags::use_shift"], [164, 7, 1, "_CPPv4N4dnnl16pooling_backwardE", "dnnl::pooling_backward"], [164, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward"], [164, 3, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv", "dnnl::pooling_backward::pooling_backward"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc", "dnnl::pooling_backward::pooling_backward::pd"], [164, 7, 1, "_CPPv4N4dnnl16pooling_backward14primitive_descE", "dnnl::pooling_backward::primitive_desc"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv", "dnnl::pooling_backward::primitive_desc::diff_dst_desc"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv", "dnnl::pooling_backward::primitive_desc::diff_src_desc"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv", "dnnl::pooling_backward::primitive_desc::get_algorithm"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv", "dnnl::pooling_backward::primitive_desc::get_dilations"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv", "dnnl::pooling_backward::primitive_desc::get_kernel"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv", "dnnl::pooling_backward::primitive_desc::get_padding_l"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv", "dnnl::pooling_backward::primitive_desc::get_padding_r"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv", "dnnl::pooling_backward::primitive_desc::get_prop_kind"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv", "dnnl::pooling_backward::primitive_desc::get_strides"], [164, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv", "dnnl::pooling_backward::primitive_desc::primitive_desc"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aalgorithm"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::diff_src_desc"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::dilation"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::kernel"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_l"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::padding_r"], [164, 4, 1, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb", "dnnl::pooling_backward::primitive_desc::primitive_desc::strides"], [164, 3, 1, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv", "dnnl::pooling_backward::primitive_desc::workspace_desc"], [164, 7, 1, "_CPPv4N4dnnl15pooling_forwardE", "dnnl::pooling_forward"], [164, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward"], [164, 3, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv", "dnnl::pooling_forward::pooling_forward"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc", "dnnl::pooling_forward::pooling_forward::pd"], [164, 7, 1, "_CPPv4N4dnnl15pooling_forward14primitive_descE", "dnnl::pooling_forward::primitive_desc"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv", "dnnl::pooling_forward::primitive_desc::dst_desc"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv", "dnnl::pooling_forward::primitive_desc::get_algorithm"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv", "dnnl::pooling_forward::primitive_desc::get_dilations"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv", "dnnl::pooling_forward::primitive_desc::get_kernel"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv", "dnnl::pooling_forward::primitive_desc::get_padding_l"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv", "dnnl::pooling_forward::primitive_desc::get_padding_r"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv", "dnnl::pooling_forward::primitive_desc::get_prop_kind"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv", "dnnl::pooling_forward::primitive_desc::get_strides"], [164, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [164, 3, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv", "dnnl::pooling_forward::primitive_desc::primitive_desc"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aalgorithm"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aengine"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::allow_empty"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::aprop_kind"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::attr"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dilation"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::dst_desc"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::kernel"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_l"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::padding_r"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::src_desc"], [164, 4, 1, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb", "dnnl::pooling_forward::primitive_desc::primitive_desc::strides"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv", "dnnl::pooling_forward::primitive_desc::src_desc"], [164, 3, 1, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv", "dnnl::pooling_forward::primitive_desc::workspace_desc"], [152, 7, 1, "_CPPv4N4dnnl8post_opsE", "dnnl::post_ops"], [152, 3, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary"], [152, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::aalgorithm"], [152, 4, 1, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE", "dnnl::post_ops::append_binary::src1_desc"], [152, 3, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise"], [152, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::aalgorithm"], [152, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::alpha"], [152, 4, 1, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff", "dnnl::post_ops::append_eltwise::beta"], [152, 3, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum"], [152, 4, 1, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE", "dnnl::post_ops::append_sum::data_type"], [152, 3, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::aalgorithm"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::index"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE", "dnnl::post_ops::get_params_binary::src1_desc"], [152, 3, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::aalgorithm"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::alpha"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::beta"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf", "dnnl::post_ops::get_params_eltwise::index"], [152, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum"], [152, 3, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::data_type"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::index"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::index"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf", "dnnl::post_ops::get_params_sum::scale"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE", "dnnl::post_ops::get_params_sum::scale"], [152, 3, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind"], [152, 4, 1, "_CPPv4NK4dnnl8post_ops4kindEi", "dnnl::post_ops::kind::index"], [152, 3, 1, "_CPPv4NK4dnnl8post_ops3lenEv", "dnnl::post_ops::len"], [152, 3, 1, "_CPPv4N4dnnl8post_ops8post_opsEv", "dnnl::post_ops::post_ops"], [165, 7, 1, "_CPPv4N4dnnl14prelu_backwardE", "dnnl::prelu_backward"], [165, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward"], [165, 3, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv", "dnnl::prelu_backward::prelu_backward"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc", "dnnl::prelu_backward::prelu_backward::pd"], [165, 7, 1, "_CPPv4N4dnnl14prelu_backward14primitive_descE", "dnnl::prelu_backward::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv", "dnnl::prelu_backward::primitive_desc::diff_dst_desc"], [165, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv", "dnnl::prelu_backward::primitive_desc::diff_src_desc"], [165, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv", "dnnl::prelu_backward::primitive_desc::get_prop_kind"], [165, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv", "dnnl::prelu_backward::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_dst_desc"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_src_desc"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::diff_weights_desc"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::src_desc"], [165, 4, 1, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb", "dnnl::prelu_backward::primitive_desc::primitive_desc::weight_desc"], [165, 3, 1, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv", "dnnl::prelu_backward::primitive_desc::src_desc"], [165, 7, 1, "_CPPv4N4dnnl13prelu_forwardE", "dnnl::prelu_forward"], [165, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward"], [165, 3, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv", "dnnl::prelu_forward::prelu_forward"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc", "dnnl::prelu_forward::prelu_forward::pd"], [165, 7, 1, "_CPPv4N4dnnl13prelu_forward14primitive_descE", "dnnl::prelu_forward::primitive_desc"], [165, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv", "dnnl::prelu_forward::primitive_desc::dst_desc"], [165, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv", "dnnl::prelu_forward::primitive_desc::get_prop_kind"], [165, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [165, 3, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv", "dnnl::prelu_forward::primitive_desc::primitive_desc"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aengine"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::allow_empty"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::aprop_kind"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::attr"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::dst_desc"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::src_desc"], [165, 4, 1, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::prelu_forward::primitive_desc::primitive_desc::weight_desc"], [165, 3, 1, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv", "dnnl::prelu_forward::primitive_desc::src_desc"], [158, 7, 1, "_CPPv4N4dnnl9primitiveE", "dnnl::primitive"], [158, 3, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute"], [158, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::args"], [158, 4, 1, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE", "dnnl::primitive::execute::astream"], [158, 3, 1, "_CPPv4NK4dnnl9primitive8get_kindEv", "dnnl::primitive::get_kind"], [158, 9, 1, "_CPPv4N4dnnl9primitive4kindE", "dnnl::primitive::kind"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE", "dnnl::primitive::kind::batch_normalization"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind6binaryE", "dnnl::primitive::kind::binary"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind6concatE", "dnnl::primitive::kind::concat"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind11convolutionE", "dnnl::primitive::kind::convolution"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind13deconvolutionE", "dnnl::primitive::kind::deconvolution"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind7eltwiseE", "dnnl::primitive::kind::eltwise"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind13inner_productE", "dnnl::primitive::kind::inner_product"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE", "dnnl::primitive::kind::layer_normalization"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind3lrnE", "dnnl::primitive::kind::lrn"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind6matmulE", "dnnl::primitive::kind::matmul"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind7poolingE", "dnnl::primitive::kind::pooling"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind5preluE", "dnnl::primitive::kind::prelu"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind7reorderE", "dnnl::primitive::kind::reorder"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind10resamplingE", "dnnl::primitive::kind::resampling"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind3rnnE", "dnnl::primitive::kind::rnn"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind7shuffleE", "dnnl::primitive::kind::shuffle"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind7softmaxE", "dnnl::primitive::kind::softmax"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind3sumE", "dnnl::primitive::kind::sum"], [158, 10, 1, "_CPPv4N4dnnl9primitive4kind5undefE", "dnnl::primitive::kind::undef"], [158, 3, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator="], [158, 4, 1, "_CPPv4N4dnnl9primitiveaSERK9primitive", "dnnl::primitive::operator=::rhs"], [158, 3, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive"], [158, 3, 1, "_CPPv4N4dnnl9primitive9primitiveEv", "dnnl::primitive::primitive"], [158, 4, 1, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base", "dnnl::primitive::primitive::pd"], [151, 7, 1, "_CPPv4N4dnnl14primitive_attrE", "dnnl::primitive_attr"], [151, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv", "dnnl::primitive_attr::get_fpmath_mode"], [151, 3, 1, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv", "dnnl::primitive_attr::get_post_ops"], [151, 3, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask"], [151, 4, 1, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi", "dnnl::primitive_attr::get_scales_mask::arg"], [151, 3, 1, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv", "dnnl::primitive_attr::get_scratchpad_mode"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv", "dnnl::primitive_attr::primitive_attr"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode", "dnnl::primitive_attr::set_fpmath_mode::mode"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops", "dnnl::primitive_attr::set_post_ops::ops"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::scale"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff", "dnnl::primitive_attr::set_rnn_data_qparams::shift"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::mask"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE", "dnnl::primitive_attr::set_rnn_weights_qparams::scales"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::arg"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii", "dnnl::primitive_attr::set_scales_mask::mask"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode", "dnnl::primitive_attr::set_scratchpad_mode::mode"], [151, 3, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::arg"], [151, 4, 1, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii", "dnnl::primitive_attr::set_zero_points_mask::mask"], [158, 7, 1, "_CPPv4N4dnnl14primitive_descE", "dnnl::primitive_desc"], [158, 3, 1, "_CPPv4N4dnnl14primitive_desc9next_implEv", "dnnl::primitive_desc::next_impl"], [158, 3, 1, "_CPPv4N4dnnl14primitive_desc14primitive_descEv", "dnnl::primitive_desc::primitive_desc"], [158, 7, 1, "_CPPv4N4dnnl19primitive_desc_baseE", "dnnl::primitive_desc_base"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv", "dnnl::primitive_desc_base::bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv", "dnnl::primitive_desc_base::diff_dst_desc"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi", "dnnl::primitive_desc_base::diff_dst_desc::idx"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv", "dnnl::primitive_desc_base::diff_src_desc"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi", "dnnl::primitive_desc_base::diff_src_desc::idx"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv", "dnnl::primitive_desc_base::diff_weights_desc"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi", "dnnl::primitive_desc_base::diff_weights_desc::idx"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv", "dnnl::primitive_desc_base::dst_desc"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi", "dnnl::primitive_desc_base::dst_desc::idx"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv", "dnnl::primitive_desc_base::get_activation_kind"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv", "dnnl::primitive_desc_base::get_algorithm"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv", "dnnl::primitive_desc_base::get_alpha"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv", "dnnl::primitive_desc_base::get_axis"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv", "dnnl::primitive_desc_base::get_beta"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv", "dnnl::primitive_desc_base::get_cell_kind"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv", "dnnl::primitive_desc_base::get_dilations"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv", "dnnl::primitive_desc_base::get_direction"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv", "dnnl::primitive_desc_base::get_engine"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv", "dnnl::primitive_desc_base::get_epsilon"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv", "dnnl::primitive_desc_base::get_factors"], [158, 3, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags"], [158, 8, 1, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv", "dnnl::primitive_desc_base::get_flags::T"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv", "dnnl::primitive_desc_base::get_group_size"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv", "dnnl::primitive_desc_base::get_k"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv", "dnnl::primitive_desc_base::get_kernel"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv", "dnnl::primitive_desc_base::get_kind"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv", "dnnl::primitive_desc_base::get_local_size"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv", "dnnl::primitive_desc_base::get_p"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv", "dnnl::primitive_desc_base::get_padding_l"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv", "dnnl::primitive_desc_base::get_padding_r"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv", "dnnl::primitive_desc_base::get_primitive_attr"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv", "dnnl::primitive_desc_base::get_prop_kind"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv", "dnnl::primitive_desc_base::get_strides"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv", "dnnl::primitive_desc_base::impl_info_str"], [158, 3, 1, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv", "dnnl::primitive_desc_base::primitive_desc_base"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::idx"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi", "dnnl::primitive_desc_base::query_md::what"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query", "dnnl::primitive_desc_base::query_s64::what"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv", "dnnl::primitive_desc_base::scratchpad_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv", "dnnl::primitive_desc_base::scratchpad_engine"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv", "dnnl::primitive_desc_base::src_desc"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi", "dnnl::primitive_desc_base::src_desc::idx"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv", "dnnl::primitive_desc_base::weights_desc"], [158, 4, 1, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi", "dnnl::primitive_desc_base::weights_desc::idx"], [158, 3, 1, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv", "dnnl::primitive_desc_base::workspace_desc"], [158, 9, 1, "_CPPv4N4dnnl9prop_kindE", "dnnl::prop_kind"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind8backwardE", "dnnl::prop_kind::backward"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_biasE", "dnnl::prop_kind::backward_bias"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind13backward_dataE", "dnnl::prop_kind::backward_data"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind16backward_weightsE", "dnnl::prop_kind::backward_weights"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind7forwardE", "dnnl::prop_kind::forward"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind17forward_inferenceE", "dnnl::prop_kind::forward_inference"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind15forward_scoringE", "dnnl::prop_kind::forward_scoring"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind16forward_trainingE", "dnnl::prop_kind::forward_training"], [158, 10, 1, "_CPPv4N4dnnl9prop_kind5undefE", "dnnl::prop_kind::undef"], [166, 7, 1, "_CPPv4N4dnnl9reductionE", "dnnl::reduction"], [166, 7, 1, "_CPPv4N4dnnl9reduction14primitive_descE", "dnnl::reduction::primitive_desc"], [166, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv", "dnnl::reduction::primitive_desc::dst_desc"], [166, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv", "dnnl::reduction::primitive_desc::get_algorithm"], [166, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv", "dnnl::reduction::primitive_desc::get_epsilon"], [166, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv", "dnnl::reduction::primitive_desc::get_p"], [166, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc"], [166, 3, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv", "dnnl::reduction::primitive_desc::primitive_desc"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aalgorithm"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::aengine"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::allow_empty"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::attr"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::dst_desc"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::eps"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::p"], [166, 4, 1, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb", "dnnl::reduction::primitive_desc::primitive_desc::src_desc"], [166, 3, 1, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv", "dnnl::reduction::primitive_desc::src_desc"], [166, 3, 1, "_CPPv4N4dnnl9reduction9reductionEv", "dnnl::reduction::reduction"], [167, 7, 1, "_CPPv4N4dnnl7reorderE", "dnnl::reorder"], [167, 3, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute"], [167, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::astream"], [167, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::dst"], [167, 4, 1, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory", "dnnl::reorder::execute::src"], [167, 7, 1, "_CPPv4N4dnnl7reorder14primitive_descE", "dnnl::reorder::primitive_desc"], [167, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv", "dnnl::reorder::primitive_desc::dst_desc"], [167, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv", "dnnl::reorder::primitive_desc::get_dst_engine"], [167, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv", "dnnl::reorder::primitive_desc::get_src_engine"], [167, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [167, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc"], [167, 3, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv", "dnnl::reorder::primitive_desc::primitive_desc"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::allow_empty"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::attr"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_engine"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::dst_md"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_engine"], [167, 4, 1, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb", "dnnl::reorder::primitive_desc::primitive_desc::src_md"], [167, 3, 1, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv", "dnnl::reorder::primitive_desc::src_desc"], [167, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder"], [167, 3, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder"], [167, 3, 1, "_CPPv4N4dnnl7reorder7reorderEv", "dnnl::reorder::reorder"], [167, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::attr"], [167, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::dst"], [167, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc", "dnnl::reorder::reorder::pd"], [167, 4, 1, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr", "dnnl::reorder::reorder::src"], [168, 7, 1, "_CPPv4N4dnnl19resampling_backwardE", "dnnl::resampling_backward"], [168, 7, 1, "_CPPv4N4dnnl19resampling_backward14primitive_descE", "dnnl::resampling_backward::primitive_desc"], [168, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv", "dnnl::resampling_backward::primitive_desc::diff_dst_desc"], [168, 3, 1, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv", "dnnl::resampling_backward::primitive_desc::diff_src_desc"], [168, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv", "dnnl::resampling_backward::primitive_desc::primitive_desc"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aalgorithm"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::aengine"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_dst_desc"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::diff_src_desc"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::factors"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb", "dnnl::resampling_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [168, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward"], [168, 3, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv", "dnnl::resampling_backward::resampling_backward"], [168, 4, 1, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc", "dnnl::resampling_backward::resampling_backward::pd"], [168, 7, 1, "_CPPv4N4dnnl18resampling_forwardE", "dnnl::resampling_forward"], [168, 7, 1, "_CPPv4N4dnnl18resampling_forward14primitive_descE", "dnnl::resampling_forward::primitive_desc"], [168, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv", "dnnl::resampling_forward::primitive_desc::dst_desc"], [168, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [168, 3, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv", "dnnl::resampling_forward::primitive_desc::primitive_desc"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aalgorithm"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aengine"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::allow_empty"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::aprop_kind"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::attr"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::dst_desc"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::factors"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::resampling_forward::primitive_desc::primitive_desc::src_desc"], [168, 3, 1, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv", "dnnl::resampling_forward::primitive_desc::src_desc"], [168, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward"], [168, 3, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv", "dnnl::resampling_forward::resampling_forward"], [168, 4, 1, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc", "dnnl::resampling_forward::resampling_forward::pd"], [169, 9, 1, "_CPPv4N4dnnl13rnn_directionE", "dnnl::rnn_direction"], [169, 10, 1, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE", "dnnl::rnn_direction::bidirectional_concat"], [169, 10, 1, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE", "dnnl::rnn_direction::bidirectional_sum"], [169, 10, 1, "_CPPv4N4dnnl13rnn_direction5undefE", "dnnl::rnn_direction::undef"], [169, 10, 1, "_CPPv4N4dnnl13rnn_direction14unidirectionalE", "dnnl::rnn_direction::unidirectional"], [169, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE", "dnnl::rnn_direction::unidirectional_left2right"], [169, 10, 1, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE", "dnnl::rnn_direction::unidirectional_right2left"], [169, 9, 1, "_CPPv4N4dnnl9rnn_flagsE", "dnnl::rnn_flags"], [169, 10, 1, "_CPPv4N4dnnl9rnn_flags5undefE", "dnnl::rnn_flags::undef"], [158, 7, 1, "_CPPv4N4dnnl23rnn_primitive_desc_baseE", "dnnl::rnn_primitive_desc_base"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv", "dnnl::rnn_primitive_desc_base::augru_attention_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv", "dnnl::rnn_primitive_desc_base::bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv", "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv", "dnnl::rnn_primitive_desc_base::diff_bias_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_src_iter_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_src_layer_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv", "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_c_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv", "dnnl::rnn_primitive_desc_base::dst_iter_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv", "dnnl::rnn_primitive_desc_base::dst_layer_desc"], [158, 3, 1, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv", "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv", "dnnl::rnn_primitive_desc_base::src_iter_c_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv", "dnnl::rnn_primitive_desc_base::src_iter_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv", "dnnl::rnn_primitive_desc_base::src_layer_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv", "dnnl::rnn_primitive_desc_base::weights_iter_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv", "dnnl::rnn_primitive_desc_base::weights_layer_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv", "dnnl::rnn_primitive_desc_base::weights_peephole_desc"], [158, 3, 1, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv", "dnnl::rnn_primitive_desc_base::weights_projection_desc"], [151, 9, 1, "_CPPv4N4dnnl15scratchpad_modeE", "dnnl::scratchpad_mode"], [151, 10, 1, "_CPPv4N4dnnl15scratchpad_mode7libraryE", "dnnl::scratchpad_mode::library"], [151, 10, 1, "_CPPv4N4dnnl15scratchpad_mode4userE", "dnnl::scratchpad_mode::user"], [170, 7, 1, "_CPPv4N4dnnl16shuffle_backwardE", "dnnl::shuffle_backward"], [170, 7, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_descE", "dnnl::shuffle_backward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv", "dnnl::shuffle_backward::primitive_desc::diff_dst_desc"], [170, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv", "dnnl::shuffle_backward::primitive_desc::diff_src_desc"], [170, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv", "dnnl::shuffle_backward::primitive_desc::get_axis"], [170, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_backward::primitive_desc::get_group_size"], [170, 3, 1, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_backward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv", "dnnl::shuffle_backward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::axis"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_dst_desc"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::diff_src_desc"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::group_size"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb", "dnnl::shuffle_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [170, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward"], [170, 3, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv", "dnnl::shuffle_backward::shuffle_backward"], [170, 4, 1, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc", "dnnl::shuffle_backward::shuffle_backward::pd"], [170, 7, 1, "_CPPv4N4dnnl15shuffle_forwardE", "dnnl::shuffle_forward"], [170, 7, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_descE", "dnnl::shuffle_forward::primitive_desc"], [170, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv", "dnnl::shuffle_forward::primitive_desc::dst_desc"], [170, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv", "dnnl::shuffle_forward::primitive_desc::get_axis"], [170, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv", "dnnl::shuffle_forward::primitive_desc::get_group_size"], [170, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv", "dnnl::shuffle_forward::primitive_desc::get_prop_kind"], [170, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [170, 3, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv", "dnnl::shuffle_forward::primitive_desc::primitive_desc"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aengine"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::allow_empty"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::aprop_kind"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::attr"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::axis"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::dst_desc"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::group_size"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb", "dnnl::shuffle_forward::primitive_desc::primitive_desc::src_desc"], [170, 3, 1, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv", "dnnl::shuffle_forward::primitive_desc::src_desc"], [170, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward"], [170, 3, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv", "dnnl::shuffle_forward::shuffle_forward"], [170, 4, 1, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc", "dnnl::shuffle_forward::shuffle_forward::pd"], [171, 7, 1, "_CPPv4N4dnnl16softmax_backwardE", "dnnl::softmax_backward"], [171, 7, 1, "_CPPv4N4dnnl16softmax_backward14primitive_descE", "dnnl::softmax_backward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv", "dnnl::softmax_backward::primitive_desc::diff_dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv", "dnnl::softmax_backward::primitive_desc::diff_src_desc"], [171, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv", "dnnl::softmax_backward::primitive_desc::dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv", "dnnl::softmax_backward::primitive_desc::get_algorithm"], [171, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv", "dnnl::softmax_backward::primitive_desc::get_axis"], [171, 3, 1, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv", "dnnl::softmax_backward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv", "dnnl::softmax_backward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aalgorithm"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::axis"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_dst_desc"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::diff_src_desc"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::dst_desc"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb", "dnnl::softmax_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [171, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward"], [171, 3, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv", "dnnl::softmax_backward::softmax_backward"], [171, 4, 1, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc", "dnnl::softmax_backward::softmax_backward::pd"], [171, 7, 1, "_CPPv4N4dnnl15softmax_forwardE", "dnnl::softmax_forward"], [171, 7, 1, "_CPPv4N4dnnl15softmax_forward14primitive_descE", "dnnl::softmax_forward::primitive_desc"], [171, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv", "dnnl::softmax_forward::primitive_desc::dst_desc"], [171, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv", "dnnl::softmax_forward::primitive_desc::get_algorithm"], [171, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv", "dnnl::softmax_forward::primitive_desc::get_axis"], [171, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv", "dnnl::softmax_forward::primitive_desc::get_prop_kind"], [171, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [171, 3, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv", "dnnl::softmax_forward::primitive_desc::primitive_desc"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aalgorithm"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aengine"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::allow_empty"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::aprop_kind"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::attr"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::axis"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::dst_desc"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb", "dnnl::softmax_forward::primitive_desc::primitive_desc::src_desc"], [171, 3, 1, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv", "dnnl::softmax_forward::primitive_desc::src_desc"], [171, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward"], [171, 3, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv", "dnnl::softmax_forward::softmax_forward"], [171, 4, 1, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc", "dnnl::softmax_forward::softmax_forward::pd"], [60, 7, 1, "_CPPv4N4dnnl6streamE", "dnnl::stream"], [60, 9, 1, "_CPPv4N4dnnl6stream5flagsE", "dnnl::stream::flags"], [60, 10, 1, "_CPPv4N4dnnl6stream5flags13default_flagsE", "dnnl::stream::flags::default_flags"], [60, 10, 1, "_CPPv4N4dnnl6stream5flags8in_orderE", "dnnl::stream::flags::in_order"], [60, 10, 1, "_CPPv4N4dnnl6stream5flags12out_of_orderE", "dnnl::stream::flags::out_of_order"], [60, 3, 1, "_CPPv4NK4dnnl6stream10get_engineEv", "dnnl::stream::get_engine"], [60, 3, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream"], [60, 3, 1, "_CPPv4N4dnnl6stream6streamEv", "dnnl::stream::stream"], [60, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aengine"], [60, 4, 1, "_CPPv4N4dnnl6stream6streamERK6engine5flags", "dnnl::stream::stream::aflags"], [60, 3, 1, "_CPPv4N4dnnl6stream4waitEv", "dnnl::stream::wait"], [172, 7, 1, "_CPPv4N4dnnl3sumE", "dnnl::sum"], [172, 7, 1, "_CPPv4N4dnnl3sum14primitive_descE", "dnnl::sum::primitive_desc"], [172, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv", "dnnl::sum::primitive_desc::dst_desc"], [172, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc"], [172, 3, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv", "dnnl::sum::primitive_desc::primitive_desc"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::aengine"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::attr"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::dst"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::scales"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [172, 4, 1, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr", "dnnl::sum::primitive_desc::primitive_desc::srcs"], [172, 3, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc"], [172, 4, 1, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi", "dnnl::sum::primitive_desc::src_desc::idx"], [172, 3, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum"], [172, 3, 1, "_CPPv4N4dnnl3sum3sumEv", "dnnl::sum::sum"], [172, 4, 1, "_CPPv4N4dnnl3sum3sumERK14primitive_desc", "dnnl::sum::sum::pd"], [158, 3, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute"], [158, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::aprimitive"], [158, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::args"], [158, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::astream"], [158, 4, 1, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE", "dnnl::sycl_interop::execute::dependencies"], [59, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::T"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::amemory"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory", "dnnl::sycl_interop::get_buffer::ndims"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine", "dnnl::sycl_interop::get_context::aengine"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine", "dnnl::sycl_interop::get_device::aengine"], [59, 3, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory", "dnnl::sycl_interop::get_memory_kind::amemory"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream", "dnnl::sycl_interop::get_queue::astream"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::acontext"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE", "dnnl::sycl_interop::make_engine::adevice"], [59, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [59, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory"], [59, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory"], [59, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::T"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::abuffer"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::adesc"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::adesc"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::aengine"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::aengine"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::ahandle"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::akind"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::astream"], [59, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv", "dnnl::sycl_interop::make_memory::astream"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::make_memory::ndims"], [60, 3, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aengine"], [60, 4, 1, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE", "dnnl::sycl_interop::make_stream::aqueue"], [59, 9, 1, "_CPPv4N4dnnl12sycl_interop11memory_kindE", "dnnl::sycl_interop::memory_kind"], [59, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE", "dnnl::sycl_interop::memory_kind::buffer"], [59, 10, 1, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE", "dnnl::sycl_interop::memory_kind::usm"], [59, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer"], [59, 3, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::T"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::T"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::abuffer"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::abuffer"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::amemory"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::amemory"], [59, 4, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::astream"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE", "dnnl::sycl_interop::set_buffer::ndims"], [59, 8, 1, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream", "dnnl::sycl_interop::set_buffer::ndims"], [169, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backwardE", "dnnl::vanilla_rnn_backward"], [169, 7, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE", "dnnl::vanilla_rnn_backward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_beta"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::activation"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::alpha"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_bias_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::diff_weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::hint_fwd_pd"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb", "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc"], [169, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [169, 3, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward"], [169, 4, 1, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc", "dnnl::vanilla_rnn_backward::vanilla_rnn_backward::pd"], [169, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forwardE", "dnnl::vanilla_rnn_forward"], [169, 7, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE", "dnnl::vanilla_rnn_forward::primitive_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_beta"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_direction"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv", "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind"], [169, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [169, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::activation"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aengine"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::allow_empty"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::alpha"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::aprop_kind"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::attr"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::bias_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::direction"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::dst_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::src_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_iter_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb", "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc"], [169, 3, 1, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv", "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc"], [169, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [169, 3, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward"], [169, 4, 1, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc", "dnnl::vanilla_rnn_forward::vanilla_rnn_forward::pd"], [795, 3, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate"], [795, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::alignment"], [795, 4, 1, "_CPPv411do_allocate6size_t6size_t", "do_allocate::n"], [795, 3, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate"], [795, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::alignment"], [795, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::n"], [795, 4, 1, "_CPPv413do_deallocatePv6size_t6size_t", "do_deallocate::p"], [795, 3, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal"], [795, 4, 1, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE", "do_is_equal::other"], [560, 3, 1, "_CPPv4NK5emptyEv", "empty"], [560, 3, 1, "_CPPv4NK3endEv", "end"], [851, 3, 1, "_CPPv47enqueueRR11task_handle", "enqueue"], [851, 3, 1, "_CPPv4I_1FE7enqueuevRR1F", "enqueue"], [851, 4, 1, "_CPPv4I_1FE7enqueuevRR1F", "enqueue::f"], [851, 4, 1, "_CPPv47enqueueRR11task_handle", "enqueue::h"], [859, 9, 1, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE", "ets_key_usage_type::ets_key_per_instance"], [859, 9, 1, "_CPPv4N18ets_key_usage_type10ets_no_keyE", "ets_key_usage_type::ets_no_key"], [859, 9, 1, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE", "ets_key_usage_type::ets_suspend_aware"], [764, 3, 1, "_CPPv416exception_thrownv", "exception_thrown"], [851, 3, 1, "_CPPv4I_1FE7executeDTcl1fEERR1F", "execute"], [851, 4, 1, "_CPPv4I_1FE7executeDTcl1fEERR1F", "execute::f"], [569, 3, 1, "_CPPv46filterv", "filter"], [569, 3, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter"], [569, 8, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::Body"], [569, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::body"], [569, 4, 1, "_CPPv4I0E6filter11filter_modeRK4Body", "filter::mode"], [850, 3, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize"], [850, 3, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize"], [850, 4, 1, "_CPPv48finalizeR21task_scheduler_handle", "finalize::handle"], [850, 4, 1, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE", "finalize::handle"], [847, 3, 1, "_CPPv414global_control9parameter6size_t", "global_control"], [847, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::param"], [847, 4, 1, "_CPPv414global_control9parameter6size_t", "global_control::value"], [560, 3, 1, "_CPPv4NK9grainsizeEv", "grainsize"], [764, 3, 1, "_CPPv45graphR18task_group_context", "graph"], [764, 4, 1, "_CPPv45graphR18task_group_context", "graph::context"], [751, 3, 1, "_CPPv410initializeN10task_arena6attachE", "initialize"], [851, 3, 1, "_CPPv410initialize11constraintsj8priority", "initialize"], [851, 3, 1, "_CPPv410initializeN6oneapi3tbb6attachE", "initialize"], [851, 3, 1, "_CPPv410initializeij8priority", "initialize"], [851, 3, 1, "_CPPv410initializev", "initialize"], [851, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_constraints"], [851, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::a_priority"], [851, 4, 1, "_CPPv410initializeij8priority", "initialize::a_priority"], [851, 4, 1, "_CPPv410initializeij8priority", "initialize::max_concurrency"], [851, 4, 1, "_CPPv410initialize11constraintsj8priority", "initialize::reserved_for_masters"], [851, 4, 1, "_CPPv410initializeij8priority", "initialize::reserved_for_masters"], [767, 3, 1, "_CPPv410input_nodeRK10input_node", "input_node"], [767, 3, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node"], [767, 8, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::Body"], [767, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::body"], [767, 4, 1, "_CPPv4I0E10input_nodeR5graph4Body", "input_node::g"], [767, 4, 1, "_CPPv410input_nodeRK10input_node", "input_node::src"], [756, 3, 1, "_CPPv411input_portsv", "input_ports"], [787, 3, 1, "_CPPv4I0ENK4is_aEbv", "is_a"], [787, 8, 1, "_CPPv4I0ENK4is_aEbv", "is_a::V"], [851, 3, 1, "_CPPv4NK9is_activeEv", "is_active"], [764, 3, 1, "_CPPv412is_cancelledv", "is_cancelled"], [560, 3, 1, "_CPPv4NK12is_divisibleEv", "is_divisible"], [575, 3, 1, "_CPPv413is_final_scanv", "is_final_scan"], [849, 3, 1, "_CPPv4NK28is_group_execution_cancelledEv", "is_group_execution_cancelled"], [852, 3, 1, "_CPPv4NK12is_observingEv", "is_observing"], [849, 9, 1, "_CPPv4N6kind_t5boundE", "kind_t::bound"], [849, 9, 1, "_CPPv4N6kind_t8isolatedE", "kind_t::isolated"], [580, 3, 1, "_CPPv4NK4leftEv", "left"], [801, 3, 1, "_CPPv44lockv", "lock"], [569, 3, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter"], [569, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::Func"], [569, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::T"], [569, 8, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::U"], [569, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::f"], [569, 4, 1, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func", "make_filter::mode"], [851, 3, 1, "_CPPv4NK15max_concurrencyEv", "max_concurrency"], [794, 3, 1, "_CPPv4NK8max_sizeEv", "max_size"], [836, 6, 1, "_CPPv4N10mutex_func1M13is_fair_mutexE", "mutex_func::M::is_fair_mutex"], [836, 6, 1, "_CPPv4N10mutex_func1M18is_recursive_mutexE", "mutex_func::M::is_recursive_mutex"], [836, 6, 1, "_CPPv4N10mutex_func1M11is_rw_mutexE", "mutex_func::M::is_rw_mutex"], [836, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockER1M", "mutex_func::M::scoped_lock"], [836, 3, 1, "_CPPv4N10mutex_func1M11scoped_lockEv", "mutex_func::M::scoped_lock"], [836, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M", "mutex_func::M::scoped_lock::acquire"], [836, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv", "mutex_func::M::scoped_lock::release"], [836, 3, 1, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M", "mutex_func::M::scoped_lock::try_acquire"], [836, 3, 1, "_CPPv4N10mutex_func1MD0Ev", "mutex_func::M::~scoped_lock"], [836, 5, 1, "_CPPv4N10mutex_type1M11scoped_lockE", "mutex_type::M::scoped_lock"], [851, 6, 1, "_CPPv415not_initialized", "not_initialized"], [801, 3, 1, "_CPPv410null_mutexv", "null_mutex"], [790, 3, 1, "_CPPv410numa_nodesv", "numa_nodes"], [852, 3, 1, "_CPPv47observeb", "observe"], [852, 4, 1, "_CPPv47observeb", "observe::state"], [852, 3, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry"], [852, 4, 1, "_CPPv418on_scheduler_entryb", "on_scheduler_entry::is_worker"], [852, 3, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit"], [852, 4, 1, "_CPPv417on_scheduler_exitb", "on_scheduler_exit::is_worker"], [36, 7, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array"], [36, 8, 1, "_CPPv4I0EN6oneapi3dal5arrayE", "oneapi::dal::array::Data"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5arrayEv", "oneapi::dal::array::array"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::Deleter"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ExtData"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::ExtData"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::RefData"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::count"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::count"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::data"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::data"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::deleter"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::dependencies"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE", "oneapi::dal::array::array::other"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE", "oneapi::dal::array::array::other"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::array::queue"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::array::ref"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::alloc"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::count"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::empty::queue"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full"], [36, 8, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::Element"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::alloc"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::count"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::element"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE", "oneapi::dal::array::full::queue"], [36, 3, 1, "_CPPv4NK6oneapi3dal5array9get_countEv", "oneapi::dal::array::get_count"], [36, 3, 1, "_CPPv4NK6oneapi3dal5array8get_dataEv", "oneapi::dal::array::get_data"], [36, 3, 1, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv", "oneapi::dal::array::get_mutable_data"], [36, 3, 1, "_CPPv4NK6oneapi3dal5array8get_sizeEv", "oneapi::dal::array::get_size"], [36, 3, 1, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv", "oneapi::dal::array::has_mutable_data"], [36, 3, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data"], [36, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::alloc"], [36, 4, 1, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE", "oneapi::dal::array::need_mutable_data::queue"], [36, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator="], [36, 3, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator="], [36, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE", "oneapi::dal::array::operator=::other"], [36, 4, 1, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE", "oneapi::dal::array::operator=::other"], [36, 3, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]"], [36, 4, 1, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE", "oneapi::dal::array::operator[]::index"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset"], [36, 3, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5resetEv", "oneapi::dal::array::reset"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::Deleter"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::ExtData"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ExtData"], [36, 8, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::RefData"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::alloc"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::count"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::count"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::count"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::data"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::data"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::deleter"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::reset::dependencies"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::reset::queue"], [36, 4, 1, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE", "oneapi::dal::array::reset::ref"], [36, 3, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap"], [36, 8, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::ExtData"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::count"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::data"], [36, 4, 1, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE", "oneapi::dal::array::wrap::dependencies"], [36, 3, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::alloc"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::count"], [36, 4, 1, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE", "oneapi::dal::array::zeros::queue"], [33, 7, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor"], [33, 8, 1, "_CPPv4I0EN6oneapi3dal15column_accessorE", "oneapi::dal::column_accessor::Data"], [33, 3, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor"], [33, 4, 1, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table", "oneapi::dal::column_accessor::column_accessor::obj"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [33, 3, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::alloc"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::block"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::column_index"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::queue"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [33, 4, 1, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::column_accessor::pull::rows"], [37, 7, 1, "_CPPv4N6oneapi3dal3csv11data_sourceE", "oneapi::dal::csv::data_source"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::delimiter"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::file_name"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [37, 4, 1, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options", "oneapi::dal::csv::data_source::data_source::opts"], [37, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE", "oneapi::dal::csv::data_source::delimiter"], [37, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE", "oneapi::dal::csv::data_source::file_name"], [37, 6, 1, "_CPPv4N6oneapi3dal3csv11data_source7optionsE", "oneapi::dal::csv::data_source::options"], [37, 7, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args"], [37, 8, 1, "_CPPv4I0EN6oneapi3dal3csv9read_argsE", "oneapi::dal::csv::read_args::Object"], [37, 3, 1, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv", "oneapi::dal::csv::read_args::read_args"], [41, 9, 1, "_CPPv4N6oneapi3dal11data_layoutE", "oneapi::dal::data_layout"], [28, 9, 1, "_CPPv4N6oneapi3dal9data_typeE", "oneapi::dal::data_type"], [41, 9, 1, "_CPPv4N6oneapi3dal12feature_typeE", "oneapi::dal::feature_type"], [40, 7, 1, "_CPPv4N6oneapi3dal13homogen_tableE", "oneapi::dal::homogen_table"], [40, 3, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data"], [40, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv", "oneapi::dal::homogen_table::get_data"], [40, 8, 1, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav", "oneapi::dal::homogen_table::get_data::Data"], [40, 3, 1, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv", "oneapi::dal::homogen_table::get_kind"], [40, 3, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table"], [40, 3, 1, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv", "oneapi::dal::homogen_table::homogen_table"], [40, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::ConstDeleter"], [40, 8, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::Data"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::column_count"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_deleter"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::data_pointer"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::dependencies"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::layout"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::queue"], [40, 4, 1, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::homogen_table::row_count"], [40, 3, 1, "_CPPv4N6oneapi3dal13homogen_table4kindEv", "oneapi::dal::homogen_table::kind"], [40, 3, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap"], [40, 8, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::Data"], [40, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::column_count"], [40, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::data_pointer"], [40, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::dependencies"], [40, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::layout"], [40, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::queue"], [40, 4, 1, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout", "oneapi::dal::homogen_table::wrap::row_count"], [18, 7, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Float"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Method"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE", "oneapi::dal::kmeans::descriptor::Task"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE", "oneapi::dal::kmeans::descriptor::accuracy_threshold"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE", "oneapi::dal::kmeans::descriptor::cluster_count"], [18, 3, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor"], [18, 4, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans::descriptor::descriptor::cluster_count"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE", "oneapi::dal::kmeans::descriptor::max_iteration_count"], [18, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Float"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Method"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::Task"], [18, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::desc"], [18, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::kmeans::infer::input"], [18, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input"], [18, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE", "oneapi::dal::kmeans::infer_input::Task"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE", "oneapi::dal::kmeans::infer_input::data"], [18, 3, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input"], [18, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::data"], [18, 4, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::kmeans::infer_input::infer_input::m"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE", "oneapi::dal::kmeans::infer_input::model"], [18, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result"], [18, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE", "oneapi::dal::kmeans::infer_result::Task"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv", "oneapi::dal::kmeans::infer_result::get_labels"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv", "oneapi::dal::kmeans::infer_result::get_objective_function_value"], [18, 3, 1, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv", "oneapi::dal::kmeans::infer_result::infer_result"], [18, 5, 1, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE", "oneapi::dal::kmeans::method::by_default"], [18, 7, 1, "_CPPv4N6oneapi3dal6kmeans6method5lloydE", "oneapi::dal::kmeans::method::lloyd"], [18, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model"], [18, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans5modelE", "oneapi::dal::kmeans::model::Task"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv", "oneapi::dal::kmeans::model::get_centroids"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv", "oneapi::dal::kmeans::model::get_cluster_count"], [18, 3, 1, "_CPPv4N6oneapi3dal6kmeans5model5modelEv", "oneapi::dal::kmeans::model::model"], [18, 5, 1, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE", "oneapi::dal::kmeans::task::by_default"], [18, 7, 1, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE", "oneapi::dal::kmeans::task::clustering"], [18, 3, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Float"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Method"], [18, 8, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::Task"], [18, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::desc"], [18, 4, 1, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::kmeans::train::input"], [18, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input"], [18, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE", "oneapi::dal::kmeans::train_input::Task"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE", "oneapi::dal::kmeans::train_input::data"], [18, 6, 1, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE", "oneapi::dal::kmeans::train_input::initial_centroids"], [18, 3, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input"], [18, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::data"], [18, 4, 1, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table", "oneapi::dal::kmeans::train_input::train_input::initial_centroids"], [18, 7, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result"], [18, 8, 1, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE", "oneapi::dal::kmeans::train_result::Task"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv", "oneapi::dal::kmeans::train_result::get_iteration_count"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv", "oneapi::dal::kmeans::train_result::get_labels"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv", "oneapi::dal::kmeans::train_result::get_model"], [18, 3, 1, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv", "oneapi::dal::kmeans::train_result::get_objective_function_value"], [18, 3, 1, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv", "oneapi::dal::kmeans::train_result::train_result"], [19, 3, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::Task"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::desc"], [19, 4, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE", "oneapi::dal::kmeans_init::compute::input"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE", "oneapi::dal::kmeans_init::compute_input::Task"], [19, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input"], [19, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table", "oneapi::dal::kmeans_init::compute_input::compute_input::data"], [19, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE", "oneapi::dal::kmeans_init::compute_input::data"], [19, 7, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result"], [19, 8, 1, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE", "oneapi::dal::kmeans_init::compute_result::Task"], [19, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv", "oneapi::dal::kmeans_init::compute_result::compute_result"], [19, 3, 1, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv", "oneapi::dal::kmeans_init::compute_result::get_centroids"], [19, 7, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Float"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Method"], [19, 8, 1, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE", "oneapi::dal::kmeans_init::descriptor::Task"], [19, 6, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE", "oneapi::dal::kmeans_init::descriptor::cluster_count"], [19, 3, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor"], [19, 4, 1, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE", "oneapi::dal::kmeans_init::descriptor::descriptor::cluster_count"], [19, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE", "oneapi::dal::kmeans_init::method::by_default"], [19, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE", "oneapi::dal::kmeans_init::method::dense"], [19, 5, 1, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE", "oneapi::dal::kmeans_init::task::by_default"], [19, 7, 1, "_CPPv4N6oneapi3dal11kmeans_init4task4initE", "oneapi::dal::kmeans_init::task::init"], [24, 7, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Float"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Method"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn10descriptorE", "oneapi::dal::knn::descriptor::Task"], [24, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE", "oneapi::dal::knn::descriptor::class_count"], [24, 3, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor"], [24, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::class_count"], [24, 4, 1, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE", "oneapi::dal::knn::descriptor::descriptor::neighbor_count"], [24, 6, 1, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE", "oneapi::dal::knn::descriptor::neighbor_count"], [24, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Float"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Method"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::Task"], [24, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::desc"], [24, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::knn::infer::input"], [24, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input"], [24, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE", "oneapi::dal::knn::infer_input::Task"], [24, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input4dataE", "oneapi::dal::knn::infer_input::data"], [24, 3, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input"], [24, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::data"], [24, 4, 1, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::knn::infer_input::infer_input::m"], [24, 6, 1, "_CPPv4N6oneapi3dal3knn11infer_input5modelE", "oneapi::dal::knn::infer_input::model"], [24, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result"], [24, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE", "oneapi::dal::knn::infer_result::Task"], [24, 3, 1, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv", "oneapi::dal::knn::infer_result::get_labels"], [24, 3, 1, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv", "oneapi::dal::knn::infer_result::infer_result"], [24, 7, 1, "_CPPv4N6oneapi3dal3knn6method10bruteforceE", "oneapi::dal::knn::method::bruteforce"], [24, 5, 1, "_CPPv4N6oneapi3dal3knn6method10by_defaultE", "oneapi::dal::knn::method::by_default"], [24, 7, 1, "_CPPv4N6oneapi3dal3knn6method7kd_treeE", "oneapi::dal::knn::method::kd_tree"], [24, 7, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model"], [24, 8, 1, "_CPPv4I0EN6oneapi3dal3knn5modelE", "oneapi::dal::knn::model::Task"], [24, 3, 1, "_CPPv4N6oneapi3dal3knn5model5modelEv", "oneapi::dal::knn::model::model"], [24, 5, 1, "_CPPv4N6oneapi3dal3knn4task10by_defaultE", "oneapi::dal::knn::task::by_default"], [24, 7, 1, "_CPPv4N6oneapi3dal3knn4task14classificationE", "oneapi::dal::knn::task::classification"], [24, 3, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Float"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Method"], [24, 8, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::Task"], [24, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::desc"], [24, 4, 1, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::knn::train::input"], [24, 7, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input"], [24, 8, 1, "_CPPv4I0EN6oneapi3dal3knn11train_inputE", "oneapi::dal::knn::train_input::Task"], [24, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input4dataE", "oneapi::dal::knn::train_input::data"], [24, 6, 1, "_CPPv4N6oneapi3dal3knn11train_input6labelsE", "oneapi::dal::knn::train_input::labels"], [24, 3, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input"], [24, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::data"], [24, 4, 1, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table", "oneapi::dal::knn::train_input::train_input::labels"], [24, 7, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result"], [24, 8, 1, "_CPPv4I0EN6oneapi3dal3knn12train_resultE", "oneapi::dal::knn::train_result::Task"], [24, 3, 1, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv", "oneapi::dal::knn::train_result::get_model"], [24, 3, 1, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv", "oneapi::dal::knn::train_result::train_result"], [21, 7, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Float"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Method"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca10descriptorE", "oneapi::dal::pca::descriptor::Task"], [21, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE", "oneapi::dal::pca::descriptor::component_count"], [21, 3, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor"], [21, 4, 1, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE", "oneapi::dal::pca::descriptor::descriptor::component_count"], [21, 6, 1, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE", "oneapi::dal::pca::descriptor::deterministic"], [21, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Float"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Method"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::Task"], [21, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::desc"], [21, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE", "oneapi::dal::pca::infer::input"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE", "oneapi::dal::pca::infer_input::Task"], [21, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input4dataE", "oneapi::dal::pca::infer_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input"], [21, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::data"], [21, 4, 1, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table", "oneapi::dal::pca::infer_input::infer_input::m"], [21, 6, 1, "_CPPv4N6oneapi3dal3pca11infer_input5modelE", "oneapi::dal::pca::infer_input::model"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE", "oneapi::dal::pca::infer_result::Task"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv", "oneapi::dal::pca::infer_result::get_transformed_data"], [21, 3, 1, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv", "oneapi::dal::pca::infer_result::infer_result"], [21, 5, 1, "_CPPv4N6oneapi3dal3pca6method10by_defaultE", "oneapi::dal::pca::method::by_default"], [21, 7, 1, "_CPPv4N6oneapi3dal3pca6method3covE", "oneapi::dal::pca::method::cov"], [21, 7, 1, "_CPPv4N6oneapi3dal3pca6method3svdE", "oneapi::dal::pca::method::svd"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal3pca5modelE", "oneapi::dal::pca::model::Task"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv", "oneapi::dal::pca::model::get_component_count"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv", "oneapi::dal::pca::model::get_eigenvectors"], [21, 3, 1, "_CPPv4N6oneapi3dal3pca5model5modelEv", "oneapi::dal::pca::model::model"], [21, 5, 1, "_CPPv4N6oneapi3dal3pca4task10by_defaultE", "oneapi::dal::pca::task::by_default"], [21, 7, 1, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE", "oneapi::dal::pca::task::dim_reduction"], [21, 3, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Float"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Method"], [21, 8, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::Task"], [21, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::desc"], [21, 4, 1, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE", "oneapi::dal::pca::train::input"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal3pca11train_inputE", "oneapi::dal::pca::train_input::Task"], [21, 6, 1, "_CPPv4N6oneapi3dal3pca11train_input4dataE", "oneapi::dal::pca::train_input::data"], [21, 3, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input"], [21, 4, 1, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table", "oneapi::dal::pca::train_input::train_input::data"], [21, 7, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result"], [21, 8, 1, "_CPPv4I0EN6oneapi3dal3pca12train_resultE", "oneapi::dal::pca::train_result::Task"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv", "oneapi::dal::pca::train_result::get_eigenvalues"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv", "oneapi::dal::pca::train_result::get_eigenvectors"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv", "oneapi::dal::pca::train_result::get_means"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv", "oneapi::dal::pca::train_result::get_model"], [21, 3, 1, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv", "oneapi::dal::pca::train_result::get_variances"], [21, 3, 1, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv", "oneapi::dal::pca::train_result::train_result"], [28, 7, 1, "_CPPv4N6oneapi3dal5rangeE", "oneapi::dal::range"], [28, 3, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count"], [28, 4, 1, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE", "oneapi::dal::range::get_element_count::max_end_index"], [28, 3, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range"], [28, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::end"], [28, 4, 1, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE", "oneapi::dal::range::range::start"], [37, 3, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::DataSource"], [37, 8, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::Object"], [37, 4, 1, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource", "oneapi::dal::read::ds"], [34, 7, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor"], [34, 8, 1, "_CPPv4I0EN6oneapi3dal12row_accessorE", "oneapi::dal::row_accessor::Data"], [34, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [34, 3, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::alloc"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::block"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::queue"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [34, 4, 1, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE", "oneapi::dal::row_accessor::pull::rows"], [34, 3, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor"], [34, 4, 1, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table", "oneapi::dal::row_accessor::row_accessor::obj"], [41, 7, 1, "_CPPv4N6oneapi3dal5tableE", "oneapi::dal::table"], [41, 3, 1, "_CPPv4NK6oneapi3dal5table16get_column_countEv", "oneapi::dal::table::get_column_count"], [41, 3, 1, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv", "oneapi::dal::table::get_data_layout"], [41, 3, 1, "_CPPv4NK6oneapi3dal5table8get_kindEv", "oneapi::dal::table::get_kind"], [41, 3, 1, "_CPPv4NK6oneapi3dal5table12get_metadataEv", "oneapi::dal::table::get_metadata"], [41, 3, 1, "_CPPv4NK6oneapi3dal5table13get_row_countEv", "oneapi::dal::table::get_row_count"], [41, 3, 1, "_CPPv4NK6oneapi3dal5table8has_dataEv", "oneapi::dal::table::has_data"], [41, 3, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator="], [41, 3, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator="], [41, 4, 1, "_CPPv4N6oneapi3dal5tableaSERK5table", "oneapi::dal::table::operator=::other"], [41, 4, 1, "_CPPv4N6oneapi3dal5tableaSERR5table", "oneapi::dal::table::operator=::other"], [41, 3, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table"], [41, 3, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table"], [41, 3, 1, "_CPPv4N6oneapi3dal5table5tableEv", "oneapi::dal::table::table"], [41, 4, 1, "_CPPv4N6oneapi3dal5table5tableERK5table", "oneapi::dal::table::table::other"], [41, 4, 1, "_CPPv4N6oneapi3dal5table5tableERR5table", "oneapi::dal::table::table::other"], [41, 7, 1, "_CPPv4N6oneapi3dal14table_metadataE", "oneapi::dal::table_metadata"], [41, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type"], [41, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_data_type::feature_index"], [41, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv", "oneapi::dal::table_metadata::get_feature_count"], [41, 3, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type"], [41, 4, 1, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE", "oneapi::dal::table_metadata::get_feature_type::feature_index"], [41, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata"], [41, 3, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv", "oneapi::dal::table_metadata::table_metadata"], [41, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::dtypes"], [41, 4, 1, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE", "oneapi::dal::table_metadata::table_metadata::ftypes"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinable5clearEv", "oneapi::tbb::combinable::clear"], [858, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinable10combinableEv", "oneapi::tbb::combinable::combinable"], [858, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::FInit"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit", "oneapi::tbb::combinable::combinable::finit"], [858, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable", "oneapi::tbb::combinable::combinable::other"], [858, 4, 1, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable", "oneapi::tbb::combinable::combinable::other"], [858, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine"], [858, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::BinaryFunc"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc", "oneapi::tbb::combinable::combine::f"], [858, 3, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each"], [858, 8, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::UnaryFunc"], [858, 4, 1, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc", "oneapi::tbb::combinable::combine_each::f"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinable5localEv", "oneapi::tbb::combinable::local"], [858, 4, 1, "_CPPv4N6oneapi3tbb10combinable5localERb", "oneapi::tbb::combinable::local::exists"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator="], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator="], [858, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable", "oneapi::tbb::combinable::operator=::other"], [858, 4, 1, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable", "oneapi::tbb::combinable::operator=::other"], [858, 3, 1, "_CPPv4N6oneapi3tbb10combinableD0Ev", "oneapi::tbb::combinable::~combinable"], [862, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [862, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv", "oneapi::tbb::enumerable_thread_specific::begin"], [860, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine"], [860, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::BinaryFunc"], [860, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc", "oneapi::tbb::enumerable_thread_specific::combine::f"], [860, 3, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each"], [860, 8, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::UnaryFunc"], [860, 4, 1, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc", "oneapi::tbb::enumerable_thread_specific::combine_each::f"], [864, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv", "oneapi::tbb::enumerable_thread_specific::empty"], [862, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [862, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv", "oneapi::tbb::enumerable_thread_specific::end"], [863, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local"], [863, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv", "oneapi::tbb::enumerable_thread_specific::local"], [863, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb", "oneapi::tbb::enumerable_thread_specific::local::exists"], [862, 3, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [862, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range"], [862, 4, 1, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [862, 4, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t", "oneapi::tbb::enumerable_thread_specific::range::grainsize"], [864, 3, 1, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv", "oneapi::tbb::enumerable_thread_specific::size"], [866, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [866, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv", "oneapi::tbb::flatten2d::begin"], [866, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [866, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d3endEv", "oneapi::tbb::flatten2d::end"], [866, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d"], [866, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::Container"], [866, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::b"], [866, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::c"], [866, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flatten2d::e"], [866, 3, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [866, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d"], [866, 3, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d"], [866, 8, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::Container"], [866, 4, 1, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [866, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container", "oneapi::tbb::flatten2d::flattened2d::c"], [866, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::c"], [866, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::first"], [866, 4, 1, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE", "oneapi::tbb::flatten2d::flattened2d::last"], [866, 3, 1, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv", "oneapi::tbb::flatten2d::size"], [766, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node"], [766, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node"], [766, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph", "oneapi::tbb::flow::indexer_node::indexer_node::g"], [766, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node", "oneapi::tbb::flow::indexer_node::indexer_node::src"], [766, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv", "oneapi::tbb::flow::indexer_node::input_ports"], [766, 3, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get"], [766, 4, 1, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type", "oneapi::tbb::flow::indexer_node::try_get::v"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv", "oneapi::tbb::flow::limiter_node::decrementer"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::g"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node", "oneapi::tbb::flow::limiter_node::limiter_node::src"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t", "oneapi::tbb::flow::limiter_node::limiter_node::threshold"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T", "oneapi::tbb::flow::limiter_node::try_get::v"], [771, 3, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put"], [771, 4, 1, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T", "oneapi::tbb::flow::limiter_node::try_put::v"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv", "oneapi::tbb::flow::overwrite_node::clear"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv", "oneapi::tbb::flow::overwrite_node::is_valid"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph", "oneapi::tbb::flow::overwrite_node::overwrite_node::g"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node", "oneapi::tbb::flow::overwrite_node::overwrite_node::src"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T", "oneapi::tbb::flow::overwrite_node::try_get::v"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put"], [777, 4, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T", "oneapi::tbb::flow::overwrite_node::try_put::v"], [777, 3, 1, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev", "oneapi::tbb::flow::overwrite_node::~overwrite_node"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::g"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node", "oneapi::tbb::flow::priority_node_queue::priority_queue_node::src"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T", "oneapi::tbb::flow::priority_node_queue::try_get::v"], [779, 3, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put"], [779, 4, 1, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T", "oneapi::tbb::flow::priority_node_queue::try_put::v"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph", "oneapi::tbb::flow::queue_node::queue_node::g"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node", "oneapi::tbb::flow::queue_node::queue_node::src"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T", "oneapi::tbb::flow::queue_node::try_get::v"], [780, 3, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put"], [780, 4, 1, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T", "oneapi::tbb::flow::queue_node::try_put::v"], [785, 3, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node"], [785, 8, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::Sequencer"], [785, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::g"], [785, 4, 1, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer", "oneapi::tbb::flow::sequencer_node::sequencer_node::s"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node", "oneapi::tbb::flow::sequencer_node::sequencer_node::src"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T", "oneapi::tbb::flow::sequencer_node::try_get::v"], [785, 3, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put"], [785, 4, 1, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T", "oneapi::tbb::flow::sequencer_node::try_put::v"], [786, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv", "oneapi::tbb::flow::split_node::output_ports"], [786, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node"], [786, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node"], [786, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph", "oneapi::tbb::flow::split_node::split_node::g"], [786, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node", "oneapi::tbb::flow::split_node::split_node::other"], [786, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put"], [786, 4, 1, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType", "oneapi::tbb::flow::split_node::try_put::v"], [786, 3, 1, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev", "oneapi::tbb::flow::split_node::~split_node"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv", "oneapi::tbb::flow::write_once_mode::clear"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv", "oneapi::tbb::flow::write_once_mode::is_valid"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get"], [788, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T", "oneapi::tbb::flow::write_once_mode::try_get::v"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put"], [788, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T", "oneapi::tbb::flow::write_once_mode::try_put::v"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node"], [788, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph", "oneapi::tbb::flow::write_once_mode::write_once_node::g"], [788, 4, 1, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node", "oneapi::tbb::flow::write_once_mode::write_once_node::src"], [788, 3, 1, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev", "oneapi::tbb::flow::write_once_mode::~write_once_node"], [800, 3, 1, "_CPPv4N6oneapi3tbb5mutex4lockEv", "oneapi::tbb::mutex::lock"], [800, 3, 1, "_CPPv4N6oneapi3tbb5mutex5mutexEv", "oneapi::tbb::mutex::mutex"], [800, 7, 1, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE", "oneapi::tbb::mutex::scoped_lock"], [800, 3, 1, "_CPPv4N6oneapi3tbb5mutex8try_lockEv", "oneapi::tbb::mutex::try_lock"], [800, 3, 1, "_CPPv4N6oneapi3tbb5mutex6unlockEv", "oneapi::tbb::mutex::unlock"], [800, 3, 1, "_CPPv4N6oneapi3tbb5mutexD0Ev", "oneapi::tbb::mutex::~mutex"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv", "oneapi::tbb::null_rw_mutex::lock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv", "oneapi::tbb::null_rw_mutex::lock_shared"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv", "oneapi::tbb::null_rw_mutex::null_rw_mutex"], [802, 7, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE", "oneapi::tbb::null_rw_mutex::scoped_lock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv", "oneapi::tbb::null_rw_mutex::try_lock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv", "oneapi::tbb::null_rw_mutex::try_lock_shared"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv", "oneapi::tbb::null_rw_mutex::unlock"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv", "oneapi::tbb::null_rw_mutex::unlock_shared"], [802, 3, 1, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev", "oneapi::tbb::null_rw_mutex::~null_rw_mutex"], [803, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv", "oneapi::tbb::queueing_mutex::queuing_mutex"], [803, 7, 1, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE", "oneapi::tbb::queueing_mutex::scoped_lock"], [803, 3, 1, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev", "oneapi::tbb::queueing_mutex::~queuing_mutex"], [804, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv", "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex"], [804, 7, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE", "oneapi::tbb::queueing_rw_mutex::scoped_lock"], [804, 3, 1, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev", "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv", "oneapi::tbb::rw_mutex::lock"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv", "oneapi::tbb::rw_mutex::lock_shared"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv", "oneapi::tbb::rw_mutex::rw_mutex"], [805, 7, 1, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE", "oneapi::tbb::rw_mutex::scoped_lock"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv", "oneapi::tbb::rw_mutex::try_lock"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv", "oneapi::tbb::rw_mutex::try_lock_shared"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv", "oneapi::tbb::rw_mutex::unlock"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv", "oneapi::tbb::rw_mutex::unlock_shared"], [805, 3, 1, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev", "oneapi::tbb::rw_mutex::~rw_mutex"], [796, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate"], [796, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type", "oneapi::tbb::scalable_allocator::allocate::n"], [796, 3, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate"], [796, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::n"], [796, 4, 1, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type", "oneapi::tbb::scalable_allocator::deallocate::p"], [796, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!="], [796, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::T"], [796, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator!=::U"], [796, 3, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator=="], [796, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::T"], [796, 8, 1, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE", "oneapi::tbb::scalable_allocator::operator==::U"], [806, 7, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_mutex::scoped_lock"], [806, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv", "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex"], [806, 3, 1, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev", "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex"], [807, 7, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE", "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock"], [807, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv", "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex"], [807, 3, 1, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev", "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex"], [808, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv", "oneapi::tbb::spin_mutex::lock"], [808, 7, 1, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE", "oneapi::tbb::spin_mutex::scoped_lock"], [808, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv", "oneapi::tbb::spin_mutex::spin_mutex"], [808, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv", "oneapi::tbb::spin_mutex::try_lock"], [808, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv", "oneapi::tbb::spin_mutex::unlock"], [808, 3, 1, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev", "oneapi::tbb::spin_mutex::~spin_mutex"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv", "oneapi::tbb::spin_rw_mutex::lock"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv", "oneapi::tbb::spin_rw_mutex::lock_shared"], [809, 7, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE", "oneapi::tbb::spin_rw_mutex::scoped_lock"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv", "oneapi::tbb::spin_rw_mutex::spin_rw_mutex"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv", "oneapi::tbb::spin_rw_mutex::try_lock"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv", "oneapi::tbb::spin_rw_mutex::try_lock_shared"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv", "oneapi::tbb::spin_rw_mutex::unlock"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv", "oneapi::tbb::spin_rw_mutex::unlock_shared"], [809, 3, 1, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev", "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_group6cancelEv", "oneapi::tbb::task_group::cancel"], [854, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer"], [854, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::F"], [854, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F", "oneapi::tbb::task_group::defer::f"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv", "oneapi::tbb::task_group::is_current_task_group_canceling"], [854, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run"], [854, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::Func"], [854, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func", "oneapi::tbb::task_group::run::f"], [854, 4, 1, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle", "oneapi::tbb::task_group::run::h"], [854, 3, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait"], [854, 8, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::Func"], [854, 4, 1, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func", "oneapi::tbb::task_group::run_and_wait::f"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupEv", "oneapi::tbb::task_group::task_group"], [854, 4, 1, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context", "oneapi::tbb::task_group::task_group::context"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_group4waitEv", "oneapi::tbb::task_group::wait"], [854, 3, 1, "_CPPv4N6oneapi3tbb10task_groupD0Ev", "oneapi::tbb::task_group::~task_group"], [798, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate"], [798, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type", "oneapi::tbb::tbb_allocator::allocate::n"], [798, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv", "oneapi::tbb::tbb_allocator::allocator_type"], [798, 3, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate"], [798, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::n"], [798, 4, 1, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type", "oneapi::tbb::tbb_allocator::deallocate::p"], [798, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!="], [798, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::T"], [798, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator!=::U"], [798, 3, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator=="], [798, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::T"], [798, 8, 1, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE", "oneapi::tbb::tbb_allocator::operator==::U"], [575, 3, 1, "_CPPv4cvbv", "operator bool"], [850, 3, 1, "_CPPv4NKcvbEv", "operator bool"], [580, 3, 1, "_CPPv4NKcv5splitEv", "operator split"], [794, 3, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!="], [794, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::T"], [794, 8, 1, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator!=::U"], [569, 3, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;"], [569, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::T"], [569, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::U"], [569, 8, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::V"], [569, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::left"], [569, 4, 1, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE", "operator&amp;::right"], [817, 3, 1, "_CPPv4mlRK5IndexRK5Index", "operator*"], [817, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::i"], [817, 4, 1, "_CPPv4mlRK5IndexRK5Index", "operator*::j"], [811, 3, 1, "_CPPv4plRK5Value1D", "operator+"], [817, 3, 1, "_CPPv4plRK5Index1D", "operator+"], [817, 3, 1, "_CPPv4plRK5IndexRK5Index", "operator+"], [817, 3, 1, "_CPPv4ppv", "operator++"], [811, 4, 1, "_CPPv4plRK5Value1D", "operator+::i"], [817, 4, 1, "_CPPv4plRK5Index1D", "operator+::i"], [817, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::i"], [817, 4, 1, "_CPPv4plRK5IndexRK5Index", "operator+::j"], [811, 4, 1, "_CPPv4plRK5Value1D", "operator+::k"], [817, 4, 1, "_CPPv4plRK5Index1D", "operator+::k"], [811, 3, 1, "_CPPv4miRK5ValueRK5Value", "operator-"], [817, 3, 1, "_CPPv4miRK5IndexRK5Index", "operator-"], [811, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::i"], [817, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::i"], [811, 4, 1, "_CPPv4miRK5ValueRK5Value", "operator-::j"], [817, 4, 1, "_CPPv4miRK5IndexRK5Index", "operator-::j"], [817, 3, 1, "_CPPv4dvRK5IndexRK5Index", "operator/"], [817, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::i"], [817, 4, 1, "_CPPv4dvRK5IndexRK5Index", "operator/::j"], [810, 3, 1, "_CPPv4ltRK1TRK1T", "operator&lt;"], [811, 3, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;"], [817, 3, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;"], [811, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::i"], [817, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::i"], [811, 4, 1, "_CPPv4ltRK5ValueRK5Value", "operator&lt;::j"], [817, 4, 1, "_CPPv4ltRK5IndexRK5Index", "operator&lt;::j"], [810, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::x"], [810, 4, 1, "_CPPv4ltRK1TRK1T", "operator&lt;::y"], [817, 3, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;="], [817, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::i"], [817, 4, 1, "_CPPv4leRK5IndexRK5Index", "operator&lt;=::j"], [811, 3, 1, "_CPPv4aSRK5Value", "operator="], [817, 3, 1, "_CPPv4aSRK5Index", "operator="], [850, 3, 1, "_CPPv4aSRR21task_scheduler_handle", "operator="], [850, 4, 1, "_CPPv4aSRR21task_scheduler_handle", "operator=::other"], [794, 3, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator=="], [794, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::T"], [794, 8, 1, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE", "operator==::U"], [756, 3, 1, "_CPPv412output_portsv", "output_ports"], [847, 9, 1, "_CPPv4N9parameter23max_allowed_parallelismE", "parameter::max_allowed_parallelism"], [847, 9, 1, "_CPPv4N9parameter22terminate_on_exceptionE", "parameter::terminate_on_exception"], [847, 9, 1, "_CPPv4N9parameter17thread_stack_sizeE", "parameter::thread_stack_size"], [851, 9, 1, "_CPPv4N8priority4highE", "priority::high"], [851, 9, 1, "_CPPv4N8priority3lowE", "priority::low"], [851, 9, 1, "_CPPv4N8priority6normalE", "priority::normal"], [580, 3, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split"], [580, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_left"], [580, 4, 1, "_CPPv418proportional_splitNSt6size_tENSt6size_tE", "proportional_split::_right"], [850, 3, 1, "_CPPv47releasev", "release"], [764, 3, 1, "_CPPv45reset11reset_flags", "reset"], [849, 3, 1, "_CPPv45resetv", "reset"], [764, 4, 1, "_CPPv45reset11reset_flags", "reset::f"], [580, 3, 1, "_CPPv4NK5rightEv", "right"], [793, 3, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode"], [793, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::mode"], [793, 4, 1, "_CPPv424scalable_allocation_modei8intptr_t", "scalable_allocation_mode::value"], [793, 3, 1, "_CPPv414scalable_msizePv", "scalable_msize"], [793, 4, 1, "_CPPv414scalable_msizePv", "scalable_msize::ptr"], [801, 7, 1, "_CPPv411scoped_lock", "scoped_lock"], [756, 3, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports"], [756, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::input_ports_tuple"], [756, 4, 1, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type", "set_external_ports::output_ports_tuple"], [560, 3, 1, "_CPPv4NK4sizeEv", "size"], [560, 5, 1, "_CPPv49size_type", "size_type"], [812, 3, 1, "_CPPv4NSt5beginE1c", "std::begin"], [812, 3, 1, "_CPPv4NSt3endE1c", "std::end"], [571, 3, 1, "_CPPv44stopv", "stop"], [810, 3, 1, "_CPPv44swapR1TR1T", "swap"], [810, 4, 1, "_CPPv44swapR1TR1T", "swap::x"], [810, 4, 1, "_CPPv44swapR1TR1T", "swap::y"], [787, 3, 1, "_CPPv4NK3tagEv", "tag"], [787, 3, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg"], [787, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::R"], [787, 8, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::T"], [787, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::index"], [787, 4, 1, "_CPPv4I00E10tagged_msgRK1TRK1R", "tagged_msg::value"], [751, 3, 1, "_CPPv410task_arenaN10task_arena6attachE", "task_arena"], [851, 3, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena"], [851, 3, 1, "_CPPv410task_arenaN6oneapi3tbb6attachE", "task_arena"], [851, 3, 1, "_CPPv410task_arenaRK10task_arena", "task_arena"], [851, 3, 1, "_CPPv410task_arenaij8priority", "task_arena"], [851, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_constraints"], [851, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::a_priority"], [851, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::a_priority"], [851, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::max_concurrency"], [851, 4, 1, "_CPPv410task_arena11constraintsj8priority", "task_arena::reserved_for_masters"], [851, 4, 1, "_CPPv410task_arenaij8priority", "task_arena::reserved_for_masters"], [849, 3, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context"], [849, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::relation_to_parent"], [849, 4, 1, "_CPPv418task_group_context6kind_t9uintptr_t", "task_group_context::traits"], [850, 3, 1, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE", "task_scheduler_handle"], [850, 3, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle"], [850, 3, 1, "_CPPv421task_scheduler_handlev", "task_scheduler_handle"], [850, 4, 1, "_CPPv421task_scheduler_handleRR21task_scheduler_handle", "task_scheduler_handle::other"], [852, 3, 1, "_CPPv423task_scheduler_observerR10task_arena", "task_scheduler_observer"], [852, 3, 1, "_CPPv423task_scheduler_observerv", "task_scheduler_observer"], [856, 3, 1, "_CPPv4NK3tbb11task_handlecvbEv", "tbb::task_handle::operator bool"], [856, 3, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator="], [856, 4, 1, "_CPPv4N3tbb11task_handleaSERR11task_handle", "tbb::task_handle::operator=::src"], [856, 3, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle"], [856, 3, 1, "_CPPv4N3tbb11task_handle11task_handleEv", "tbb::task_handle::task_handle"], [856, 4, 1, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle", "tbb::task_handle::task_handle::src"], [856, 3, 1, "_CPPv4N3tbb11task_handleD0Ev", "tbb::task_handle::~task_handle"], [853, 3, 1, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv", "tbb::this_task_arena::current_thread_index"], [853, 3, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue"], [853, 3, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue"], [853, 8, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::F"], [853, 4, 1, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F", "tbb::this_task_arena::enqueue::f"], [853, 4, 1, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle", "tbb::this_task_arena::enqueue::h"], [853, 3, 1, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate"], [853, 4, 1, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F", "tbb::this_task_arena::isolate::f"], [853, 3, 1, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv", "tbb::this_task_arena::max_concurrency"], [851, 3, 1, "_CPPv49terminatev", "terminate"], [849, 3, 1, "_CPPv4NK6traitsEv", "traits"], [849, 9, 1, "_CPPv4N11traits_type11fp_settingsE", "traits_type::fp_settings"], [754, 3, 1, "_CPPv47try_getR11output_type", "try_get"], [755, 3, 1, "_CPPv47try_getR1T", "try_get"], [767, 3, 1, "_CPPv47try_getR6Output", "try_get"], [754, 4, 1, "_CPPv47try_getR11output_type", "try_get::v"], [755, 4, 1, "_CPPv47try_getR1T", "try_get::v"], [767, 4, 1, "_CPPv47try_getR6Output", "try_get::v"], [801, 3, 1, "_CPPv48try_lockv", "try_lock"], [754, 3, 1, "_CPPv47try_putRK10input_type", "try_put"], [755, 3, 1, "_CPPv47try_putRK1T", "try_put"], [754, 4, 1, "_CPPv47try_putRK10input_type", "try_put::v"], [755, 4, 1, "_CPPv47try_putRK1T", "try_put::v"], [801, 3, 1, "_CPPv46unlockv", "unlock"], [795, 3, 1, "_CPPv4NK17upstream_resourceEv", "upstream_resource"], [764, 3, 1, "_CPPv412wait_for_allv", "wait_for_all"], [847, 3, 1, "_CPPv4D0v", "~global_control"], [764, 3, 1, "_CPPv4D0v", "~graph"], [801, 3, 1, "_CPPv4D0v", "~null_mutex"], [851, 3, 1, "_CPPv4D0v", "~task_arena"], [849, 3, 1, "_CPPv4D0v", "~task_group_context"], [850, 3, 1, "_CPPv4D0v", "~task_scheduler_handle"], [852, 3, 1, "_CPPv4D0v", "~task_scheduler_observer"]], "scalable_allocation_command": [[793, 2, 1, "c.scalable_allocation_command", "cmd"], [793, 2, 1, "c.scalable_allocation_command", "reserved"]]}, "objtypes": {"0": "c:macro", "1": "c:function", "2": "c:functionParam", "3": "cpp:function", "4": "cpp:functionParam", "5": "cpp:type", "6": "cpp:member", "7": "cpp:class", "8": "cpp:templateParam", "9": "cpp:enum", "10": "cpp:enumerator"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["c", "function", "C function"], "2": ["c", "functionParam", "C function parameter"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "functionParam", "C++ function parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "member", "C++ member"], "7": ["cpp", "class", "C++ class"], "8": ["cpp", "templateParam", "C++ template parameter"], "9": ["cpp", "enum", "C++ enum"], "10": ["cpp", "enumerator", "C++ enumerator"]}, "titleterms": {"softwar": 0, "architectur": [0, 183], "oneapi": [0, 5, 37, 42, 452, 460, 585, 870], "platform": 0, "api": [0, 57, 59, 148, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 181, 183, 251, 253], "program": [0, 6, 18, 19, 21, 24, 28, 33, 34, 36, 37, 40, 41, 49, 148], "exampl": [0, 18, 19, 21, 24, 33, 34, 36, 37, 39, 48, 55, 151, 152, 156, 367, 415, 458, 561, 565, 567, 568, 572, 573, 752, 758, 760, 762, 763, 773, 775, 777, 779, 780, 785, 788, 848, 850, 851, 852], "direct": 0, "definit": [2, 28, 38, 50, 62, 158, 262, 871], "oneccl": [3, 11, 16], "introduct": [4, 44, 150, 791, 871], "namespac": [5, 30, 150, 173, 183, 585, 790], "ccl": 5, "model": [6, 18, 21, 24, 49, 55, 56, 60, 61, 148, 183, 367, 415, 458, 836, 837], "collect": 7, "oper": [7, 11, 12, 13, 14, 18, 19, 21, 24, 37, 38, 50, 51, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 261, 591, 600, 612, 614, 627, 641, 654, 662, 670, 684, 686, 699, 713, 727, 741, 750, 861], "allgatherv": 7, "allreduc": 7, "alltoallv": 7, "barrier": 7, "broadcast": [7, 113, 114], "reduc": 7, "reducescatt": 7, "point": [7, 47, 151], "To": 7, "send": 7, "recv": 7, "datatyp": [8, 183], "custom": 8, "error": [9, 29, 148, 150, 151, 183], "handl": [9, 29, 148, 150, 151, 183, 419, 588], "except": [9, 29, 183, 552, 739], "classif": [9, 24, 29, 183], "common": [9, 28, 31, 42, 62, 158, 183], "gener": [10, 50, 148, 150, 173, 181, 264, 348, 355, 356, 367, 368, 372, 373, 386, 416, 418, 841], "workflow": [10, 53, 55], "concept": [11, 39], "devic": [11, 178, 183, 346, 348, 356, 367, 368, 369], "context": 11, "kei": [11, 39, 599], "valu": [11, 295, 541, 599, 605, 622, 636, 650, 679, 694, 708, 722, 736], "store": [11, 588], "commun": [11, 14], "stream": [11, 60, 148], "event": [11, 13], "attribut": [11, 12, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "progress": 13, "track": 13, "reduct": [15, 166], "current": [16, 32], "version": [16, 32, 173, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 386, 421, 422, 423, 424, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 586], "thi": [16, 32], "specif": [16, 32, 52, 183, 870, 871], "cluster": 17, "k": [18, 19, 24, 26], "mean": [18, 19, 161, 440, 442, 445, 448, 457, 460], "mathemat": [18, 19, 21, 24, 45, 553], "formul": [18, 19, 21, 24], "train": [18, 21, 24, 51, 153, 156, 157, 160, 161, 164, 165, 168, 170, 171], "method": [18, 19, 21, 24, 47, 347, 371], "lloyd": 18, "": 18, "infer": [18, 21, 24, 51, 153, 156, 157, 160, 161, 164, 165, 168, 170, 171], "usag": [18, 19, 21, 24, 33, 34, 36, 37, 183, 260, 262, 367, 415, 458], "interfac": [18, 19, 21, 24, 28, 31, 33, 34, 36, 37, 40, 41, 408, 683, 698, 712, 726, 752, 793, 839, 840, 843], "descriptor": [18, 19, 21, 24, 47, 59, 158, 259, 261], "tag": [18, 19, 21, 24, 57, 556, 846], "task": [18, 19, 21, 24, 47, 810, 845, 848], "input": [18, 19, 21, 24, 50, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "result": [18, 19, 21, 24, 38, 50], "initi": 19, "comput": [19, 46, 47, 51], "dens": [19, 264, 419], "decomposit": 20, "princip": 21, "compon": 21, "analysi": 21, "pca": 21, "covari": 21, "svd": 21, "sign": 21, "flip": 21, "techniqu": 21, "algorithm": [22, 156, 176, 180, 181, 556, 810], "nearest": [23, 24, 168], "neighbor": [23, 24, 168], "knn": 23, "nn": 24, "brute": 24, "forc": 24, "d": [24, 26], "tree": [24, 26], "appendix": [25, 182], "relat": [26, 151, 263], "term": [26, 42, 815], "bibliographi": [27, 345, 476], "type": [28, 35, 38, 41, 47, 54, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 263, 381, 438, 557, 558, 559, 751, 752, 753, 766, 769, 774, 790, 845, 846, 847, 849, 851, 859], "scalar": [28, 367, 461], "enum": [28, 62], "class": [28, 158, 178, 261, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 364, 365, 366, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 561, 565, 568, 573, 587, 588, 589, 590, 598, 599, 611, 625, 626, 639, 640, 653, 661, 669, 682, 697, 711, 725, 739, 752, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 868, 869], "data": [28, 36, 37, 38, 39, 41, 54, 56, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 258, 259, 262, 419], "rang": [28, 180, 262, 556, 608, 621, 635, 649, 678, 693, 707, 721, 735, 748, 824], "header": [30, 173], "file": [30, 173], "oned": [32, 42, 43], "column": 33, "accessor": [33, 34, 35, 39, 599], "row": 34, "requir": [35, 36, 41, 739, 810, 836, 837], "detail": [35, 38, 39, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "arrai": 36, "ownership": 36, "implement": [36, 149], "note": [36, 148, 149, 150], "csv": 37, "sourc": [37, 38, 39, 149, 153, 161, 162, 164, 165, 171, 172], "read": [37, 38], "dal": 37, "object": [37, 39, 59, 62, 181, 625, 639], "arg": [37, 38, 467], "shortcut": [38, 50], "manag": [39, 151, 260], "dataset": [39, 443], "tabl": [39, 40, 41, 262], "metadata": [39, 41], "interact": 39, "between": [39, 153, 156, 157, 160, 161, 164, 165, 168, 170, 171], "homogen": 40, "layout": [41, 170, 258], "featur": [41, 183, 583, 584], "glossari": 42, "machin": 42, "learn": 42, "notat": [45, 52, 541, 844], "mode": [46, 151], "batch": [46, 153], "onlin": 46, "distribut": [46, 346, 347, 370, 371], "float": [47, 151], "end": [48, 89, 603, 615, 629, 643, 672, 683, 688, 698, 702, 712, 716, 726, 730, 744], "support": [50, 51, 53, 55, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 438], "convent": [52, 844], "variabl": [52, 586], "tensor": [52, 62, 148, 153], "name": [52, 810], "rnn": [52, 169], "bfloat16": 53, "int8": 55, "quantiz": [55, 116, 151], "numer": 55, "behavior": 55, "convolut": [55, 80, 151, 156], "per": [55, 151], "channel": [55, 151], "scale": [55, 151, 161], "memori": [57, 58, 59, 183, 792], "format": [57, 420], "plain": 57, "optim": 57, "ani": 57, "propag": 57, "execut": [60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 183], "engin": [60, 148, 348, 372], "low": 61, "precis": [61, 263], "logic": [62, 148], "kind": 62, "graph": [62, 63, 148, 150, 752, 760, 764, 773, 810], "member": [62, 183, 261, 557, 558, 559, 560, 562, 563, 569, 571, 575, 580, 588, 589, 590, 594, 595, 596, 597, 598, 599, 606, 607, 608, 611, 617, 618, 619, 621, 625, 626, 631, 632, 633, 635, 639, 640, 645, 646, 647, 649, 653, 656, 657, 661, 665, 666, 667, 668, 669, 674, 675, 676, 678, 682, 690, 691, 693, 697, 704, 705, 707, 711, 718, 719, 721, 725, 732, 733, 735, 739, 745, 746, 747, 748, 751, 753, 754, 755, 756, 758, 762, 764, 766, 767, 769, 771, 774, 777, 779, 780, 785, 786, 787, 788, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 847, 849, 850, 851, 852, 854, 855, 856, 858, 859, 866, 869], "function": [62, 169, 178, 181, 183, 256, 257, 261, 262, 553, 554, 556, 557, 558, 559, 560, 562, 563, 569, 571, 575, 580, 586, 588, 589, 590, 596, 597, 598, 599, 608, 611, 621, 625, 626, 635, 639, 640, 649, 653, 661, 667, 668, 669, 678, 682, 693, 697, 707, 711, 721, 725, 735, 739, 748, 751, 752, 753, 754, 755, 756, 758, 762, 763, 764, 766, 767, 769, 771, 774, 777, 779, 780, 785, 786, 787, 788, 790, 792, 794, 795, 796, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 847, 849, 850, 851, 852, 854, 856, 858, 859, 866, 869], "macro": [62, 583, 584, 586], "specifi": 62, "unknown": 62, "shape": 62, "extens": [63, 150, 181, 192, 295], "ab": [64, 462], "argument": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 461], "output": [64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151], "absbackward": 65, "add": [66, 466], "avgpool": 67, "avgpoolbackward": 68, "batchnormforwardtrain": 69, "batchnorminfer": 70, "batchnormtrainingbackward": 71, "biasadd": 72, "biasaddbackward": 73, "clamp": 74, "clampbackward": 75, "concat": [76, 155], "convtranspos": 77, "convtransposebackwarddata": 78, "convtransposebackwardweight": 79, "regular": [80, 156], "group": [80, 151, 156, 845], "dilat": [80, 156], "convolutionbackwarddata": 81, "convolutionbackwardweight": 82, "dequant": 83, "divid": 84, "dynamicdequant": 85, "dynamicquant": 86, "elu": 87, "elubackward": 88, "exp": [90, 495], "gelu": 91, "gelubackward": 92, "hardsigmoid": 93, "hardsigmoidbackward": 94, "hardswish": 95, "hardswishbackward": 96, "interpol": 97, "interpolatebackward": 98, "layernorm": 99, "layernormbackward": 100, "leakyrelu": 101, "log": 102, "logsoftmax": 103, "logsoftmaxbackward": 104, "matmul": 105, "maxpool": 106, "maxpoolbackward": 107, "maximum": 108, "minimum": 109, "mish": 110, "mishbackward": 111, "multipli": 112, "prelu": [113, 165], "rule": [113, 114], "prelubackward": 114, "pow": [115, 526], "relu": [117, 152], "relubackward": 118, "reciproc": 119, "reducel1": 120, "reducel2": 121, "reducemax": 122, "reducemean": 123, "reducemin": 124, "reduceprod": 125, "reducesum": 126, "reorder": [127, 167], "round": [128, 533], "select": 129, "sigmoid": 130, "sigmoidbackward": 131, "softplu": 132, "softplusbackward": 133, "softmax": [134, 171], "softmaxbackward": 135, "sqrt": [136, 543], "sqrtbackward": 137, "squar": 138, "squareddiffer": 139, "staticreshap": 140, "statictranspos": 141, "subtract": 142, "tanh": [143, 547], "tanhbackward": 144, "typecast": 145, "wildcard": 146, "set": 147, "partit": [148, 408], "compil": 148, "onednn": 149, "open": 149, "test": 149, "scratchpad": 151, "librari": [151, 181, 792], "user": 151, "zero": 151, "1": [151, 156, 189], "weight": 151, "2": [151, 156, 190], "implicit": 151, "downconvers": 151, "math": [151, 264, 551], "post": [152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183], "op": [152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "eltwis": 152, "sum": [152, 172], "binari": [152, 154, 594, 606, 617, 631, 645, 656, 665, 674, 690, 704, 718, 732, 745], "chain": 152, "normal": [153, 158, 161, 162], "forward": [153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 168, 170, 171, 761], "differ": [153, 156, 157, 160, 161, 164, 165, 168, 170, 171], "backward": [153, 154, 155, 156, 157, 160, 161, 162, 164, 165, 168, 170, 171, 262], "represent": [153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172], "destin": [153, 161, 162, 164, 165, 171, 172], "Their": [153, 161, 162, 164, 165, 171], "gradient": [153, 161, 162, 164, 165, 171], "statist": [153, 264, 451, 454, 458], "deconvolut": 156, "transpos": 156, "elementwis": 157, "base": [158, 415, 458], "primit": [158, 159], "enumer": [158, 263, 569, 764, 783], "flag": 158, "indic": [158, 262], "inner": 160, "product": 160, "layer": 161, "varianc": 161, "shift": 161, "local": [162, 857], "respons": 162, "matrix": [163, 344, 419, 432, 433], "multipl": 163, "pool": 164, "resampl": 168, "bilinear": 168, "cell": 169, "vanilla": 169, "lstm": 169, "peephol": 169, "project": 169, "gru": 169, "linear": [169, 264, 295], "befor": 169, "reset": 169, "augru": 169, "shuffl": 170, "inform": [173, 586, 841], "onedpl": 174, "parallel": [175, 176, 180, 556, 608, 621, 635, 649, 678, 693, 707, 721, 735, 748], "buffer": [177, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 386, 415, 421, 422, 423, 424, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 459, 460, 752, 761], "wrapper": 177, "polici": [178, 602, 687, 701, 715, 729, 763, 770], "c": [178, 181, 183, 793], "standard": [178, 181, 183], "align": 178, "device_polici": 178, "predefin": [178, 778], "make_device_polici": 178, "trait": 178, "iter": [179, 593, 603, 608, 615, 621, 629, 635, 643, 649, 664, 672, 678, 688, 693, 702, 707, 716, 721, 730, 735, 744, 748, 862], "whole": 180, "sequenc": [180, 587, 591, 600, 605, 612, 622, 624, 627, 636, 638, 641, 650, 652, 654, 662, 670, 679, 681, 684, 694, 696, 699, 708, 710, 713, 722, 724, 727, 736, 738, 741, 835], "element": [180, 408, 588, 591, 596, 597, 600, 605, 612, 614, 622, 624, 627, 636, 638, 641, 650, 652, 654, 658, 662, 667, 668, 670, 679, 681, 684, 686, 694, 696, 699, 708, 710, 713, 722, 724, 727, 736, 738, 741, 743], "search": 180, "comparison": [180, 594, 606, 617, 618, 631, 632, 645, 646, 656, 665, 674, 675, 690, 704, 718, 732, 745, 746], "sort": [180, 432], "merg": [180, 636, 650, 679, 708, 722, 736], "mutat": 180, "sycl": 181, "kernel": 181, "random": [181, 264, 348, 367, 368, 372, 416, 418], "number": [181, 264, 348, 367, 368, 372, 408, 416, 418, 597, 668, 683, 698, 712, 726], "limit": [181, 778], "onemkl": [182, 183, 264, 367, 415, 458, 555], "futur": 182, "consider": 182, "acknowledg": 182, "us": 183, "queue": [183, 587, 596, 763], "non": [183, 569, 590, 594, 595, 598, 606, 607, 611, 617, 618, 619, 626, 631, 632, 633, 640, 645, 646, 647, 653, 656, 657, 661, 665, 666, 669, 674, 675, 676, 682, 690, 691, 697, 704, 705, 711, 718, 719, 725, 732, 733, 739, 745, 746, 747, 769, 787, 794, 796, 798, 850, 854, 856, 859, 866, 869], "asynchron": 183, "synchron": 183, "when": 183, "usm": [183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 265, 267, 268, 271, 273, 275, 276, 279, 280, 283, 284, 287, 289, 291, 293, 296, 298, 299, 302, 304, 306, 308, 310, 311, 314, 316, 317, 320, 322, 324, 326, 328, 330, 332, 333, 336, 338, 340, 342, 386, 415, 421, 422, 423, 424, 428, 429, 430, 431, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460], "host": [183, 370, 372, 373, 415, 416, 417], "thread": [183, 857, 867], "safeti": [183, 739, 867], "The": [183, 256, 257, 261, 597, 668, 683, 698, 712, 726], "unifi": 183, "share": 183, "design": 183, "dpc": 183, "defin": 183, "lapack": [183, 295], "other": [183, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739], "complianc": 183, "pre": 183, "condit": 183, "check": 183, "asum": 184, "axpbi": 185, "axpi": 186, "axpy_batch": 187, "bla": [188, 189, 190, 191, 192, 437, 461], "routin": [188, 189, 190, 191, 295, 356, 368, 369, 373, 416, 417, 454, 455], "level": [189, 190, 191], "3": 191, "like": [192, 295], "copi": [193, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "copy_batch": 194, "dgmm_batch": 195, "dot": 196, "dotc": 197, "dotu": 198, "gbmv": 199, "gemm": 200, "gemm_batch": 201, "gemm_bia": 202, "gemmt": 203, "gemv": 204, "gemv_batch": 205, "ger": 206, "gerc": 207, "geru": 208, "hbmv": 209, "hemm": 210, "hemv": 211, "her": 212, "her2": 213, "her2k": 214, "herk": 215, "hpmv": 216, "hpr": 217, "hpr2": 218, "iamax": 219, "iamin": 220, "imatcopi": 221, "imatcopy_batch": 222, "nrm2": 223, "omatadd": 224, "omatadd_batch": 225, "omatcopi": 226, "omatcopy2": 227, "omatcopy_batch": 228, "rot": 229, "rotg": 230, "rotm": 231, "rotmg": 232, "sbmv": 233, "scal": 234, "sdsdot": 235, "spmv": [236, 435], "spr": 237, "spr2": 238, "swap": [239, 588, 595, 597, 607, 610, 619, 624, 633, 638, 647, 652, 657, 660, 666, 668, 676, 681, 691, 696, 705, 710, 719, 724, 733, 738, 747, 750], "symm": 240, "symv": 241, "syr": 242, "syr2": 243, "syr2k": 244, "syrk": 245, "syrk_batch": 246, "tbmv": 247, "tbsv": 248, "tpmv": 249, "tpsv": 250, "trmm": 251, "In": [251, 253], "place": [251, 253], "out": [251, 253], "trmv": 252, "trsm": 253, "trsm_batch": 254, "trsv": 255, "compute_backward": 256, "templat": [256, 257, 261, 347, 371, 438, 568, 589, 590, 598, 611, 626, 640, 653, 661, 669, 682, 697, 711, 725, 739], "compute_forward": 257, "configur": [258, 582], "storag": [259, 344, 420, 857], "complex": 259, "real": [259, 262], "workspac": 260, "placement": 260, "automat": 260, "extern": 260, "typic": 260, "descript": [261, 682, 697, 711, 725, 739], "constructor": [261, 588, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "assign": [261, 588, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "set_valu": 261, "get_valu": 261, "set_workspac": 261, "commit": 261, "discret": [262, 264, 366, 411], "fourier": [262, 264], "transform": [262, 264], "elementari": 262, "addit": 262, "constraint": 262, "domain": [262, 263, 264], "dft": [262, 263], "recommend": 262, "summari": [262, 264, 451, 454, 458, 761], "scope": 263, "config_param": 263, "config_valu": 263, "algebra": 264, "spars": [264, 419, 420, 437], "vector": [264, 367, 419, 551], "gebrd": 265, "gebrd_scratchpad_s": 266, "geqrf": 267, "geqrf_batch": 268, "geqrf_batch_scratchpad_s": 269, "geqrf_scratchpad_s": 270, "gerqf": 271, "gerqf_scratchpad_s": 272, "gesvd": 273, "gesvd_scratchpad_s": 274, "getrf": 275, "getrf_batch": 276, "getrf_batch_scratchpad_s": 277, "getrf_scratchpad_s": 278, "getri": 279, "getri_batch": 280, "getri_batch_scratchpad_s": 281, "getri_scratchpad_s": 282, "getr": 283, "getrs_batch": 284, "getrs_batch_scratchpad_s": 285, "getrs_scratchpad_s": 286, "heevd": 287, "heevd_scratchpad_s": 288, "hegvd": 289, "hegvd_scratchpad_s": 290, "hetrd": 291, "hetrd_scratchpad_s": 292, "hetrf": 293, "hetrf_scratchpad_s": 294, "equat": 295, "singular": 295, "eigenvalu": 295, "problem": 295, "orgbr": 296, "orgbr_scratchpad_s": 297, "orgqr": 298, "orgqr_batch": 299, "orgqr_batch_scratchpad_s": 300, "orgqr_scratchpad_s": 301, "orgtr": 302, "orgtr_scratchpad_s": 303, "ormqr": 304, "ormqr_scratchpad_s": 305, "ormrq": 306, "ormrq_scratchpad_s": 307, "ormtr": 308, "ormtr_scratchpad_s": 309, "potrf": 310, "potrf_batch": 311, "potrf_batch_scratchpad_s": 312, "potrf_scratchpad_s": 313, "potri": 314, "potri_scratchpad_s": 315, "potr": 316, "potrs_batch": 317, "potrs_batch_scratchpad_s": 318, "potrs_scratchpad_s": 319, "syevd": 320, "syevd_scratchpad_s": 321, "sygvd": 322, "sygvd_scratchpad_s": 323, "sytrd": 324, "sytrd_scratchpad_s": 325, "sytrf": 326, "sytrf_scratchpad_s": 327, "trtr": 328, "trtrs_scratchpad_s": 329, "ungbr": 330, "ungbr_scratchpad_s": 331, "ungqr": 332, "ungqr_batch": 333, "ungqr_batch_scratchpad_s": 334, "ungqr_scratchpad_s": 335, "ungtr": 336, "ungtr_scratchpad_s": 337, "unmqr": 338, "unmqr_scratchpad_s": 339, "unmrq": 340, "unmrq_scratchpad_s": 341, "unmtr": 342, "unmtr_scratchpad_s": 343, "paramet": [347, 371], "basic": [348, 372], "bernoulli": [349, 375], "beta": [350, 376], "bit": [351, 378], "exponenti": [352, 382], "gamma": [353, 383], "gaussian": [354, 384], "lognorm": [357, 392], "mcg31m1": [358, 393], "mcg59": [359, 394], "mrg32k3a": [360, 395], "philox4x32x10": [361, 402], "poisson": [362, 403], "skip_ahead": [363, 408], "uniform_bit": [364, 412], "uniform": [365, 366, 410, 411], "continu": [365, 410], "rng": [367, 415, 418], "servic": [369, 417, 455, 554, 752], "ars5": 374, "binomi": 377, "cauchi": 379, "chi_squar": 380, "default_engin": 381, "alia": 381, "gaussian_mv": 385, "geometr": 387, "gumbel": 388, "hypergeometr": 389, "laplac": 390, "leapfrog": 391, "mt19937": 396, "mt2203": 397, "multinomi": 398, "negative_binomi": 399, "niederreit": 400, "nondeterminist": 401, "poisson_v": 404, "r250": 405, "rayleigh": 406, "sfmt19937": 407, "skip": 408, "sobol": 409, "weibul": 413, "wichmann_hil": 414, "init_coo_matrix": 421, "init_csr_matrix": 422, "init_dense_matrix": 423, "init_dense_vector": 424, "release_dense_matrix": 425, "release_dense_vector": 426, "release_sparse_matrix": 427, "set_coo_matrix_data": 428, "set_csr_matrix_data": 429, "set_dense_matrix_data": 430, "set_dense_vector_data": 431, "set_matrix_properti": 432, "properti": [432, 752, 761], "symmetr": 432, "sorted_by_row": 432, "view": 433, "matrix_descr": 433, "matrix_view": 433, "spmm": 434, "spmm_descr": 434, "init_spmm_descr": 434, "release_spmm_descr": 434, "spmm_alg": 434, "spmv_descr": 435, "init_spmv_descr": 435, "release_spmv_descr": 435, "spmv_alg": 435, "spsv": 436, "spsv_descr": 436, "init_spsv_descr": 436, "release_spsv_descr": 436, "spsv_alg": 436, "central_mo": [439, 440], "provid": [440, 442, 445, 457, 460, 836, 837], "central_sum": [441, 442], "structur": 443, "kurtosi": [444, 445], "make_dataset": 446, "max": 447, "min": 449, "min_max": 450, "raw_moment": 452, "mkl": [452, 460], "stat": [452, 460], "raw_sum": 453, "skew": [456, 457], "variat": [459, 460], "aco": 463, "acosh": 464, "acospi": 465, "asin": 468, "asinh": 469, "asinpi": 470, "atan": 471, "atan2": 472, "atan2pi": 473, "atanh": 474, "atanpi": 475, "cbrt": 477, "cdfnorm": 478, "cdfnorminv": 479, "ceil": 480, "ci": 481, "clear_statu": 482, "conj": 483, "copysign": 484, "co": 485, "cosd": 486, "cosh": 487, "cospi": 488, "create_error_handl": 489, "div": 490, "erf": 491, "erfc": 492, "erfcinv": 493, "erfinv": 494, "exp10": 496, "exp2": 497, "expint1": 498, "expm1": 499, "fdim": 500, "floor": 501, "fmax": 502, "fmin": 503, "fmod": 504, "frac": 505, "get_mod": 506, "get_statu": 507, "hypot": 508, "inv": 509, "invcbrt": 510, "invsqrt": 511, "lgamma": 512, "linearfrac": 513, "ln": 514, "log10": 515, "log1p": 516, "log2": 517, "logb": 518, "maxmag": 519, "minmag": 520, "modf": 521, "mul": 522, "mulbyconj": 523, "nearbyint": 524, "nextaft": 525, "pow2o3": 527, "pow3o2": 528, "powr": 529, "powx": 530, "remaind": 531, "rint": 532, "set_statu": 534, "set_mod": 535, "sin": 536, "sinco": 537, "sind": 538, "sinh": 539, "sinpi": 540, "special": [541, 752], "sqr": 542, "sub": 544, "tan": 545, "tand": 546, "tanpi": 548, "tgamma": 549, "trunc": 550, "vm": [553, 554], "block": 556, "partition": 556, "split": [556, 580, 581], "blocked_nd_rang": 557, "blocked_range2d": 558, "blocked_range3d": 559, "blocked_rang": 560, "collaborative_call_onc": 561, "collaborative_once_flag": [561, 562], "feeder": [563, 565], "parallel_deterministic_reduc": 564, "parallel_for_each": 565, "parallel_for": 566, "parallel_invok": 567, "parallel_pipelin": 568, "filter": [568, 569], "flow_control": [568, 571], "filter_mod": [569, 570], "deduct": [569, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 758, 762, 767, 769, 785], "guid": [569, 592, 601, 613, 628, 642, 655, 663, 671, 685, 700, 714, 728, 742, 758, 762, 767, 769, 785], "parallel_reduc": 572, "imper": [572, 573], "form": [572, 573], "lambda": [572, 573], "express": [572, 573], "parallel_scan": 573, "pre_scan": 573, "final_scan": 573, "parallel_sort": 574, "pre_scan_tag": 575, "final_scan_tag": 575, "affinity_partition": 576, "auto_partition": 577, "simple_partition": 578, "static_partition": 579, "proport": 580, "enabl": 583, "debug": 583, "tbb_use_assert": 583, "tbb_use_profiling_tool": 583, "tbb_use_except": 584, "tbb_use_glibcxx_vers": 584, "tbb": 585, "flow": [585, 752, 760, 773, 810], "tbb_runtime_interface_vers": 586, "tbb_runtime_vers": 586, "tbb_version": 586, "environ": 586, "contain": [587, 591, 600, 612, 616, 627, 630, 636, 641, 644, 650, 654, 662, 670, 673, 679, 684, 689, 699, 703, 708, 713, 717, 722, 727, 731, 736, 741, 810, 861], "unord": 587, "associ": 587, "order": 587, "auxiliari": [587, 839], "node": [588, 622, 624, 636, 638, 650, 652, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 752, 763, 775], "synopsi": [588, 589, 590, 598, 611, 625, 626, 639, 640, 653, 661, 669, 682, 697, 711, 725, 739], "destructor": [588, 591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "state": 588, "access": [588, 599, 614, 686, 743], "get_alloc": [588, 596, 600, 620, 634, 648, 667, 677, 692, 706, 720, 734, 741], "tbb_hash_compar": 589, "concurrent_bounded_queu": 590, "construct": [591, 599, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "destruct": [591, 599, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "empti": [591, 599, 600, 609, 612, 623, 627, 637, 641, 651, 654, 659, 662, 670, 680, 684, 695, 699, 709, 713, 723, 727, 737, 741, 749, 861], "from": [591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741], "move": [591, 600, 612, 627, 641, 654, 662, 670, 684, 699, 713, 727, 741, 861], "unsafe_begin": [593, 664], "unsafe_cbegin": [593, 664], "unsafe_end": [593, 664], "unsafe_cend": [593, 664], "concurr": [596, 597, 605, 610, 622, 624, 636, 638, 650, 652, 658, 660, 667, 668, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 740, 750, 778, 863, 865], "safe": [596, 605, 622, 636, 650, 658, 667, 679, 694, 708, 722, 736, 863], "push": [596, 658, 667], "pop": [596, 658, 667], "abort": 596, "capac": [596, 609, 623, 637, 651, 659, 680, 695, 709, 723, 737, 749, 864], "unsaf": [597, 610, 624, 638, 652, 660, 668, 681, 696, 710, 724, 738, 750, 865], "clear": [597, 610, 624, 638, 652, 660, 668, 681, 696, 710, 724, 738, 750, 865], "concurrent_hash_map": 598, "const_accessor": 599, "pair": 599, "releas": 599, "hash": [602, 687, 701, 715, 729], "rehash": [602, 687, 701, 715, 729], "bucket_count": 602, "begin": [603, 615, 629, 643, 672, 683, 688, 698, 702, 712, 716, 726, 730, 744], "cbegin": [603, 615, 629, 643, 672, 688, 702, 716, 730, 744], "cend": [603, 615, 629, 643, 672, 688, 702, 716, 730, 744], "equal_rang": [603, 616, 630, 644, 673, 689, 703, 717, 731], "lookup": [604, 616, 630, 644, 673, 689, 703, 717, 731], "find": [604, 616, 630, 644, 673, 689, 703, 717, 731], "count": [604, 616, 630, 644, 673, 689, 703, 717, 731], "modifi": [605, 610, 622, 624, 636, 638, 650, 652, 658, 660, 679, 681, 694, 696, 708, 710, 722, 724, 736, 738, 863, 865], "insert": [605, 622, 636, 650, 679, 694, 708, 722, 736], "emplac": [605, 622, 636, 650, 679, 694, 708, 722, 736], "eras": [605, 624, 638, 652, 681, 696, 710, 724, 738], "size": [609, 623, 637, 651, 659, 680, 683, 695, 698, 709, 712, 723, 726, 737, 749, 864], "max_siz": [609, 623, 637, 651, 680, 695, 709, 723, 737, 749], "concurrent_map": 611, "lower_bound": [616, 630, 644, 673], "upper_bound": [616, 630, 644, 673], "lexicograph": [618, 632, 646, 675, 746], "observ": [620, 634, 648, 677, 692, 706, 720, 734], "key_comp": [620, 634, 648, 677], "value_comp": [620, 634, 648, 677], "extract": [624, 638, 652, 681, 696, 710, 724, 738], "value_compar": [625, 639], "concurrent_multimap": 626, "concurrent_multiset": 640, "concurrent_priority_queu": 653, "concurrent_queu": 661, "concurrent_set": 669, "concurrent_unordered_map": 682, "bucket": [683, 698, 712, 726], "load": [687, 701, 715, 729], "factor": [687, 701, 715, 729], "manual": [687, 701, 715, 729], "hash_funct": [692, 706, 720, 734], "key_eq": [692, 706, 720, 734], "concurrent_unordered_multimap": 697, "concurrent_unordered_multiset": 711, "concurrent_unordered_set": 725, "concurrent_vector": 739, "growth": 740, "grow_bi": 740, "grow_to_at_least": 740, "push_back": 740, "emplace_back": 740, "index": 743, "first": 743, "last": 743, "rbegin": 744, "crbegin": 744, "rend": 744, "crend": 744, "reserv": [750, 789], "resiz": 750, "shrink_to_fit": 750, "task_arena": [751, 851], "attach": [751, 846], "constant": [751, 847, 849, 851, 855, 859], "abstract": 752, "port": 752, "edg": 752, "messag": [752, 773], "async_nod": 753, "broadcast_nod": 754, "buffer_nod": 755, "composite_nod": 756, "continue_msg": 757, "continue_nod": 758, "copy_bodi": 759, "depend": 760, "function_nod": 762, "reject": 763, "lightweight": 763, "reset_flag": [764, 783], "graph_nod": 765, "indexer_nod": 766, "input_nod": 767, "input_port": 768, "join_nod": [769, 770], "limiter_nod": 771, "make_edg": 772, "multifunction_nod": 774, "prioriti": 775, "output_port": 776, "overwrite_nod": 777, "priority_queue_nod": 779, "queue_nod": 780, "receiv": 781, "remove_edg": 782, "sender": 784, "sequencer_nod": 785, "split_nod": 786, "tagged_msg": 787, "write_once_nod": 788, "identifi": 789, "case": 789, "prefix": 789, "info": 790, "alloc": [792, 793], "resourc": 792, "scalabl": 793, "cache_aligned_alloc": 794, "cache_aligned_resourc": 795, "scalable_alloc": 796, "scalable_memory_resourc": 797, "tbb_alloc": 798, "mutual": 799, "exclus": 799, "mutex": [799, 800, 810, 836, 837], "null_mutex": 801, "null_rw_mutex": 802, "queuing_mutex": 803, "queuing_rw_mutex": 804, "rw_mutex": 805, "speculative_spin_mutex": 806, "speculative_spin_rw_mutex": 807, "spin_mutex": 808, "spin_rw_mutex": 809, "schedul": [810, 845], "blockedrangevalu": 811, "containerbasedsequ": 812, "filterbodi": 813, "parallelforbodi": 814, "parallelforeachbodi": 815, "parallelforfunc": 816, "parallelforindex": 817, "parallelreducebodi": 818, "parallelreducefunc": 819, "parallelreducereduct": 820, "parallelscanbodi": 821, "parallelscancombin": 822, "parallelscanfunc": 823, "splittabl": 825, "containerrang": 826, "hashcompar": 827, "asyncnodebodi": 828, "continuenodebodi": 829, "functionnodebodi": 830, "gatewaytyp": 831, "inputnodebodi": 832, "joinnodefunctionobject": 833, "multifunctionnodebodi": 834, "guarante": [836, 837], "readerwritermutex": 837, "suspendfunc": 838, "onetbb": [839, 840, 842, 843], "deprec": 840, "control": 845, "arena": 845, "helper": 845, "global_control": 847, "resum": 848, "task_group_context": 849, "task_scheduler_handl": 850, "task_scheduler_observ": 852, "this_task_arena": 853, "task_group": 854, "task_group_statu": 855, "task_handl": 856, "combin": [858, 860], "enumerable_thread_specif": 859, "flattened2d": 866, "time": 868, "syntax": 868, "tick_count": 869, "interval_t": 869, "target": 871, "audienc": 871, "goal": 871, "contribut": 871, "guidelin": 871, "legal": 872, "notic": 872, "disclaim": 872}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Software Architecture": [[0, "software-architecture"]], "oneAPI Platform": [[0, "oneapi-platform"]], "API Programming Example": [[0, "api-programming-example"]], "Direct Programming Example": [[0, "direct-programming-example"]], "Definitions": [[2, "definitions"], [262, "definitions"], [871, "definitions"]], "oneCCL": [[3, "oneccl"]], "Introduction": [[4, "introduction"], [44, "introduction"], [150, "introduction"], [791, "introduction"], [871, "introduction"]], "Namespaces": [[5, "namespaces"], [30, "namespaces"], [150, "namespaces"], [173, "namespaces"], [585, "namespaces"]], "oneapi::ccl namespace": [[5, "oneapi-ccl-namespace"]], "ccl namespace": [[5, "ccl-namespace"]], "Programming Model": [[6, "programming-model"], [148, "programming-model"]], "Collective Operations": [[7, "collective-operations"]], "Allgatherv": [[7, "allgatherv"]], "Allreduce": [[7, "allreduce"]], "Alltoallv": [[7, "alltoallv"]], "Barrier": [[7, "barrier"]], "Broadcast": [[7, "broadcast"]], "Reduce": [[7, "reduce"]], "ReduceScatter": [[7, "reducescatter"]], "Point-To-Point Operations": [[7, "point-to-point-operations"]], "Send": [[7, "send"]], "Recv": [[7, "recv"]], "Datatypes": [[8, "datatypes"]], "Custom Datatypes": [[8, "custom-datatypes"]], "Error handling": [[9, "error-handling"], [29, "error-handling"]], "Exception classification": [[9, "exception-classification"], [29, "exception-classification"], [183, "exception-classification"]], "Common exceptions": [[9, "common-exceptions"], [183, "common-exceptions"]], "Generic Workflow": [[10, "generic-workflow"]], "oneCCL Concepts": [[11, "oneccl-concepts"]], "Device": [[11, "device"]], "Context": [[11, "context"]], "Key-Value Store": [[11, "key-value-store"]], "Communicator": [[11, "communicator"]], "Stream": [[11, "stream"], [60, "stream"], [148, "stream"]], "Event": [[11, "event"], [13, "event"]], "Operation Attributes": [[11, "operation-attributes"], [12, "operation-attributes"], [64, "operation-attributes"], [65, "operation-attributes"], [66, "operation-attributes"], [67, "operation-attributes"], [68, "operation-attributes"], [69, "operation-attributes"], [70, "operation-attributes"], [71, "operation-attributes"], [72, "operation-attributes"], [73, "operation-attributes"], [74, "operation-attributes"], [75, "operation-attributes"], [76, "operation-attributes"], [77, "operation-attributes"], [78, "operation-attributes"], [79, "operation-attributes"], [80, "operation-attributes"], [81, "operation-attributes"], [82, "operation-attributes"], [83, "operation-attributes"], [84, "operation-attributes"], [85, "operation-attributes"], [86, "operation-attributes"], [87, "operation-attributes"], [88, "operation-attributes"], [89, "operation-attributes"], [90, "operation-attributes"], [91, "operation-attributes"], [92, "operation-attributes"], [93, "operation-attributes"], [94, "operation-attributes"], [95, "operation-attributes"], [96, "operation-attributes"], [97, "operation-attributes"], [98, "operation-attributes"], [99, "operation-attributes"], [100, "operation-attributes"], [101, "operation-attributes"], [102, "operation-attributes"], [103, "operation-attributes"], [104, "operation-attributes"], [105, "operation-attributes"], [106, "operation-attributes"], [107, "operation-attributes"], [108, "operation-attributes"], [109, "operation-attributes"], [110, "operation-attributes"], [111, "operation-attributes"], [112, "operation-attributes"], [113, "operation-attributes"], [114, "operation-attributes"], [116, "operation-attributes"], [117, "operation-attributes"], [118, "operation-attributes"], [119, "operation-attributes"], [120, "operation-attributes"], [121, "operation-attributes"], [122, "operation-attributes"], [123, "operation-attributes"], [124, "operation-attributes"], [125, "operation-attributes"], [126, "operation-attributes"], [127, "operation-attributes"], [128, "operation-attributes"], [129, "operation-attributes"], [130, "operation-attributes"], [131, "operation-attributes"], [132, "operation-attributes"], [133, "operation-attributes"], [134, "operation-attributes"], [135, "operation-attributes"], [136, "operation-attributes"], [137, "operation-attributes"], [138, "operation-attributes"], [139, "operation-attributes"], [140, "operation-attributes"], [141, "operation-attributes"], [142, "operation-attributes"], [143, "operation-attributes"], [144, "operation-attributes"], [145, "operation-attributes"], [146, "operation-attributes"]], "Operation Progress Tracking": [[13, "operation-progress-tracking"]], "Communication Operations": [[14, "communication-operations"]], "Reductions": [[15, "reductions"]], "Current Version of this oneCCL Specification": [[16, "current-version-of-this-oneccl-specification"]], "Clustering": [[17, "clustering"]], "K-Means": [[18, "k-means"]], "Mathematical formulation": [[18, "mathematical-formulation"], [19, "mathematical-formulation"], [21, "mathematical-formulation"], [24, "mathematical-formulation"]], "Training": [[18, "training"], [18, "id2"], [21, "training"], [21, "id6"], [24, "training"], [24, "id1"]], "Training method: Lloyd\u2019s": [[18, "training-method-lloyd-s"]], "Inference": [[18, "inference"], [18, "id3"], [21, "inference"], [21, "id7"], [24, "inference"], [24, "id2"]], "Inference method: Lloyd\u2019s": [[18, "inference-method-lloyd-s"]], "Usage example": [[18, "usage-example"], [19, "usage-example"], [21, "usage-example"], [24, "usage-example"], [33, "usage-example"], [34, "usage-example"], [36, "usage-example"], [37, "usage-example"]], "Programming Interface": [[18, "programming-interface"], [19, "programming-interface"], [21, "programming-interface"], [24, "programming-interface"], [37, "programming-interface"]], "Descriptor": [[18, "descriptor"], [19, "descriptor"], [21, "descriptor"], [24, "descriptor"]], "Method tags": [[18, "method-tags"], [19, "method-tags"], [21, "method-tags"], [24, "method-tags"]], "Task tags": [[18, "task-tags"], [19, "task-tags"], [21, "task-tags"], [24, "task-tags"]], "Model": [[18, "model"], [21, "model"], [24, "model"]], "Training train(...)": [[18, "training-train"], [21, "training-train"], [24, "training-train"]], "Input": [[18, "input"], [18, "kmeans-i-api-input"], [19, "input"], [21, "input"], [21, "pca-i-api-input"], [24, "input"], [24, "knn-i-api-input"], [50, "input"]], "Result": [[18, "result"], [18, "kmeans-i-api-result"], [19, "result"], [21, "result"], [21, "pca-i-api-result"], [24, "result"], [24, "knn-i-api-result"], [38, "result"], [50, "result"]], "Operation": [[18, "operation"], [18, "id6"], [19, "operation"], [21, "operation"], [21, "id10"], [24, "operation"], [24, "id5"], [37, "operation"]], "Inference infer(...)": [[18, "inference-infer"], [21, "inference-infer"], [24, "inference-infer"]], "K-Means initialization": [[19, "k-means-initialization"]], "Computing": [[19, "computing"], [19, "id1"]], "Computing method: dense": [[19, "computing-method-dense"]], "Computing compute(...)": [[19, "computing-compute"]], "Decomposition": [[20, "decomposition"]], "Principal Components Analysis (PCA)": [[21, "principal-components-analysis-pca"]], "Training method: Covariance": [[21, "training-method-covariance"]], "Training method: SVD": [[21, "training-method-svd"]], "Sign-flip technique": [[21, "sign-flip-technique"]], "Inference methods: Covariance and SVD": [[21, "inference-methods-covariance-and-svd"]], "Algorithms": [[22, "algorithms"], [156, "algorithms"], [556, "algorithms"], [810, "algorithms"]], "Nearest Neighbors (kNN)": [[23, "nearest-neighbors-knn"]], "k-Nearest Neighbors Classification (k-NN)": [[24, "k-nearest-neighbors-classification-k-nn"]], "Training method: brute-force": [[24, "training-method-brute-force"]], "Training method: k-d tree": [[24, "training-method-k-d-tree"]], "Inference method: brute-force": [[24, "inference-method-brute-force"]], "Inference method: k-d tree": [[24, "inference-method-k-d-tree"]], "Appendix": [[25, "appendix"]], "k-d Tree": [[26, "k-d-tree"]], "Related terms": [[26, "related-terms"]], "Bibliography": [[27, "bibliography"], [345, "bibliography"], [476, "bibliography"]], "Common type definitions": [[28, "common-type-definitions"]], "Programming interface": [[28, "programming-interface"], [33, "programming-interface"], [34, "programming-interface"], [36, "programming-interface"], [40, "programming-interface"], [41, "programming-interface"]], "Scalar types": [[28, "scalar-types"]], "Enum classes": [[28, "enum-classes"]], "Data type": [[28, "data-type"]], "Range": [[28, "range"], [824, "range"]], "Header files": [[30, "header-files"]], "Common Interface": [[31, "common-interface"]], "Current Version of this oneDAL Specification": [[32, "current-version-of-this-dal-short-name-specification"]], "Column accessor": [[33, "column-accessor"]], "Row accessor": [[34, "row-accessor"]], "Accessors": [[35, "accessors"]], "Requirements": [[35, "requirements"], [739, "requirements"]], "Accessor Types": [[35, "accessor-types"]], "Details": [[35, "details"], [38, "details"], [39, "details"]], "Array": [[36, "array"]], "Data ownership requirements": [[36, "data-ownership-requirements"]], "Implementation notes": [[36, "implementation-notes"]], "CSV data source": [[37, "csv-data-source"]], "Reading oneapi::dal::read<Object>(...)": [[37, "reading-oneapi-dal-read-object"]], "Args": [[37, "args"], [38, "args"]], "Data Sources": [[38, "data-sources"]], "Read": [[38, "read"]], "Read operation definition": [[38, "read-operation-definition"]], "Read operation shortcuts": [[38, "read-operation-shortcuts"]], "Data Source Types": [[38, "data-source-types"]], "Data management": [[39, "data-management"]], "Key concepts": [[39, "key-concepts"]], "Dataset": [[39, "dataset"]], "Data source": [[39, "data-source"]], "Table": [[39, "table"], [41, "table"]], "Table metadata": [[39, "table-metadata"], [41, "table-metadata"]], "Accessor": [[39, "accessor"]], "Example of interaction between table and accessor objects": [[39, "example-of-interaction-between-table-and-accessor-objects"]], "Homogeneous table": [[40, "homogeneous-table"]], "Tables": [[41, "tables"]], "Requirements on table types": [[41, "requirements-on-table-types"]], "Table types": [[41, "table-types"]], "Data layout": [[41, "data-layout"]], "Feature type": [[41, "feature-type"]], "Glossary": [[42, "glossary"]], "Machine learning terms": [[42, "machine-learning-terms"]], "oneDAL terms": [[42, "dal-short-name-terms"]], "Common oneAPI terms": [[42, "common-oneapi-terms"]], "oneDAL": [[43, "dal-short-name"]], "Mathematical Notations": [[45, "mathematical-notations"]], "Computational modes": [[46, "computational-modes"]], "Batch": [[46, "batch"]], "Online": [[46, "online"]], "Distributed": [[46, "distributed"]], "Descriptors": [[47, "descriptors"], [59, "descriptors"]], "Floating-point Types": [[47, "floating-point-types"]], "Computational Methods": [[47, "computational-methods"]], "Computational Tasks": [[47, "computational-tasks"]], "End-to-end example": [[48, "end-to-end-example"]], "Programming model": [[49, "programming-model"]], "Operations": [[50, "operations"], [148, "operations"]], "General operation definition": [[50, "general-operation-definition"]], "Operation shortcuts": [[50, "operation-shortcuts"]], "Supported operation": [[50, "supported-operation"]], "Supported operations": [[51, "supported-operations"]], "Train": [[51, "train"]], "Infer": [[51, "infer"]], "Compute": [[51, "compute"]], "Conventions": [[52, "conventions"]], "Variable (Tensor) Names": [[52, "variable-tensor-names"]], "RNN-Specific Notation": [[52, "rnn-specific-notation"]], "Bfloat16": [[53, "bfloat16"]], "Workflow": [[53, "workflow"], [55, "workflow"]], "Support": [[53, "support"], [55, "support"]], "Data types": [[54, "data-types"]], "Int8": [[55, "int8"]], "Quantization Model": [[55, "quantization-model"]], "Numerical behavior": [[55, "numerical-behavior"]], "Example: Convolution Quantization Workflow": [[55, "example-convolution-quantization-workflow"]], "Per-Channel Scaling": [[55, "per-channel-scaling"]], "Data model": [[56, "data-model"]], "Memory Formats": [[57, "memory-formats"]], "Plain Memory Formats": [[57, "plain-memory-formats"]], "Format Tags": [[57, "format-tags"]], "Optimized Format \u2018any\u2019": [[57, "optimized-format-any"]], "Memory Format Propagation": [[57, "memory-format-propagation"]], "API": [[57, "api"], [59, "api"], [151, "api"], [152, "api"], [153, "api"], [154, "api"], [155, "api"], [156, "api"], [157, "api"], [160, "api"], [161, "api"], [162, "api"], [163, "api"], [164, "api"], [165, "api"], [166, "api"], [167, "api"], [168, "api"], [169, "api"], [170, "api"], [171, "api"], [172, "api"]], "Memory": [[58, "memory"]], "Memory Descriptors and Objects": [[59, "memory-descriptors-and-objects"]], "Objects": [[59, "objects"]], "Execution Model": [[60, "execution-model"], [183, "execution-model"]], "Engine": [[60, "engine"], [148, "engine"]], "Data Model": [[61, "data-model"]], "Low Precision Support": [[61, "low-precision-support"]], "Common Definitions": [[62, "common-definitions"], [158, "common-definitions"]], "Logical tensor enums and type": [[62, "logical-tensor-enums-and-type"]], "Operation attributes and kinds": [[62, "operation-attributes-and-kinds"]], "Graph objects member functions": [[62, "graph-objects-member-functions"]], "Macros to specify unknown shapes": [[62, "macros-to-specify-unknown-shapes"]], "Graph extension": [[63, "graph-extension"]], "Abs": [[64, "abs"]], "Execution Arguments": [[64, "execution-arguments"], [65, "execution-arguments"], [66, "execution-arguments"], [67, "execution-arguments"], [68, "execution-arguments"], [69, "execution-arguments"], [70, "execution-arguments"], [71, "execution-arguments"], [72, "execution-arguments"], [73, "execution-arguments"], [74, "execution-arguments"], [75, "execution-arguments"], [76, "execution-arguments"], [77, "execution-arguments"], [78, "execution-arguments"], [79, "execution-arguments"], [80, "execution-arguments"], [81, "execution-arguments"], [82, "execution-arguments"], [83, "execution-arguments"], [84, "execution-arguments"], [85, "execution-arguments"], [86, "execution-arguments"], [87, "execution-arguments"], [88, "execution-arguments"], [89, "execution-arguments"], [90, "execution-arguments"], [91, "execution-arguments"], [92, "execution-arguments"], [93, "execution-arguments"], [94, "execution-arguments"], [95, "execution-arguments"], [96, "execution-arguments"], [97, "execution-arguments"], [98, "execution-arguments"], [99, "execution-arguments"], [100, "execution-arguments"], [101, "execution-arguments"], [102, "execution-arguments"], [103, "execution-arguments"], [104, "execution-arguments"], [105, "execution-arguments"], [106, "execution-arguments"], [107, "execution-arguments"], [108, "execution-arguments"], [109, "execution-arguments"], [110, "execution-arguments"], [111, "execution-arguments"], [112, "execution-arguments"], [113, "execution-arguments"], [114, "execution-arguments"], [116, "execution-arguments"], [117, "execution-arguments"], [118, "execution-arguments"], [119, "execution-arguments"], [120, "execution-arguments"], [121, "execution-arguments"], [122, "execution-arguments"], [123, "execution-arguments"], [124, "execution-arguments"], [125, "execution-arguments"], [126, "execution-arguments"], [127, "execution-arguments"], [128, "execution-arguments"], [129, "execution-arguments"], [130, "execution-arguments"], [131, "execution-arguments"], [132, "execution-arguments"], [133, "execution-arguments"], [134, "execution-arguments"], [135, "execution-arguments"], [136, "execution-arguments"], [137, "execution-arguments"], [138, "execution-arguments"], [139, "execution-arguments"], [140, "execution-arguments"], [141, "execution-arguments"], [142, "execution-arguments"], [143, "execution-arguments"], [144, "execution-arguments"], [145, "execution-arguments"], [146, "execution-arguments"], [153, "execution-arguments"], [154, "execution-arguments"], [155, "execution-arguments"], [156, "execution-arguments"], [157, "execution-arguments"], [160, "execution-arguments"], [161, "execution-arguments"], [162, "execution-arguments"], [163, "execution-arguments"], [164, "execution-arguments"], [165, "execution-arguments"], [166, "execution-arguments"], [167, "execution-arguments"], [168, "execution-arguments"], [169, "execution-arguments"], [170, "execution-arguments"], [171, "execution-arguments"], [172, "execution-arguments"]], "Inputs": [[64, "inputs"], [65, "inputs"], [66, "inputs"], [67, "inputs"], [68, "inputs"], [69, "inputs"], [70, "inputs"], [71, "inputs"], [72, "inputs"], [73, "inputs"], [74, "inputs"], [75, "inputs"], [76, "inputs"], [77, "inputs"], [78, "inputs"], [79, "inputs"], [80, "inputs"], [81, "inputs"], [82, "inputs"], [83, "inputs"], [84, "inputs"], [85, "inputs"], [86, "inputs"], [87, "inputs"], [88, "inputs"], [89, "inputs"], [90, "inputs"], [91, "inputs"], [92, "inputs"], [93, "inputs"], [94, "inputs"], [95, "inputs"], [96, "inputs"], [97, "inputs"], [98, "inputs"], [99, "inputs"], [100, "inputs"], [101, "inputs"], [102, "inputs"], [103, "inputs"], [104, "inputs"], [105, "inputs"], [106, "inputs"], [107, "inputs"], [108, "inputs"], [109, "inputs"], [110, "inputs"], [111, "inputs"], [112, "inputs"], [113, "inputs"], [114, "inputs"], [115, "inputs"], [116, "inputs"], [117, "inputs"], [118, "inputs"], [119, "inputs"], [120, "inputs"], [121, "inputs"], [122, "inputs"], [123, "inputs"], [124, "inputs"], [125, "inputs"], [126, "inputs"], [127, "inputs"], [128, "inputs"], [129, "inputs"], [130, "inputs"], [131, "inputs"], [132, "inputs"], [133, "inputs"], [134, "inputs"], [135, "inputs"], [136, "inputs"], [137, "inputs"], [138, "inputs"], [139, "inputs"], [140, "inputs"], [141, "inputs"], [142, "inputs"], [143, "inputs"], [144, "inputs"], [145, "inputs"], [146, "inputs"]], "Outputs": [[64, "outputs"], [65, "outputs"], [66, "outputs"], [67, "outputs"], [68, "outputs"], [69, "outputs"], [70, "outputs"], [71, "outputs"], [72, "outputs"], [73, "outputs"], [74, "outputs"], [75, "outputs"], [76, "outputs"], [77, "outputs"], [78, "outputs"], [79, "outputs"], [80, "outputs"], [81, "outputs"], [82, "outputs"], [83, "outputs"], [84, "outputs"], [85, "outputs"], [86, "outputs"], [87, "outputs"], [88, "outputs"], [89, "outputs"], [90, "outputs"], [91, "outputs"], [92, "outputs"], [93, "outputs"], [94, "outputs"], [95, "outputs"], [96, "outputs"], [97, "outputs"], [98, "outputs"], [99, "outputs"], [100, "outputs"], [101, "outputs"], [102, "outputs"], [103, "outputs"], [104, "outputs"], [105, "outputs"], [106, "outputs"], [107, "outputs"], [108, "outputs"], [109, "outputs"], [110, "outputs"], [111, "outputs"], [112, "outputs"], [113, "outputs"], [114, "outputs"], [115, "outputs"], [116, "outputs"], [117, "outputs"], [118, "outputs"], [119, "outputs"], [120, "outputs"], [121, "outputs"], [122, "outputs"], [123, "outputs"], [124, "outputs"], [125, "outputs"], [126, "outputs"], [127, "outputs"], [128, "outputs"], [129, "outputs"], [130, "outputs"], [131, "outputs"], [132, "outputs"], [133, "outputs"], [134, "outputs"], [135, "outputs"], [136, "outputs"], [137, "outputs"], [138, "outputs"], [139, "outputs"], [140, "outputs"], [141, "outputs"], [142, "outputs"], [143, "outputs"], [144, "outputs"], [145, "outputs"], [146, "outputs"]], "Supported Data Types": [[64, "supported-data-types"], [65, "supported-data-types"], [66, "supported-data-types"], [67, "supported-data-types"], [68, "supported-data-types"], [69, "supported-data-types"], [70, "supported-data-types"], [71, "supported-data-types"], [72, "supported-data-types"], [73, "supported-data-types"], [74, "supported-data-types"], [75, "supported-data-types"], [76, "supported-data-types"], [77, "supported-data-types"], [78, "supported-data-types"], [79, "supported-data-types"], [80, "supported-data-types"], [81, "supported-data-types"], [82, "supported-data-types"], [83, "supported-data-types"], [84, "supported-data-types"], [85, "supported-data-types"], [86, "supported-data-types"], [87, "supported-data-types"], [88, "supported-data-types"], [89, "supported-data-types"], [90, "supported-data-types"], [91, "supported-data-types"], [92, "supported-data-types"], [93, "supported-data-types"], [94, "supported-data-types"], [95, "supported-data-types"], [96, "supported-data-types"], [97, "supported-data-types"], [98, "supported-data-types"], [99, "supported-data-types"], [100, "supported-data-types"], [101, "supported-data-types"], [102, "supported-data-types"], [103, "supported-data-types"], [104, "supported-data-types"], [105, "supported-data-types"], [106, "supported-data-types"], [107, "supported-data-types"], [108, "supported-data-types"], [109, "supported-data-types"], [110, "supported-data-types"], [111, "supported-data-types"], [112, "supported-data-types"], [113, "supported-data-types"], [114, "supported-data-types"], [115, "supported-data-types"], [116, "supported-data-types"], [117, "supported-data-types"], [118, "supported-data-types"], [119, "supported-data-types"], [120, "supported-data-types"], [121, "supported-data-types"], [122, "supported-data-types"], [123, "supported-data-types"], [124, "supported-data-types"], [125, "supported-data-types"], [126, "supported-data-types"], [127, "supported-data-types"], [128, "supported-data-types"], [129, "supported-data-types"], [130, "supported-data-types"], [131, "supported-data-types"], [132, "supported-data-types"], [133, "supported-data-types"], [134, "supported-data-types"], [135, "supported-data-types"], [136, "supported-data-types"], [137, "supported-data-types"], [138, "supported-data-types"], [139, "supported-data-types"], [140, "supported-data-types"], [141, "supported-data-types"], [142, "supported-data-types"], [143, "supported-data-types"], [144, "supported-data-types"], [145, "supported-data-types"], [146, "supported-data-types"]], "AbsBackward": [[65, "absbackward"]], "Add": [[66, "add"]], "AvgPool": [[67, "avgpool"]], "AvgPoolBackward": [[68, "avgpoolbackward"]], "BatchNormForwardTraining": [[69, "batchnormforwardtraining"]], "BatchNormInference": [[70, "batchnorminference"]], "BatchNormTrainingBackward": [[71, "batchnormtrainingbackward"]], "BiasAdd": [[72, "biasadd"]], "BiasAddBackward": [[73, "biasaddbackward"]], "Clamp": [[74, "clamp"]], "ClampBackward": [[75, "clampbackward"]], "Concat": [[76, "concat"], [155, "concat"]], "ConvTranspose": [[77, "convtranspose"]], "ConvTransposeBackwardData": [[78, "convtransposebackwarddata"]], "ConvTransposeBackwardWeights": [[79, "convtransposebackwardweights"]], "Convolution": [[80, "convolution"]], "Regular Convolution": [[80, "regular-convolution"], [156, "regular-convolution"]], "Convolution with Groups": [[80, "convolution-with-groups"], [156, "convolution-with-groups"]], "Convolution with Dilation": [[80, "convolution-with-dilation"], [156, "convolution-with-dilation"]], "ConvolutionBackwardData": [[81, "convolutionbackwarddata"]], "ConvolutionBackwardWeights": [[82, "convolutionbackwardweights"]], "Dequantize": [[83, "dequantize"]], "Divide": [[84, "divide"]], "DynamicDequantize": [[85, "dynamicdequantize"]], "DynamicQuantize": [[86, "dynamicquantize"]], "Elu": [[87, "elu"]], "EluBackward": [[88, "elubackward"]], "End": [[89, "end"]], "Exp": [[90, "exp"]], "GELU": [[91, "gelu"]], "GELUBackward": [[92, "gelubackward"]], "HardSigmoid": [[93, "hardsigmoid"]], "HardSigmoidBackward": [[94, "hardsigmoidbackward"]], "HardSwish": [[95, "hardswish"]], "HardSwishBackward": [[96, "hardswishbackward"]], "Interpolate": [[97, "interpolate"]], "InterpolateBackward": [[98, "interpolatebackward"]], "LayerNorm": [[99, "layernorm"]], "LayerNormBackward": [[100, "layernormbackward"]], "LeakyReLU": [[101, "leakyrelu"]], "Log": [[102, "log"]], "LogSoftmax": [[103, "logsoftmax"]], "LogSoftmaxBackward": [[104, "logsoftmaxbackward"]], "MatMul": [[105, "matmul"]], "MaxPool": [[106, "maxpool"]], "MaxPoolBackward": [[107, "maxpoolbackward"]], "Maximum": [[108, "maximum"]], "Minimum": [[109, "minimum"]], "Mish": [[110, "mish"]], "MishBackward": [[111, "mishbackward"]], "Multiply": [[112, "multiply"]], "PReLU": [[113, "prelu"]], "Broadcasting Rules": [[113, "broadcasting-rules"], [114, "broadcasting-rules"]], "PReLUBackward": [[114, "prelubackward"]], "Pow": [[115, "pow"]], "Quantize": [[116, "quantize"]], "ReLU": [[117, "relu"]], "ReLUBackward": [[118, "relubackward"]], "Reciprocal": [[119, "reciprocal"]], "ReduceL1": [[120, "reducel1"]], "ReduceL2": [[121, "reducel2"]], "ReduceMax": [[122, "reducemax"]], "ReduceMean": [[123, "reducemean"]], "ReduceMin": [[124, "reducemin"]], "ReduceProd": [[125, "reduceprod"]], "ReduceSum": [[126, "reducesum"]], "Reorder": [[127, "reorder"], [167, "reorder"]], "Round": [[128, "round"]], "Select": [[129, "select"]], "Sigmoid": [[130, "sigmoid"]], "SigmoidBackward": [[131, "sigmoidbackward"]], "SoftPlus": [[132, "softplus"]], "SoftPlusBackward": [[133, "softplusbackward"]], "SoftMax": [[134, "softmax"]], "SoftMaxBackward": [[135, "softmaxbackward"]], "Sqrt": [[136, "sqrt"]], "SqrtBackward": [[137, "sqrtbackward"]], "Square": [[138, "square"]], "SquaredDifference": [[139, "squareddifference"]], "StaticReshape": [[140, "staticreshape"]], "StaticTranspose": [[141, "statictranspose"]], "Subtract": [[142, "subtract"]], "Tanh": [[143, "tanh"]], "TanhBackward": [[144, "tanhbackward"]], "TypeCast": [[145, "typecast"]], "Wildcard": [[146, "wildcard"]], "Operation Set": [[147, "operation-set"]], "Logical Tensor": [[148, "logical-tensor"]], "Graph": [[148, "graph"]], "Partition": [[148, "partition"]], "Tensor": [[148, "tensor"]], "Compiled Partition": [[148, "compiled-partition"]], "General API notes": [[148, "general-api-notes"], [150, "general-api-notes"]], "Error Handling": [[148, "error-handling"], [150, "error-handling"]], "oneDNN": [[149, "onednn"]], "Open Source Implementation": [[149, "id1"]], "Implementation Notes": [[149, "implementation-notes"]], "Testing": [[149, "testing"]], "Graph Extension": [[150, "graph-extension"]], "Attributes": [[151, "attributes"]], "Scratchpad Mode": [[151, "scratchpad-mode"]], "Examples": [[151, "examples"], [752, "examples"], [777, "examples"], [850, "examples"]], "Library Manages Scratchpad": [[151, "library-manages-scratchpad"]], "User Manages Scratchpad": [[151, "user-manages-scratchpad"]], "Quantization": [[151, "quantization"]], "Quantization Attributes (scales and zero-points)": [[151, "quantization-attributes-scales-and-zero-points"]], "Example 1: weights quantization with per-output-channel scaling": [[151, "example-1-weights-quantization-with-per-output-channel-scaling"]], "Example 2: convolution with groups, with per-output-channel quantization": [[151, "example-2-convolution-with-groups-with-per-output-channel-quantization"]], "Implicit downconversions and floating-point math mode": [[151, "implicit-downconversions-and-floating-point-math-mode"]], "Attribute Related Error Handling": [[151, "attribute-related-error-handling"]], "Post-ops": [[152, "post-ops"]], "Supported Post-ops": [[152, "supported-post-ops"]], "Eltwise Post-op": [[152, "eltwise-post-op"]], "Sum Post-op": [[152, "sum-post-op"]], "Binary post-ops": [[152, "binary-post-ops"]], "Examples of Chained Post-ops": [[152, "examples-of-chained-post-ops"]], "Sum -> ReLU": [[152, "sum-relu"]], "Batch Normalization": [[153, "batch-normalization"]], "Forward": [[153, "forward"], [156, "forward"], [157, "forward"], [160, "forward"], [161, "forward"], [162, "forward"], [164, "forward"], [165, "forward"], [168, "forward"], [170, "forward"], [171, "forward"]], "Difference Between Forward Training and Forward Inference": [[153, "difference-between-forward-training-and-forward-inference"], [156, "difference-between-forward-training-and-forward-inference"], [157, "difference-between-forward-training-and-forward-inference"], [160, "difference-between-forward-training-and-forward-inference"], [161, "difference-between-forward-training-and-forward-inference"], [164, "difference-between-forward-training-and-forward-inference"], [165, "difference-between-forward-training-and-forward-inference"], [168, "difference-between-forward-training-and-forward-inference"], [170, "difference-between-forward-training-and-forward-inference"], [171, "difference-between-forward-training-and-forward-inference"]], "Backward": [[153, "backward"], [156, "backward"], [157, "backward"], [160, "backward"], [161, "backward"], [162, "backward"], [164, "backward"], [165, "backward"], [168, "backward"], [170, "backward"], [171, "backward"]], "Operation Details": [[153, "operation-details"], [154, "operation-details"], [155, "operation-details"], [156, "operation-details"], [157, "operation-details"], [160, "operation-details"], [161, "operation-details"], [162, "operation-details"], [163, "operation-details"], [164, "operation-details"], [165, "operation-details"], [166, "operation-details"], [167, "operation-details"], [168, "operation-details"], [169, "operation-details"], [170, "operation-details"], [171, "operation-details"], [172, "operation-details"]], "Data Types Support": [[153, "data-types-support"], [154, "data-types-support"], [155, "data-types-support"], [156, "data-types-support"], [160, "data-types-support"], [161, "data-types-support"], [163, "data-types-support"], [165, "data-types-support"], [166, "data-types-support"], [167, "data-types-support"], [168, "data-types-support"], [169, "data-types-support"], [170, "data-types-support"], [171, "data-types-support"], [172, "data-types-support"]], "Data Representation": [[153, "data-representation"], [154, "data-representation"], [155, "data-representation"], [156, "data-representation"], [157, "data-representation"], [160, "data-representation"], [161, "data-representation"], [162, "data-representation"], [163, "data-representation"], [164, "data-representation"], [165, "data-representation"], [166, "data-representation"], [167, "data-representation"], [169, "data-representation"], [171, "data-representation"], [172, "data-representation"]], "Source, Destination, and Their Gradients": [[153, "source-destination-and-their-gradients"], [161, "source-destination-and-their-gradients"], [162, "source-destination-and-their-gradients"], [164, "source-destination-and-their-gradients"], [165, "source-destination-and-their-gradients"], [171, "source-destination-and-their-gradients"]], "Statistics Tensors": [[153, "statistics-tensors"]], "Post-ops and Attributes": [[153, "post-ops-and-attributes"], [154, "post-ops-and-attributes"], [155, "post-ops-and-attributes"], [156, "post-ops-and-attributes"], [157, "post-ops-and-attributes"], [160, "post-ops-and-attributes"], [162, "post-ops-and-attributes"], [164, "post-ops-and-attributes"], [165, "post-ops-and-attributes"], [167, "post-ops-and-attributes"], [168, "post-ops-and-attributes"], [169, "post-ops-and-attributes"], [170, "post-ops-and-attributes"], [171, "post-ops-and-attributes"], [172, "post-ops-and-attributes"]], "Binary": [[154, "binary"]], "Forward and Backward": [[154, "forward-and-backward"], [155, "forward-and-backward"]], "Convolution and Deconvolution": [[156, "convolution-and-deconvolution"]], "Deconvolution (Transposed Convolution)": [[156, "deconvolution-transposed-convolution"]], "Example 1": [[156, "example-1"]], "Example 2": [[156, "example-2"]], "Elementwise": [[157, "elementwise"]], "Data Type Support": [[157, "data-type-support"], [162, "data-type-support"], [164, "data-type-support"]], "Base Class for Primitives": [[158, "base-class-for-primitives"]], "Base Class for Primitives Descriptors": [[158, "base-class-for-primitives-descriptors"]], "Common Enumerations": [[158, "common-enumerations"]], "Normalization Primitives Flags": [[158, "normalization-primitives-flags"]], "Execution argument indices": [[158, "execution-argument-indices"]], "Primitives": [[159, "primitives"]], "Inner Product": [[160, "inner-product"]], "Layer normalization": [[161, "layer-normalization"]], "Mean and Variance": [[161, "mean-and-variance"]], "Scale and Shift": [[161, "scale-and-shift"]], "Local Response Normalization": [[162, "local-response-normalization"]], "Matrix Multiplication": [[163, "matrix-multiplication"]], "Attributes and Post-ops": [[163, "attributes-and-post-ops"], [166, "attributes-and-post-ops"]], "Pooling": [[164, "pooling"]], "Prelu": [[165, "prelu"]], "Reduction": [[166, "reduction"]], "Resampling": [[168, "resampling"]], "Nearest Neighbor Resampling": [[168, "nearest-neighbor-resampling"]], "Bilinear Resampling": [[168, "bilinear-resampling"]], "RNN": [[169, "rnn"]], "Cell Functions": [[169, "cell-functions"]], "Vanilla RNN": [[169, "vanilla-rnn"]], "LSTM": [[169, "lstm"]], "LSTM (or Vanilla LSTM)": [[169, "lstm-or-vanilla-lstm"]], "LSTM with Peephole": [[169, "lstm-with-peephole"]], "LSTM with Projection": [[169, "lstm-with-projection"]], "GRU": [[169, "gru"]], "Linear-Before-Reset GRU": [[169, "linear-before-reset-gru"]], "AUGRU": [[169, "augru"]], "Linear-Before-Reset AUGRU": [[169, "linear-before-reset-augru"]], "Shuffle": [[170, "shuffle"]], "Data Layouts": [[170, "data-layouts"]], "Softmax": [[171, "softmax"]], "Sum": [[172, "sum"]], "Sources, Destination": [[172, "sources-destination"]], "General Information": [[173, "general-information"], [841, "general-information"]], "Header Files": [[173, "header-files"]], "Version Information": [[173, "version-information"], [586, "version-information"]], "oneDPL": [[174, "onedpl"]], "Parallel API": [[175, "parallel-api"]], "Parallel Algorithms": [[176, "parallel-algorithms"]], "Buffer Wrappers": [[177, "buffer-wrappers"]], "Execution Policies": [[178, "execution-policies"]], "C++ Standard Aligned Execution Policies": [[178, "c-standard-aligned-execution-policies"]], "Device Execution Policies": [[178, "device-execution-policies"]], "device_policy Class": [[178, "device-policy-class"]], "Predefined Device Policy": [[178, "predefined-device-policy"]], "make_device_policy Function": [[178, "make-device-policy-function"]], "Execution Policy Type Trait": [[178, "execution-policy-type-trait"]], "Iterators": [[179, "iterators"], [593, "iterators"], [603, "iterators"], [615, "iterators"], [629, "iterators"], [643, "iterators"], [664, "iterators"], [672, "iterators"], [688, "iterators"], [702, "iterators"], [716, "iterators"], [730, "iterators"], [744, "iterators"]], "Parallel Range Algorithms": [[180, "parallel-range-algorithms"]], "Whole Sequence Operations": [[180, "whole-sequence-operations"]], "Element Search Operations": [[180, "element-search-operations"]], "Sequence Search and Comparison": [[180, "sequence-search-and-comparison"]], "Sorting and Merge": [[180, "sorting-and-merge"]], "Mutating Operations": [[180, "mutating-operations"]], "SYCL Kernels API": [[181, "sycl-kernels-api"]], "Supported C++ Standard Library APIs and Algorithms": [[181, "supported-c-standard-library-apis-and-algorithms"]], "Random Number Generation": [[181, "random-number-generation"]], "Supported Functionality": [[181, "supported-functionality"]], "Limitations": [[181, "limitations"]], "Extensions": [[181, "extensions"]], "Function Objects": [[181, "function-objects"]], "oneMKL Appendix": [[182, "onemkl-appendix"]], "Future considerations": [[182, "future-considerations"]], "Acknowledgment": [[182, "acknowledgment"]], "oneMKL Architecture": [[183, "onemkl-architecture"]], "Use of Queues": [[183, "use-of-queues"]], "Non-Member Functions": [[183, "non-member-functions"], [856, "non-member-functions"]], "Member Functions": [[183, "member-functions"], [794, "member-functions"], [795, "member-functions"], [796, "member-functions"], [798, "member-functions"], [850, "member-functions"], [856, "member-functions"]], "Device Usage": [[183, "device-usage"]], "Asynchronous Execution": [[183, "asynchronous-execution"]], "Synchronization When Using Buffers": [[183, "synchronization-when-using-buffers"]], "Synchronization When Using USM APIs": [[183, "synchronization-when-using-usm-apis"]], "Host Thread Safety": [[183, "host-thread-safety"]], "Memory Model": [[183, "memory-model"]], "The Buffer Memory Model": [[183, "the-buffer-memory-model"]], "Unified Shared Memory Model": [[183, "unified-shared-memory-model"]], "API Design": [[183, "api-design"]], "oneMKL namespaces": [[183, "onemkl-namespaces"]], "Standard C++ datatype usage": [[183, "standard-c-datatype-usage"]], "DPC++ datatype usage": [[183, "dpc-datatype-usage"]], "oneMKL defined datatypes": [[183, "onemkl-defined-datatypes"]], "Exceptions and Error Handling": [[183, "exceptions-and-error-handling"]], "LAPACK specific exceptions": [[183, "lapack-specific-exceptions"]], "Other Features": [[183, "other-features"]], "Specification Version and Compliance": [[183, "specification-version-and-compliance"]], "Pre/Post Condition Checking": [[183, "pre-post-condition-checking"]], "asum": [[184, "asum"]], "asum (Buffer Version)": [[184, "asum-buffer-version"]], "asum (USM Version)": [[184, "asum-usm-version"]], "axpby": [[185, "axpby"]], "axpby (Buffer Version)": [[185, "axpby-buffer-version"]], "axpby (USM Version)": [[185, "axpby-usm-version"]], "axpy": [[186, "axpy"]], "axpy (Buffer Version)": [[186, "axpy-buffer-version"]], "axpy (USM Version)": [[186, "axpy-usm-version"]], "axpy_batch": [[187, "axpy-batch"]], "axpy_batch (Buffer Version)": [[187, "axpy-batch-buffer-version"]], "axpy_batch (USM Version)": [[187, "axpy-batch-usm-version"]], "BLAS Routines": [[188, "blas-routines"]], "BLAS Level 1 Routines": [[189, "blas-level-1-routines"]], "BLAS Level 2 Routines": [[190, "blas-level-2-routines"]], "BLAS Level 3 Routines": [[191, "blas-level-3-routines"]], "BLAS-like Extensions": [[192, "blas-like-extensions"]], "copy": [[193, "copy"]], "copy (Buffer Version)": [[193, "copy-buffer-version"]], "copy (USM Version)": [[193, "copy-usm-version"]], "copy_batch": [[194, "copy-batch"]], "copy_batch (Buffer Version)": [[194, "copy-batch-buffer-version"]], "copy_batch (USM Version)": [[194, "copy-batch-usm-version"]], "dgmm_batch": [[195, "dgmm-batch"]], "dgmm_batch (Buffer Version)": [[195, "dgmm-batch-buffer-version"]], "dgmm_batch (USM Version)": [[195, "dgmm-batch-usm-version"]], "dot": [[196, "dot"]], "dot (Buffer Version)": [[196, "dot-buffer-version"]], "dot (USM Version)": [[196, "dot-usm-version"]], "dotc": [[197, "dotc"]], "dotc (Buffer Version)": [[197, "dotc-buffer-version"]], "dotc (USM Version)": [[197, "dotc-usm-version"]], "dotu": [[198, "dotu"]], "dotu (Buffer Version)": [[198, "dotu-buffer-version"]], "dotu (USM Version)": [[198, "dotu-usm-version"]], "gbmv": [[199, "gbmv"]], "gbmv (Buffer Version)": [[199, "gbmv-buffer-version"]], "gbmv (USM Version)": [[199, "gbmv-usm-version"]], "gemm": [[200, "gemm"]], "gemm (Buffer Version)": [[200, "gemm-buffer-version"]], "gemm (USM Version)": [[200, "gemm-usm-version"]], "gemm_batch": [[201, "gemm-batch"]], "gemm_batch (Buffer Version)": [[201, "gemm-batch-buffer-version"]], "gemm_batch (USM Version)": [[201, "gemm-batch-usm-version"]], "gemm_bias": [[202, "gemm-bias"]], "gemm_bias (Buffer Version)": [[202, "gemm-bias-buffer-version"]], "gemm_bias (USM Version)": [[202, "gemm-bias-usm-version"]], "gemmt": [[203, "gemmt"]], "gemmt (Buffer Version)": [[203, "gemmt-buffer-version"]], "gemmt (USM Version)": [[203, "gemmt-usm-version"]], "gemv": [[204, "gemv"]], "gemv (Buffer Version)": [[204, "gemv-buffer-version"]], "gemv (USM Version)": [[204, "gemv-usm-version"]], "gemv_batch": [[205, "gemv-batch"]], "gemv_batch (Buffer Version)": [[205, "gemv-batch-buffer-version"]], "gemv_batch (USM Version)": [[205, "gemv-batch-usm-version"]], "ger": [[206, "ger"]], "ger (Buffer Version)": [[206, "ger-buffer-version"]], "ger (USM Version)": [[206, "ger-usm-version"]], "gerc": [[207, "gerc"]], "gerc (Buffer Version)": [[207, "gerc-buffer-version"]], "gerc (USM Version)": [[207, "gerc-usm-version"]], "geru": [[208, "geru"]], "geru (Buffer Version)": [[208, "geru-buffer-version"]], "geru (USM Version)": [[208, "geru-usm-version"]], "hbmv": [[209, "hbmv"]], "hbmv (Buffer Version)": [[209, "hbmv-buffer-version"]], "hbmv (USM Version)": [[209, "hbmv-usm-version"]], "hemm": [[210, "hemm"]], "hemm (Buffer Version)": [[210, "hemm-buffer-version"]], "hemm (USM Version)": [[210, "hemm-usm-version"]], "hemv": [[211, "hemv"]], "hemv (Buffer Version)": [[211, "hemv-buffer-version"]], "hemv (USM Version)": [[211, "hemv-usm-version"]], "her": [[212, "her"]], "her (Buffer Version)": [[212, "her-buffer-version"]], "her (USM Version)": [[212, "her-usm-version"]], "her2": [[213, "her2"]], "her2 (Buffer Version)": [[213, "her2-buffer-version"]], "her2 (USM Version)": [[213, "her2-usm-version"]], "her2k": [[214, "her2k"]], "her2k (Buffer Version)": [[214, "her2k-buffer-version"]], "her2k (USM Version)": [[214, "her2k-usm-version"]], "herk": [[215, "herk"]], "herk (Buffer Version)": [[215, "herk-buffer-version"]], "herk (USM Version)": [[215, "herk-usm-version"]], "hpmv": [[216, "hpmv"]], "hpmv (Buffer Version)": [[216, "hpmv-buffer-version"]], "hpmv (USM Version)": [[216, "hpmv-usm-version"]], "hpr": [[217, "hpr"]], "hpr (Buffer Version)": [[217, "hpr-buffer-version"]], "hpr (USM Version)": [[217, "hpr-usm-version"]], "hpr2": [[218, "hpr2"]], "hpr2 (Buffer Version)": [[218, "hpr2-buffer-version"]], "hpr2 (USM Version)": [[218, "hpr2-usm-version"]], "iamax": [[219, "iamax"]], "iamax (Buffer Version)": [[219, "iamax-buffer-version"]], "iamax (USM Version)": [[219, "iamax-usm-version"]], "iamin": [[220, "iamin"]], "iamin (Buffer Version)": [[220, "iamin-buffer-version"]], "iamin (USM Version)": [[220, "iamin-usm-version"]], "imatcopy": [[221, "imatcopy"]], "imatcopy (Buffer Version)": [[221, "imatcopy-buffer-version"]], "imatcopy (USM Version)": [[221, "imatcopy-usm-version"]], "imatcopy_batch": [[222, "imatcopy-batch"]], "imatcopy_batch (Buffer Version)": [[222, "imatcopy-batch-buffer-version"]], "imatcopy_batch (USM Version)": [[222, "imatcopy-batch-usm-version"]], "nrm2": [[223, "nrm2"]], "nrm2 (Buffer Version)": [[223, "nrm2-buffer-version"]], "nrm2 (USM Version)": [[223, "nrm2-usm-version"]], "omatadd": [[224, "omatadd"]], "omatadd (Buffer Version)": [[224, "omatadd-buffer-version"]], "omatadd (USM Version)": [[224, "omatadd-usm-version"]], "omatadd_batch": [[225, "omatadd-batch"]], "omatadd_batch (Buffer Version)": [[225, "omatadd-batch-buffer-version"]], "omatadd_batch (USM Version)": [[225, "omatadd-batch-usm-version"]], "omatcopy": [[226, "omatcopy"]], "omatcopy (Buffer Version)": [[226, "omatcopy-buffer-version"]], "omatcopy (USM Version)": [[226, "omatcopy-usm-version"]], "omatcopy2": [[227, "omatcopy2"]], "omatcopy2 (Buffer Version)": [[227, "omatcopy2-buffer-version"]], "omatcopy2 (USM Version)": [[227, "omatcopy2-usm-version"]], "omatcopy_batch": [[228, "omatcopy-batch"]], "omatcopy_batch (Buffer Version)": [[228, "omatcopy-batch-buffer-version"]], "omatcopy_batch (USM Version)": [[228, "omatcopy-batch-usm-version"]], "rot": [[229, "rot"]], "rot (Buffer Version)": [[229, "rot-buffer-version"]], "rot (USM Version)": [[229, "rot-usm-version"]], "rotg": [[230, "rotg"]], "rotg (Buffer Version)": [[230, "rotg-buffer-version"]], "rotg (USM Version)": [[230, "rotg-usm-version"]], "rotm": [[231, "rotm"]], "rotm (Buffer Version)": [[231, "rotm-buffer-version"]], "rotm (USM Version)": [[231, "rotm-usm-version"]], "rotmg": [[232, "rotmg"]], "rotmg (Buffer Version)": [[232, "rotmg-buffer-version"]], "rotmg (USM Version)": [[232, "rotmg-usm-version"]], "sbmv": [[233, "sbmv"]], "sbmv (Buffer Version)": [[233, "sbmv-buffer-version"]], "sbmv (USM Version)": [[233, "sbmv-usm-version"]], "scal": [[234, "scal"]], "scal (Buffer Version)": [[234, "scal-buffer-version"]], "scal (USM Version)": [[234, "scal-usm-version"]], "sdsdot": [[235, "sdsdot"]], "sdsdot (Buffer Version)": [[235, "sdsdot-buffer-version"]], "sdsdot (USM Version)": [[235, "sdsdot-usm-version"]], "spmv": [[236, "spmv"], [435, "spmv"], [435, "onemkl-sparse-spmv"]], "spmv (Buffer Version)": [[236, "spmv-buffer-version"]], "spmv (USM Version)": [[236, "spmv-usm-version"]], "spr": [[237, "spr"]], "spr (Buffer Version)": [[237, "spr-buffer-version"]], "spr (USM Version)": [[237, "spr-usm-version"]], "spr2": [[238, "spr2"]], "spr2 (Buffer Version)": [[238, "spr2-buffer-version"]], "spr2 (USM Version)": [[238, "spr2-usm-version"]], "swap": [[239, "swap"], [597, "swap"], [610, "swap"], [624, "swap"], [638, "swap"], [652, "swap"], [660, "swap"], [668, "swap"], [681, "swap"], [696, "swap"], [710, "swap"], [724, "swap"], [738, "swap"], [750, "swap"]], "swap (Buffer Version)": [[239, "swap-buffer-version"]], "swap (USM Version)": [[239, "swap-usm-version"]], "symm": [[240, "symm"]], "symm (Buffer Version)": [[240, "symm-buffer-version"]], "symm (USM Version)": [[240, "symm-usm-version"]], "symv": [[241, "symv"]], "symv (Buffer Version)": [[241, "symv-buffer-version"]], "symv (USM Version)": [[241, "symv-usm-version"]], "syr": [[242, "syr"]], "syr (Buffer Version)": [[242, "syr-buffer-version"]], "syr (USM Version)": [[242, "syr-usm-version"]], "syr2": [[243, "syr2"]], "syr2 (Buffer Version)": [[243, "syr2-buffer-version"]], "syr2 (USM Version)": [[243, "syr2-usm-version"]], "syr2k": [[244, "syr2k"]], "syr2k (Buffer Version)": [[244, "syr2k-buffer-version"]], "syr2k (USM Version)": [[244, "syr2k-usm-version"]], "syrk": [[245, "syrk"]], "syrk (Buffer Version)": [[245, "syrk-buffer-version"]], "syrk (USM Version)": [[245, "syrk-usm-version"]], "syrk_batch": [[246, "syrk-batch"]], "syrk_batch (Buffer Version)": [[246, "syrk-batch-buffer-version"]], "syrk_batch (USM Version)": [[246, "syrk-batch-usm-version"]], "tbmv": [[247, "tbmv"]], "tbmv (Buffer Version)": [[247, "tbmv-buffer-version"]], "tbmv (USM Version)": [[247, "tbmv-usm-version"]], "tbsv": [[248, "tbsv"]], "tbsv (Buffer Version)": [[248, "tbsv-buffer-version"]], "tbsv (USM Version)": [[248, "tbsv-usm-version"]], "tpmv": [[249, "tpmv"]], "tpmv (Buffer Version)": [[249, "tpmv-buffer-version"]], "tpmv (USM Version)": [[249, "tpmv-usm-version"]], "tpsv": [[250, "tpsv"]], "tpsv (Buffer Version)": [[250, "tpsv-buffer-version"]], "tpsv (USM Version)": [[250, "tpsv-usm-version"]], "trmm": [[251, "trmm"]], "trmm (Buffer Version)": [[251, "trmm-buffer-version"]], "In-place API": [[251, "in-place-api"], [251, "id1"], [253, "in-place-api"], [253, "id1"]], "Out-of-place API": [[251, "out-of-place-api"], [251, "id2"], [253, "out-of-place-api"], [253, "id2"]], "trmm (USM Version)": [[251, "trmm-usm-version"]], "trmv": [[252, "trmv"]], "trmv (Buffer Version)": [[252, "trmv-buffer-version"]], "trmv (USM Version)": [[252, "trmv-usm-version"]], "trsm": [[253, "trsm"]], "trsm (Buffer Version)": [[253, "trsm-buffer-version"]], "trsm (USM Version)": [[253, "trsm-usm-version"]], "trsm_batch": [[254, "trsm-batch"]], "trsm_batch (Buffer Version)": [[254, "trsm-batch-buffer-version"]], "trsm_batch (USM Version)": [[254, "trsm-batch-usm-version"]], "trsv": [[255, "trsv"]], "trsv (Buffer Version)": [[255, "trsv-buffer-version"]], "trsv (USM Version)": [[255, "trsv-usm-version"]], "The compute_backward function templates": [[256, "the-compute-backward-function-templates"]], "compute_backward (Buffer versions)": [[256, "compute-backward-buffer-versions"]], "compute_backward (USM versions)": [[256, "compute-backward-usm-versions"]], "The compute_forward function templates": [[257, "the-compute-forward-function-templates"]], "compute_forward (Buffer versions)": [[257, "compute-forward-buffer-versions"]], "compute_forward (USM versions)": [[257, "compute-forward-usm-versions"]], "Configuration of data layouts": [[258, "configuration-of-data-layouts"]], "Data storage": [[259, "data-storage"]], "Complex descriptors": [[259, "complex-descriptors"]], "Real descriptors": [[259, "real-descriptors"]], "Workspace placement": [[260, "workspace-placement"]], "Automatically- and externally-managed workspaces": [[260, "automatically-and-externally-managed-workspaces"]], "Typical usage of externally-managed workspaces": [[260, "typical-usage-of-externally-managed-workspaces"]], "The descriptor class template": [[261, "the-descriptor-class-template"]], "Description": [[261, "description"], [682, "description"], [697, "description"], [711, "description"], [725, "description"], [739, "description"]], "Constructors": [[261, "constructors"], [588, "constructors"]], "Assignment operators": [[261, "assignment-operators"], [591, "assignment-operators"], [600, "assignment-operators"], [612, "assignment-operators"], [627, "assignment-operators"], [641, "assignment-operators"], [654, "assignment-operators"], [662, "assignment-operators"], [670, "assignment-operators"], [684, "assignment-operators"], [699, "assignment-operators"], [713, "assignment-operators"], [727, "assignment-operators"], [741, "assignment-operators"], [861, "assignment-operators"]], "set_value member functions": [[261, "set-value-member-functions"]], "get_value member functions": [[261, "get-value-member-functions"]], "set_workspace member function": [[261, "set-workspace-member-function"]], "commit member function": [[261, "commit-member-function"]], "Discrete Fourier Transform Functions": [[262, "discrete-fourier-transform-functions"]], "Elementary range of indices": [[262, "elementary-range-of-indices"]], "Additional constraints for data in backward domain of real DFTs": [[262, "additional-constraints-for-data-in-backward-domain-of-real-dfts"]], "Recommended usage": [[262, "recommended-usage"]], "Summary table": [[262, "summary-table"]], "DFT-related scoped enumeration types": [[263, "dft-related-scoped-enumeration-types"]], "precision": [[263, "precision"]], "domain": [[263, "domain"]], "config_param": [[263, "config-param"]], "config_value": [[263, "config-value"]], "oneMKL Domains": [[264, "onemkl-domains"]], "Dense Linear Algebra": [[264, "dense-linear-algebra"]], "Sparse Linear Algebra": [[264, "sparse-linear-algebra"]], "Discrete Fourier Transforms": [[264, "discrete-fourier-transforms"]], "Random Number Generators": [[264, "random-number-generators"]], "Summary Statistics": [[264, "summary-statistics"], [451, "summary-statistics"]], "Vector Math": [[264, "vector-math"], [551, "vector-math"]], "gebrd": [[265, "gebrd"]], "gebrd (Buffer Version)": [[265, "gebrd-buffer-version"]], "gebrd (USM Version)": [[265, "gebrd-usm-version"]], "gebrd_scratchpad_size": [[266, "gebrd-scratchpad-size"]], "geqrf": [[267, "geqrf"]], "geqrf (Buffer Version)": [[267, "geqrf-buffer-version"]], "geqrf (USM Version)": [[267, "geqrf-usm-version"]], "geqrf_batch": [[268, "geqrf-batch"]], "geqrf_batch (Buffer Version)": [[268, "geqrf-batch-buffer-version"]], "geqrf_batch (USM Version)": [[268, "geqrf-batch-usm-version"]], "geqrf_batch_scratchpad_size": [[269, "geqrf-batch-scratchpad-size"]], "geqrf_scratchpad_size": [[270, "geqrf-scratchpad-size"]], "gerqf": [[271, "gerqf"]], "gerqf (Buffer Version)": [[271, "gerqf-buffer-version"]], "gerqf (USM Version)": [[271, "gerqf-usm-version"]], "gerqf_scratchpad_size": [[272, "gerqf-scratchpad-size"], [272, "id1"]], "gesvd": [[273, "gesvd"]], "gesvd (Buffer Version)": [[273, "gesvd-buffer-version"]], "gesvd (USM Version)": [[273, "gesvd-usm-version"]], "gesvd_scratchpad_size": [[274, "gesvd-scratchpad-size"], [274, "id1"]], "getrf": [[275, "getrf"]], "getrf (BUFFER Version)": [[275, "getrf-buffer-version"]], "getrf (USM Version)": [[275, "getrf-usm-version"]], "getrf_batch": [[276, "getrf-batch"]], "getrf_batch (Buffer Version)": [[276, "getrf-batch-buffer-version"]], "getrf_batch (USM Version)": [[276, "getrf-batch-usm-version"]], "getrf_batch_scratchpad_size": [[277, "getrf-batch-scratchpad-size"]], "getrf_scratchpad_size": [[278, "getrf-scratchpad-size"], [278, "id1"]], "getri": [[279, "getri"]], "getri (BUFFER Version)": [[279, "getri-buffer-version"]], "getri (USM Version)": [[279, "getri-usm-version"]], "getri_batch": [[280, "getri-batch"]], "getri_batch (Buffer Version)": [[280, "getri-batch-buffer-version"]], "getri_batch (USM Version)": [[280, "getri-batch-usm-version"]], "getri_batch_scratchpad_size": [[281, "getri-batch-scratchpad-size"]], "getri_scratchpad_size": [[282, "getri-scratchpad-size"], [282, "id1"]], "getrs": [[283, "getrs"]], "getrs (Buffer Version)": [[283, "getrs-buffer-version"]], "getrs (USM Version)": [[283, "getrs-usm-version"]], "getrs_batch": [[284, "getrs-batch"]], "getrs_batch (Buffer Version)": [[284, "getrs-batch-buffer-version"]], "getrs_batch (USM Version)": [[284, "getrs-batch-usm-version"]], "getrs_batch_scratchpad_size": [[285, "getrs-batch-scratchpad-size"]], "getrs_scratchpad_size": [[286, "getrs-scratchpad-size"], [286, "id1"]], "heevd": [[287, "heevd"]], "heevd (Buffer Version)": [[287, "heevd-buffer-version"]], "heevd (USM Version)": [[287, "heevd-usm-version"]], "heevd_scratchpad_size": [[288, "heevd-scratchpad-size"], [288, "id1"]], "hegvd": [[289, "hegvd"]], "hegvd (Buffer Version)": [[289, "hegvd-buffer-version"]], "hegvd (USM Version)": [[289, "hegvd-usm-version"]], "hegvd_scratchpad_size": [[290, "hegvd-scratchpad-size"], [290, "id1"]], "hetrd": [[291, "hetrd"]], "hetrd (Buffer Version)": [[291, "hetrd-buffer-version"]], "hetrd (USM Version)": [[291, "hetrd-usm-version"]], "hetrd_scratchpad_size": [[292, "hetrd-scratchpad-size"], [292, "id1"]], "hetrf": [[293, "hetrf"]], "hetrf (Buffer Version)": [[293, "hetrf-buffer-version"]], "hetrf (USM Version)": [[293, "hetrf-usm-version"]], "hetrf_scratchpad_size": [[294, "hetrf-scratchpad-size"], [294, "id1"]], "LAPACK Routines": [[295, "lapack-routines"]], "LAPACK Linear Equation Routines": [[295, "lapack-linear-equation-routines"]], "LAPACK Singular Value and Eigenvalue Problem Routines": [[295, "lapack-singular-value-and-eigenvalue-problem-routines"]], "LAPACK-like Extensions Routines": [[295, "lapack-like-extensions-routines"]], "orgbr": [[296, "orgbr"]], "orgbr (Buffer Version)": [[296, "orgbr-buffer-version"]], "orgbr (USM Version)": [[296, "orgbr-usm-version"]], "orgbr_scratchpad_size": [[297, "orgbr-scratchpad-size"], [297, "id1"]], "orgqr": [[298, "orgqr"]], "orgqr (Buffer Version)": [[298, "orgqr-buffer-version"]], "orgqr (USM Version)": [[298, "orgqr-usm-version"]], "orgqr_batch": [[299, "orgqr-batch"]], "orgqr_batch (Buffer Version)": [[299, "orgqr-batch-buffer-version"]], "orgqr_batch (USM Version)": [[299, "orgqr-batch-usm-version"]], "orgqr_batch_scratchpad_size": [[300, "orgqr-batch-scratchpad-size"]], "orgqr_scratchpad_size": [[301, "orgqr-scratchpad-size"], [301, "id1"]], "orgtr": [[302, "orgtr"]], "orgtr (Buffer Version)": [[302, "orgtr-buffer-version"]], "orgtr (USM Version)": [[302, "orgtr-usm-version"]], "orgtr_scratchpad_size": [[303, "orgtr-scratchpad-size"], [303, "id1"]], "ormqr": [[304, "ormqr"]], "ormqr (Buffer Version)": [[304, "ormqr-buffer-version"]], "ormqr (USM Version)": [[304, "ormqr-usm-version"]], "ormqr_scratchpad_size": [[305, "ormqr-scratchpad-size"], [305, "id1"]], "ormrq": [[306, "ormrq"]], "ormrq (Buffer Version)": [[306, "ormrq-buffer-version"]], "ormrq (USM Version)": [[306, "ormrq-usm-version"]], "ormrq_scratchpad_size": [[307, "ormrq-scratchpad-size"], [307, "id1"]], "ormtr": [[308, "ormtr"]], "ormtr (Buffer Version)": [[308, "ormtr-buffer-version"]], "ormtr (USM Version)": [[308, "ormtr-usm-version"]], "ormtr_scratchpad_size": [[309, "ormtr-scratchpad-size"], [309, "id1"]], "potrf": [[310, "potrf"]], "potrf (Buffer Version)": [[310, "potrf-buffer-version"]], "potrf (USM Version)": [[310, "potrf-usm-version"]], "potrf_batch": [[311, "potrf-batch"]], "potrf_batch (Buffer Version)": [[311, "potrf-batch-buffer-version"]], "potrf_batch (USM Version)": [[311, "potrf-batch-usm-version"]], "potrf_batch_scratchpad_size": [[312, "potrf-batch-scratchpad-size"]], "potrf_scratchpad_size": [[313, "potrf-scratchpad-size"], [313, "id1"]], "potri": [[314, "potri"]], "potri (Buffer Version)": [[314, "potri-buffer-version"]], "potri (USM Version)": [[314, "potri-usm-version"]], "potri_scratchpad_size": [[315, "potri-scratchpad-size"], [315, "id1"]], "potrs": [[316, "potrs"]], "potrs (Buffer Version)": [[316, "potrs-buffer-version"]], "potrs (USM Version)": [[316, "potrs-usm-version"]], "potrs_batch": [[317, "potrs-batch"]], "potrs_batch (Buffer Version)": [[317, "potrs-batch-buffer-version"]], "potrs_batch (USM Version)": [[317, "potrs-batch-usm-version"]], "potrs_batch_scratchpad_size": [[318, "potrs-batch-scratchpad-size"]], "potrs_scratchpad_size": [[319, "potrs-scratchpad-size"], [319, "id1"]], "syevd": [[320, "syevd"]], "syevd (Buffer Version)": [[320, "syevd-buffer-version"]], "syevd (USM Version)": [[320, "syevd-usm-version"]], "syevd_scratchpad_size": [[321, "syevd-scratchpad-size"], [321, "id1"]], "sygvd": [[322, "sygvd"]], "sygvd (Buffer Version)": [[322, "sygvd-buffer-version"]], "sygvd (USM Version)": [[322, "sygvd-usm-version"]], "sygvd_scratchpad_size": [[323, "sygvd-scratchpad-size"], [323, "id1"]], "sytrd": [[324, "sytrd"]], "sytrd (Buffer Version)": [[324, "sytrd-buffer-version"]], "sytrd (USM Version)": [[324, "sytrd-usm-version"]], "sytrd_scratchpad_size": [[325, "sytrd-scratchpad-size"], [325, "id1"]], "sytrf": [[326, "sytrf"]], "sytrf (Buffer Version)": [[326, "sytrf-buffer-version"]], "sytrf (USM Version)": [[326, "sytrf-usm-version"]], "sytrf_scratchpad_size": [[327, "sytrf-scratchpad-size"], [327, "id1"]], "trtrs": [[328, "trtrs"]], "trtrs (Buffer Version)": [[328, "trtrs-buffer-version"]], "trtrs (USM Version)": [[328, "trtrs-usm-version"]], "trtrs_scratchpad_size": [[329, "trtrs-scratchpad-size"], [329, "id1"]], "ungbr": [[330, "ungbr"]], "ungbr (Buffer Version)": [[330, "ungbr-buffer-version"]], "ungbr (USM Version)": [[330, "ungbr-usm-version"]], "ungbr_scratchpad_size": [[331, "ungbr-scratchpad-size"], [331, "id1"]], "ungqr": [[332, "ungqr"]], "ungqr (Buffer Version)": [[332, "ungqr-buffer-version"]], "ungqr (USM Version)": [[332, "ungqr-usm-version"]], "ungqr_batch": [[333, "ungqr-batch"]], "ungqr_batch (Buffer Version)": [[333, "ungqr-batch-buffer-version"]], "ungqr_batch (USM Version)": [[333, "ungqr-batch-usm-version"]], "ungqr_batch_scratchpad_size": [[334, "ungqr-batch-scratchpad-size"]], "ungqr_scratchpad_size": [[335, "ungqr-scratchpad-size"], [335, "id1"]], "ungtr": [[336, "ungtr"]], "ungtr (Buffer Version)": [[336, "ungtr-buffer-version"]], "ungtr (USM Version)": [[336, "ungtr-usm-version"]], "ungtr_scratchpad_size": [[337, "ungtr-scratchpad-size"], [337, "id1"]], "unmqr": [[338, "unmqr"]], "unmqr (Buffer Version)": [[338, "unmqr-buffer-version"]], "unmqr (USM Version)": [[338, "unmqr-usm-version"]], "unmqr_scratchpad_size": [[339, "unmqr-scratchpad-size"], [339, "id1"]], "unmrq": [[340, "unmrq"]], "unmrq (Buffer Version)": [[340, "unmrq-buffer-version"]], "unmrq (USM Version)": [[340, "unmrq-usm-version"]], "unmrq_scratchpad_size": [[341, "unmrq-scratchpad-size"], [341, "id1"]], "unmtr": [[342, "unmtr"]], "unmtr (Buffer Version)": [[342, "unmtr-buffer-version"]], "unmtr (USM Version)": [[342, "unmtr-usm-version"]], "unmtr_scratchpad_size": [[343, "unmtr-scratchpad-size"], [343, "id1"]], "Matrix Storage": [[344, "matrix-storage"]], "Device Distributions": [[346, "device-distributions"]], "Distributions Template Parameter Method": [[347, "distributions-template-parameter-method"], [371, "distributions-template-parameter-method"]], "Device Engines (Basic Random Number Generators)": [[348, "device-engines-basic-random-number-generators"]], "bernoulli": [[349, "bernoulli"], [375, "bernoulli"]], "class bernoulli": [[349, "class-bernoulli"], [375, "class-bernoulli"]], "beta": [[350, "beta"], [376, "beta"]], "class beta": [[350, "class-beta"], [376, "class-beta"]], "bits": [[351, "bits"], [378, "bits"]], "class bits": [[351, "class-bits"], [378, "class-bits"]], "exponential": [[352, "exponential"], [382, "exponential"]], "class exponential": [[352, "class-exponential"], [382, "class-exponential"]], "gamma": [[353, "gamma"], [383, "gamma"]], "class gamma": [[353, "class-gamma"], [383, "class-gamma"]], "gaussian": [[354, "gaussian"], [384, "gaussian"]], "class gaussian": [[354, "class-gaussian"], [384, "class-gaussian"]], "generate": [[355, "generate"], [386, "generate"]], "Device Generate Routines": [[356, "device-generate-routines"]], "lognormal": [[357, "lognormal"], [392, "lognormal"]], "class lognormal": [[357, "class-lognormal"], [392, "class-lognormal"]], "mcg31m1": [[358, "mcg31m1"], [393, "mcg31m1"]], "class mcg31m1": [[358, "class-mcg31m1"], [393, "class-mcg31m1"]], "mcg59": [[359, "mcg59"], [394, "mcg59"]], "class mcg59": [[359, "class-mcg59"], [394, "class-mcg59"]], "mrg32k3a": [[360, "mrg32k3a"], [395, "mrg32k3a"]], "class mrg32k3a": [[360, "class-mrg32k3a"], [395, "class-mrg32k3a"]], "philox4x32x10": [[361, "philox4x32x10"], [402, "philox4x32x10"]], "class philox4x32x10": [[361, "class-philox4x32x10"], [402, "class-philox4x32x10"]], "poisson": [[362, "poisson"], [403, "poisson"]], "class poisson": [[362, "class-poisson"], [403, "class-poisson"]], "skip_ahead": [[363, "skip-ahead"], [363, "id1"], [408, "skip-ahead"], [408, "onemkl-rng-skip-ahead-common"]], "uniform_bits": [[364, "uniform-bits"], [412, "uniform-bits"]], "class uniform_bits": [[364, "class-uniform-bits"], [412, "class-uniform-bits"]], "uniform (Continuous)": [[365, "uniform-continuous"]], "class uniform": [[365, "class-uniform"], [366, "class-uniform"], [410, "class-uniform"], [411, "class-uniform"]], "uniform (Discrete)": [[366, "uniform-discrete"]], "oneMKL RNG Device Usage Model": [[367, "onemkl-rng-device-usage-model"]], "Example of Scalar Random Numbers Generation": [[367, "example-of-scalar-random-numbers-generation"]], "Example of Vector Random Numbers Generation": [[367, "example-of-vector-random-numbers-generation"]], "Random Number Generators Device Routines": [[368, "random-number-generators-device-routines"]], "Device Service Routines": [[369, "device-service-routines"]], "Host Distributions": [[370, "host-distributions"]], "Host Engines (Basic Random Number Generators)": [[372, "host-engines-basic-random-number-generators"]], "Host Generate Routine": [[373, "host-generate-routine"]], "ars5": [[374, "ars5"]], "class ars5": [[374, "class-ars5"]], "binomial": [[377, "binomial"]], "class binomial": [[377, "class-binomial"]], "cauchy": [[379, "cauchy"]], "class cauchy": [[379, "class-cauchy"]], "chi_square": [[380, "chi-square"]], "class chi_square": [[380, "class-chi-square"]], "default_engine": [[381, "default-engine"]], "type alias default_engine": [[381, "type-alias-default-engine"]], "gaussian_mv": [[385, "gaussian-mv"]], "class gaussian_mv": [[385, "class-gaussian-mv"]], "generate (Buffer version)": [[386, "generate-buffer-version"]], "generate (USM version)": [[386, "generate-usm-version"]], "geometric": [[387, "geometric"]], "class geometric": [[387, "class-geometric"]], "gumbel": [[388, "gumbel"]], "class gumbel": [[388, "class-gumbel"]], "hypergeometric": [[389, "hypergeometric"]], "class hypergeometric": [[389, "class-hypergeometric"]], "laplace": [[390, "laplace"]], "class laplace": [[390, "class-laplace"]], "leapfrog": [[391, "leapfrog"], [391, "onemkl-rng-leapfrog-common"]], "mt19937": [[396, "mt19937"]], "class mt19937": [[396, "class-mt19937"]], "mt2203": [[397, "mt2203"]], "class mt2203": [[397, "class-mt2203"]], "multinomial": [[398, "multinomial"]], "class multinomial": [[398, "class-multinomial"]], "negative_binomial": [[399, "negative-binomial"]], "class negative_binomial": [[399, "class-negative-binomial"]], "niederreiter": [[400, "niederreiter"]], "class niederreiter": [[400, "class-niederreiter"]], "nondeterministic": [[401, "nondeterministic"]], "class nondeterministic": [[401, "class-nondeterministic"]], "poisson_v": [[404, "poisson-v"]], "class poisson_v": [[404, "class-poisson-v"]], "r250": [[405, "r250"]], "class r250": [[405, "class-r250"]], "rayleigh": [[406, "rayleigh"]], "class rayleigh": [[406, "class-rayleigh"]], "sfmt19937": [[407, "sfmt19937"]], "class sfmt19937": [[407, "class-sfmt19937"]], "skip_ahead (Interface with a partitioned number of skipped elements)": [[408, "skip-ahead-interface-with-a-partitioned-number-of-skipped-elements"]], "sobol": [[409, "sobol"]], "class sobol": [[409, "class-sobol"]], "uniform (continuous)": [[410, "uniform-continuous"]], "uniform (discrete)": [[411, "uniform-discrete"]], "weibull": [[413, "weibull"]], "class weibull": [[413, "class-weibull"]], "wichmann_hill": [[414, "wichmann-hill"]], "class wichmann_hill": [[414, "class-wichmann-hill"]], "oneMKL RNG Host Usage Model": [[415, "onemkl-rng-host-usage-model"]], "Buffer-based example": [[415, "buffer-based-example"]], "USM-based example": [[415, "usm-based-example"], [458, "usm-based-example"]], "Random Number Generators Host Routines": [[416, "random-number-generators-host-routines"]], "Host Service Routines": [[417, "host-service-routines"]], "Random Number Generators (RNG)": [[418, "random-number-generators-rng"]], "Data handles": [[419, "data-handles"]], "Dense vector handle": [[419, "dense-vector-handle"]], "Dense matrix handle": [[419, "dense-matrix-handle"]], "Sparse matrix handle": [[419, "sparse-matrix-handle"]], "Sparse storage formats": [[420, "sparse-storage-formats"]], "init_coo_matrix": [[421, "init-coo-matrix"]], "init_coo_matrix (Buffer version)": [[421, "init-coo-matrix-buffer-version"]], "init_coo_matrix (USM version)": [[421, "init-coo-matrix-usm-version"]], "init_csr_matrix": [[422, "init-csr-matrix"]], "init_csr_matrix (Buffer version)": [[422, "init-csr-matrix-buffer-version"]], "init_csr_matrix (USM version)": [[422, "init-csr-matrix-usm-version"]], "init_dense_matrix": [[423, "init-dense-matrix"]], "init_dense_matrix (Buffer version)": [[423, "init-dense-matrix-buffer-version"]], "init_dense_matrix (USM version)": [[423, "init-dense-matrix-usm-version"]], "init_dense_vector": [[424, "init-dense-vector"]], "init_dense_vector (Buffer version)": [[424, "init-dense-vector-buffer-version"]], "init_dense_vector (USM version)": [[424, "init-dense-vector-usm-version"]], "release_dense_matrix": [[425, "release-dense-matrix"]], "release_dense_vector": [[426, "release-dense-vector"]], "release_sparse_matrix": [[427, "release-sparse-matrix"]], "set_coo_matrix_data": [[428, "set-coo-matrix-data"]], "set_coo_matrix_data (Buffer version)": [[428, "set-coo-matrix-data-buffer-version"]], "set_coo_matrix_data (USM version)": [[428, "set-coo-matrix-data-usm-version"]], "set_csr_matrix_data": [[429, "set-csr-matrix-data"]], "set_csr_matrix_data (Buffer version)": [[429, "set-csr-matrix-data-buffer-version"]], "set_csr_matrix_data (USM version)": [[429, "set-csr-matrix-data-usm-version"]], "set_dense_matrix_data": [[430, "set-dense-matrix-data"]], "set_dense_matrix_data (Buffer version)": [[430, "set-dense-matrix-data-buffer-version"]], "set_dense_matrix_data (USM version)": [[430, "set-dense-matrix-data-usm-version"]], "set_dense_vector_data": [[431, "set-dense-vector-data"]], "set_dense_vector_data (Buffer version)": [[431, "set-dense-vector-data-buffer-version"]], "set_dense_vector_data (USM version)": [[431, "set-dense-vector-data-usm-version"]], "set_matrix_property": [[432, "set-matrix-property"], [432, "id1"]], "Matrix properties": [[432, "matrix-properties"]], "symmetric": [[432, "symmetric"]], "sorted": [[432, "sorted"]], "sorted_by_rows": [[432, "sorted-by-rows"]], "Matrix view": [[433, "matrix-view"]], "matrix_descr": [[433, "matrix-descr"]], "matrix_view": [[433, "onemkl-sparse-matrix-view"]], "spmm": [[434, "spmm"], [434, "onemkl-sparse-spmm"]], "spmm_descr": [[434, "spmm-descr"]], "init_spmm_descr": [[434, "init-spmm-descr"]], "release_spmm_descr": [[434, "release-spmm-descr"]], "spmm_alg": [[434, "spmm-alg"]], "spmv_descr": [[435, "spmv-descr"]], "init_spmv_descr": [[435, "init-spmv-descr"]], "release_spmv_descr": [[435, "release-spmv-descr"]], "spmv_alg": [[435, "spmv-alg"]], "spsv": [[436, "spsv"], [436, "onemkl-sparse-spsv"]], "spsv_descr": [[436, "spsv-descr"]], "init_spsv_descr": [[436, "init-spsv-descr"]], "release_spsv_descr": [[436, "release-spsv-descr"]], "spsv_alg": [[436, "spsv-alg"]], "Sparse BLAS": [[437, "sparse-blas"]], "Supported template types": [[438, "supported-template-types"]], "central_moment": [[439, "central-moment"]], "central_moment (buffer version)": [[439, "central-moment-buffer-version"]], "central_moment (USM version)": [[439, "central-moment-usm-version"]], "central_moment with provided mean": [[440, "central-moment-with-provided-mean"]], "central_moment with provided mean (buffer version)": [[440, "central-moment-with-provided-mean-buffer-version"]], "central_moment with provided mean (USM version)": [[440, "central-moment-with-provided-mean-usm-version"]], "central_sum": [[441, "central-sum"]], "central_sum (Buffer version)": [[441, "central-sum-buffer-version"]], "central_sum (USM version)": [[441, "central-sum-usm-version"]], "central_sum with provided mean": [[442, "central-sum-with-provided-mean"]], "central_sum with provided mean (buffer version)": [[442, "central-sum-with-provided-mean-buffer-version"]], "central_sum with provided mean  (USM version)": [[442, "central-sum-with-provided-mean-usm-version"]], "dataset": [[443, "dataset"]], "structure dataset (Buffer version)": [[443, "structure-dataset-buffer-version"]], "structure dataset (USM version)": [[443, "structure-dataset-usm-version"]], "kurtosis": [[444, "kurtosis"]], "kurtosis (buffer version)": [[444, "kurtosis-buffer-version"]], "kurtosis (USM version)": [[444, "kurtosis-usm-version"]], "kurtosis with provided mean": [[445, "kurtosis-with-provided-mean"]], "kurtosis with provided mean (buffer version)": [[445, "kurtosis-with-provided-mean-buffer-version"]], "kurtosis with provided mean (USM version)": [[445, "kurtosis-with-provided-mean-usm-version"]], "make_dataset": [[446, "make-dataset"]], "make_dataset (buffer version)": [[446, "make-dataset-buffer-version"]], "make_dataset (USM version)": [[446, "make-dataset-usm-version"]], "max": [[447, "max"]], "max (buffer version)": [[447, "max-buffer-version"]], "max (USM version)": [[447, "max-usm-version"]], "mean": [[448, "mean"]], "mean (buffer version)": [[448, "mean-buffer-version"]], "mean (USM version)": [[448, "mean-usm-version"]], "min": [[449, "min"]], "min (buffer version)": [[449, "min-buffer-version"]], "min (USM version)": [[449, "min-usm-version"]], "min_max": [[450, "min-max"]], "min_max (buffer version)": [[450, "min-max-buffer-version"]], "min_max (USM version)": [[450, "min-max-usm-version"]], "raw_moment": [[452, "raw-moment"]], "oneapi::mkl::stats::raw_moment (buffer version)": [[452, "oneapi-mkl-stats-raw-moment-buffer-version"]], "raw_moment (USM version)": [[452, "raw-moment-usm-version"]], "raw_sum": [[453, "raw-sum"]], "raw_sum (Buffer version)": [[453, "raw-sum-buffer-version"]], "raw_sum (USM version)": [[453, "raw-sum-usm-version"]], "Summary Statistics Routines": [[454, "summary-statistics-routines"]], "Service Routines": [[455, "service-routines"]], "skewness": [[456, "skewness"]], "skewness (buffer version)": [[456, "skewness-buffer-version"]], "skewness (USM version)": [[456, "skewness-usm-version"]], "skewness with provided mean": [[457, "skewness-with-provided-mean"]], "skewness with provided mean (buffer version)": [[457, "skewness-with-provided-mean-buffer-version"]], "skewness with provided mean (USM version)": [[457, "skewness-with-provided-mean-usm-version"]], "oneMKL Summary Statistics Usage Model": [[458, "onemkl-summary-statistics-usage-model"]], "variation": [[459, "variation"]], "variation (buffer version)": [[459, "variation-buffer-version"]], "variation (USM version)": [[459, "variation-usm-version"]], "variation with provided mean": [[460, "variation-with-provided-mean"]], "oneapi::mkl::stats::variation (buffer version)": [[460, "oneapi-mkl-stats-variation-buffer-version"]], "variation with provided mean (USM version)": [[460, "variation-with-provided-mean-usm-version"]], "Scalar Arguments in BLAS": [[461, "scalar-arguments-in-blas"]], "abs": [[462, "abs"]], "acos": [[463, "acos"]], "acosh": [[464, "acosh"]], "acospi": [[465, "acospi"]], "add": [[466, "add"]], "arg": [[467, "arg"]], "asin": [[468, "asin"]], "asinh": [[469, "asinh"]], "asinpi": [[470, "asinpi"]], "atan": [[471, "atan"]], "atan2": [[472, "atan2"]], "atan2pi": [[473, "atan2pi"]], "atanh": [[474, "atanh"]], "atanpi": [[475, "atanpi"]], "cbrt": [[477, "cbrt"]], "cdfnorm": [[478, "cdfnorm"]], "cdfnorminv": [[479, "cdfnorminv"]], "ceil": [[480, "ceil"]], "cis": [[481, "cis"]], "clear_status": [[482, "clear-status"]], "conj": [[483, "conj"]], "copysign": [[484, "copysign"]], "cos": [[485, "cos"]], "cosd": [[486, "cosd"]], "cosh": [[487, "cosh"]], "cospi": [[488, "cospi"]], "create_error_handler": [[489, "create-error-handler"]], "div": [[490, "div"]], "erf": [[491, "erf"]], "erfc": [[492, "erfc"]], "erfcinv": [[493, "erfcinv"]], "erfinv": [[494, "erfinv"]], "exp": [[495, "exp"]], "exp10": [[496, "exp10"]], "exp2": [[497, "exp2"]], "expint1": [[498, "expint1"]], "expm1": [[499, "expm1"]], "fdim": [[500, "fdim"]], "floor": [[501, "floor"]], "fmax": [[502, "fmax"]], "fmin": [[503, "fmin"]], "fmod": [[504, "fmod"]], "frac": [[505, "frac"]], "get_mode": [[506, "get-mode"]], "get_status": [[507, "get-status"]], "hypot": [[508, "hypot"]], "inv": [[509, "inv"]], "invcbrt": [[510, "invcbrt"]], "invsqrt": [[511, "invsqrt"]], "lgamma": [[512, "lgamma"]], "linearfrac": [[513, "linearfrac"]], "ln": [[514, "ln"]], "log10": [[515, "log10"]], "log1p": [[516, "log1p"]], "log2": [[517, "log2"]], "logb": [[518, "logb"]], "maxmag": [[519, "maxmag"]], "minmag": [[520, "minmag"]], "modf": [[521, "modf"]], "mul": [[522, "mul"]], "mulbyconj": [[523, "mulbyconj"]], "nearbyint": [[524, "nearbyint"]], "nextafter": [[525, "nextafter"]], "pow": [[526, "pow"]], "pow2o3": [[527, "pow2o3"]], "pow3o2": [[528, "pow3o2"]], "powr": [[529, "powr"]], "powx": [[530, "powx"]], "remainder": [[531, "remainder"]], "rint": [[532, "rint"]], "round": [[533, "round"]], "set_status": [[534, "set-status"]], "set_mode": [[535, "set-mode"]], "sin": [[536, "sin"]], "sincos": [[537, "sincos"]], "sind": [[538, "sind"]], "sinh": [[539, "sinh"]], "sinpi": [[540, "sinpi"]], "Special Value Notations": [[541, "special-value-notations"]], "sqr": [[542, "sqr"]], "sqrt": [[543, "sqrt"]], "sub": [[544, "sub"]], "tan": [[545, "tan"]], "tand": [[546, "tand"]], "tanh": [[547, "tanh"]], "tanpi": [[548, "tanpi"]], "tgamma": [[549, "tgamma"]], "trunc": [[550, "trunc"]], "Exceptions": [[552, "exceptions"]], "VM Mathematical Functions": [[553, "vm-mathematical-functions"]], "VM Service Functions": [[554, "vm-service-functions"]], "oneMKL": [[555, "onemkl"]], "Parallel Functions": [[556, "parallel-functions"]], "Blocked Ranges": [[556, "blocked-ranges"]], "Partitioners": [[556, "partitioners"]], "Split Tags": [[556, "split-tags"]], "blocked_nd_range": [[557, "blocked-nd-range"]], "Member types": [[557, "member-types"], [558, "member-types"], [559, "member-types"], [753, "member-types"], [766, "member-types"], [769, "member-types"], [774, "member-types"]], "Member functions": [[557, "member-functions"], [558, "member-functions"], [559, "member-functions"], [560, "member-functions"], [562, "member-functions"], [563, "member-functions"], [569, "member-functions"], [571, "member-functions"], [575, "member-functions"], [580, "member-functions"], [588, "member-functions"], [589, "member-functions"], [590, "member-functions"], [598, "member-functions"], [599, "member-functions"], [611, "member-functions"], [625, "member-functions"], [626, "member-functions"], [639, "member-functions"], [640, "member-functions"], [653, "member-functions"], [661, "member-functions"], [669, "member-functions"], [682, "member-functions"], [697, "member-functions"], [711, "member-functions"], [725, "member-functions"], [739, "member-functions"], [751, "member-functions"], [753, "member-functions"], [754, "member-functions"], [755, "member-functions"], [756, "member-functions"], [758, "member-functions"], [762, "member-functions"], [764, "member-functions"], [766, "member-functions"], [767, "member-functions"], [769, "member-functions"], [771, "member-functions"], [774, "member-functions"], [777, "member-functions"], [779, "member-functions"], [780, "member-functions"], [785, "member-functions"], [786, "member-functions"], [787, "member-functions"], [788, "member-functions"], [800, "member-functions"], [801, "member-functions"], [802, "member-functions"], [803, "member-functions"], [804, "member-functions"], [805, "member-functions"], [806, "member-functions"], [807, "member-functions"], [808, "member-functions"], [809, "member-functions"], [847, "member-functions"], [849, "member-functions"], [851, "member-functions"], [852, "member-functions"], [854, "member-functions"], [858, "member-functions"], [859, "member-functions"], [866, "member-functions"]], "blocked_range2d": [[558, "blocked-range2d"]], "blocked_range3d": [[559, "blocked-range3d"]], "blocked_range": [[560, "blocked-range"]], "collaborative_call_once": [[561, "collaborative-call-once"]], "collaborative_once_flag Class": [[561, "collaborative-once-flag-class"]], "Example": [[561, "example"], [565, "example"], [567, "example"], [568, "example"], [758, "example"], [762, "example"], [763, "example"], [775, "example"], [779, "example"], [780, "example"], [785, "example"], [788, "example"], [848, "example"], [851, "example"], [852, "example"]], "collaborative_once_flag": [[562, "collaborative-once-flag"]], "feeder": [[563, "feeder"]], "parallel_deterministic_reduce": [[564, "parallel-deterministic-reduce"]], "parallel_for_each": [[565, "parallel-for-each"]], "feeder Class": [[565, "feeder-class"]], "parallel_for": [[566, "parallel-for"]], "parallel_invoke": [[567, "parallel-invoke"]], "parallel_pipeline": [[568, "parallel-pipeline"]], "filter Class Template": [[568, "filter-class-template"]], "flow_control Class": [[568, "flow-control-class"]], "filter": [[569, "filter"]], "filter_mode Enumeration": [[569, "filter-mode-enumeration"]], "Non-member functions": [[569, "non-member-functions"], [590, "non-member-functions"], [598, "non-member-functions"], [611, "non-member-functions"], [626, "non-member-functions"], [640, "non-member-functions"], [653, "non-member-functions"], [661, "non-member-functions"], [669, "non-member-functions"], [682, "non-member-functions"], [697, "non-member-functions"], [711, "non-member-functions"], [725, "non-member-functions"], [739, "non-member-functions"], [787, "non-member-functions"], [854, "non-member-functions"], [866, "non-member-functions"], [869, "non-member-functions"]], "Deduction Guides": [[569, "deduction-guides"], [758, "deduction-guides"], [762, "deduction-guides"], [767, "deduction-guides"], [769, "deduction-guides"], [785, "deduction-guides"]], "filter_mode": [[570, "filter-mode"]], "flow_control": [[571, "flow-control"]], "parallel_reduce": [[572, "parallel-reduce"]], "Example (Imperative Form)": [[572, "example-imperative-form"], [573, "example-imperative-form"]], "Example with Lambda Expressions": [[572, "example-with-lambda-expressions"], [573, "example-with-lambda-expressions"]], "parallel_scan": [[573, "parallel-scan"]], "pre_scan and final_scan Classes": [[573, "pre-scan-and-final-scan-classes"]], "parallel_sort": [[574, "parallel-sort"]], "pre_scan_tag and final_scan_tag": [[575, "pre-scan-tag-and-final-scan-tag"]], "affinity_partitioner": [[576, "affinity-partitioner"]], "auto_partitioner": [[577, "auto-partitioner"]], "simple_partitioner": [[578, "simple-partitioner"]], "static_partitioner": [[579, "static-partitioner"]], "proportional split": [[580, "proportional-split"]], "split": [[581, "split"]], "Configuration": [[582, "configuration"]], "Enabling Debugging Features": [[583, "enabling-debugging-features"]], "Debugging Macros": [[583, "id1"]], "TBB_USE_ASSERT Macro": [[583, "tbb-use-assert-macro"]], "TBB_USE_PROFILING_TOOLS Macro": [[583, "tbb-use-profiling-tools-macro"]], "Feature Macros": [[584, "feature-macros"]], "TBB_USE_EXCEPTIONS macro": [[584, "tbb-use-exceptions-macro"]], "TBB_USE_GLIBCXX_VERSION macro": [[584, "tbb-use-glibcxx-version-macro"]], "tbb Namespace": [[585, "tbb-namespace"]], "tbb::flow Namespace": [[585, "tbb-flow-namespace"]], "oneapi::tbb Namespace": [[585, "oneapi-tbb-namespace"]], "Version Macros": [[586, "version-macros"]], "TBB_runtime_interface_version Function": [[586, "tbb-runtime-interface-version-function"]], "TBB_runtime_version Function": [[586, "tbb-runtime-version-function"]], "TBB_VERSION Environment Variable": [[586, "tbb-version-environment-variable"]], "Containers": [[587, "containers"], [810, "containers"]], "Sequences": [[587, "sequences"]], "Queues": [[587, "queues"]], "Unordered associative containers": [[587, "unordered-associative-containers"]], "Ordered associative containers": [[587, "ordered-associative-containers"]], "Auxiliary classes": [[587, "auxiliary-classes"]], "Node handles": [[588, "node-handles"]], "Class synopsis": [[588, "class-synopsis"]], "Assignment": [[588, "assignment"]], "Destructor": [[588, "destructor"], [591, "destructor"], [600, "destructor"], [612, "destructor"], [627, "destructor"], [641, "destructor"], [654, "destructor"], [662, "destructor"], [670, "destructor"], [684, "destructor"], [699, "destructor"], [713, "destructor"], [727, "destructor"], [741, "destructor"], [861, "destructor"]], "Swap": [[588, "swap"]], "State": [[588, "state"]], "Access to the stored element": [[588, "access-to-the-stored-element"]], "get_allocator": [[588, "get-allocator"], [596, "get-allocator"], [600, "get-allocator"], [620, "get-allocator"], [634, "get-allocator"], [648, "get-allocator"], [667, "get-allocator"], [677, "get-allocator"], [692, "get-allocator"], [706, "get-allocator"], [720, "get-allocator"], [734, "get-allocator"], [741, "get-allocator"]], "tbb_hash_compare": [[589, "tbb-hash-compare"]], "Class Template Synopsis": [[589, "class-template-synopsis"], [590, "class-template-synopsis"], [598, "class-template-synopsis"], [611, "class-template-synopsis"], [626, "class-template-synopsis"], [640, "class-template-synopsis"], [653, "class-template-synopsis"], [661, "class-template-synopsis"], [669, "class-template-synopsis"], [682, "class-template-synopsis"], [697, "class-template-synopsis"], [711, "class-template-synopsis"], [725, "class-template-synopsis"], [739, "class-template-synopsis"]], "concurrent_bounded_queue": [[590, "concurrent-bounded-queue"]], "Other": [[590, "other"], [598, "other"], [611, "other"], [626, "other"], [640, "other"], [653, "other"], [661, "other"], [669, "other"], [682, "other"], [697, "other"], [711, "other"], [725, "other"], [739, "other"]], "Construction, destruction, copying": [[591, "construction-destruction-copying"], [600, "construction-destruction-copying"], [612, "construction-destruction-copying"], [627, "construction-destruction-copying"], [641, "construction-destruction-copying"], [654, "construction-destruction-copying"], [662, "construction-destruction-copying"], [670, "construction-destruction-copying"], [684, "construction-destruction-copying"], [699, "construction-destruction-copying"], [713, "construction-destruction-copying"], [727, "construction-destruction-copying"], [741, "construction-destruction-copying"], [861, "construction-destruction-copying"]], "Empty container constructors": [[591, "empty-container-constructors"], [600, "empty-container-constructors"], [612, "empty-container-constructors"], [627, "empty-container-constructors"], [641, "empty-container-constructors"], [654, "empty-container-constructors"], [662, "empty-container-constructors"], [670, "empty-container-constructors"], [684, "empty-container-constructors"], [699, "empty-container-constructors"], [713, "empty-container-constructors"], [727, "empty-container-constructors"], [741, "empty-container-constructors"], [861, "empty-container-constructors"]], "Constructors from the sequence of elements": [[591, "constructors-from-the-sequence-of-elements"], [600, "constructors-from-the-sequence-of-elements"], [612, "constructors-from-the-sequence-of-elements"], [627, "constructors-from-the-sequence-of-elements"], [641, "constructors-from-the-sequence-of-elements"], [654, "constructors-from-the-sequence-of-elements"], [662, "constructors-from-the-sequence-of-elements"], [670, "constructors-from-the-sequence-of-elements"], [684, "constructors-from-the-sequence-of-elements"], [699, "constructors-from-the-sequence-of-elements"], [713, "constructors-from-the-sequence-of-elements"], [727, "constructors-from-the-sequence-of-elements"], [741, "constructors-from-the-sequence-of-elements"]], "Copying constructors": [[591, "copying-constructors"], [600, "copying-constructors"], [612, "copying-constructors"], [627, "copying-constructors"], [641, "copying-constructors"], [654, "copying-constructors"], [662, "copying-constructors"], [670, "copying-constructors"], [684, "copying-constructors"], [699, "copying-constructors"], [713, "copying-constructors"], [727, "copying-constructors"], [741, "copying-constructors"], [861, "copying-constructors"]], "Moving constructors": [[591, "moving-constructors"], [600, "moving-constructors"], [612, "moving-constructors"], [627, "moving-constructors"], [641, "moving-constructors"], [654, "moving-constructors"], [662, "moving-constructors"], [670, "moving-constructors"], [684, "moving-constructors"], [699, "moving-constructors"], [713, "moving-constructors"], [727, "moving-constructors"], [741, "moving-constructors"], [861, "moving-constructors"]], "assign": [[591, "assign"], [654, "assign"], [662, "assign"], [741, "assign"]], "Deduction guides": [[592, "deduction-guides"], [601, "deduction-guides"], [613, "deduction-guides"], [628, "deduction-guides"], [642, "deduction-guides"], [655, "deduction-guides"], [663, "deduction-guides"], [671, "deduction-guides"], [685, "deduction-guides"], [700, "deduction-guides"], [714, "deduction-guides"], [728, "deduction-guides"], [742, "deduction-guides"]], "unsafe_begin and unsafe_cbegin": [[593, "unsafe-begin-and-unsafe-cbegin"], [664, "unsafe-begin-and-unsafe-cbegin"]], "unsafe_end and unsafe_cend": [[593, "unsafe-end-and-unsafe-cend"], [664, "unsafe-end-and-unsafe-cend"]], "Non-member binary comparisons": [[594, "non-member-binary-comparisons"], [606, "non-member-binary-comparisons"], [617, "non-member-binary-comparisons"], [631, "non-member-binary-comparisons"], [645, "non-member-binary-comparisons"], [656, "non-member-binary-comparisons"], [665, "non-member-binary-comparisons"], [674, "non-member-binary-comparisons"], [690, "non-member-binary-comparisons"], [704, "non-member-binary-comparisons"], [718, "non-member-binary-comparisons"], [732, "non-member-binary-comparisons"], [745, "non-member-binary-comparisons"]], "Non-member swap": [[595, "non-member-swap"], [607, "non-member-swap"], [619, "non-member-swap"], [633, "non-member-swap"], [647, "non-member-swap"], [657, "non-member-swap"], [666, "non-member-swap"], [676, "non-member-swap"], [691, "non-member-swap"], [705, "non-member-swap"], [719, "non-member-swap"], [733, "non-member-swap"], [747, "non-member-swap"]], "Concurrently safe member functions": [[596, "concurrently-safe-member-functions"], [667, "concurrently-safe-member-functions"]], "Pushing elements": [[596, "pushing-elements"], [658, "pushing-elements"], [667, "pushing-elements"]], "Popping elements": [[596, "popping-elements"], [658, "popping-elements"], [667, "popping-elements"]], "abort": [[596, "abort"]], "Capacity of the queue": [[596, "capacity-of-the-queue"]], "Concurrently unsafe member functions": [[597, "concurrently-unsafe-member-functions"], [668, "concurrently-unsafe-member-functions"]], "The number of elements": [[597, "the-number-of-elements"], [668, "the-number-of-elements"]], "clear": [[597, "clear"], [610, "clear"], [660, "clear"], [668, "clear"], [750, "clear"], [865, "clear"]], "concurrent_hash_map": [[598, "concurrent-hash-map"]], "Member classes": [[598, "member-classes"], [611, "member-classes"], [626, "member-classes"], [800, "member-classes"], [801, "member-classes"], [802, "member-classes"], [803, "member-classes"], [804, "member-classes"], [805, "member-classes"], [806, "member-classes"], [807, "member-classes"], [808, "member-classes"], [809, "member-classes"]], "accessor and const_accessor": [[599, "accessor-and-const-accessor"]], "accessor member class": [[599, "accessor-member-class"]], "const_accessor member class": [[599, "const-accessor-member-class"]], "Construction and destruction": [[599, "construction-and-destruction"]], "Emptiness": [[599, "emptiness"]], "Key-value pair access": [[599, "key-value-pair-access"]], "Releasing": [[599, "releasing"]], "Hash policy": [[602, "hash-policy"], [687, "hash-policy"], [701, "hash-policy"], [715, "hash-policy"], [729, "hash-policy"]], "Rehashing": [[602, "rehashing"]], "bucket_count": [[602, "bucket-count"]], "begin and cbegin": [[603, "begin-and-cbegin"], [615, "begin-and-cbegin"], [629, "begin-and-cbegin"], [643, "begin-and-cbegin"], [672, "begin-and-cbegin"], [688, "begin-and-cbegin"], [702, "begin-and-cbegin"], [716, "begin-and-cbegin"], [730, "begin-and-cbegin"], [744, "begin-and-cbegin"]], "end and cend": [[603, "end-and-cend"], [615, "end-and-cend"], [629, "end-and-cend"], [643, "end-and-cend"], [672, "end-and-cend"], [688, "end-and-cend"], [702, "end-and-cend"], [716, "end-and-cend"], [730, "end-and-cend"], [744, "end-and-cend"]], "equal_range": [[603, "equal-range"], [616, "equal-range"], [630, "equal-range"], [644, "equal-range"], [673, "equal-range"], [689, "equal-range"], [703, "equal-range"], [717, "equal-range"], [731, "equal-range"]], "Lookup": [[604, "lookup"], [616, "lookup"], [630, "lookup"], [644, "lookup"], [673, "lookup"], [689, "lookup"], [703, "lookup"], [717, "lookup"], [731, "lookup"]], "find": [[604, "find"], [616, "find"], [630, "find"], [644, "find"], [673, "find"], [689, "find"], [703, "find"], [717, "find"], [731, "find"]], "count": [[604, "count"], [616, "count"], [630, "count"], [644, "count"], [673, "count"], [689, "count"], [703, "count"], [717, "count"], [731, "count"]], "Concurrently safe modifiers": [[605, "concurrently-safe-modifiers"], [622, "concurrently-safe-modifiers"], [636, "concurrently-safe-modifiers"], [650, "concurrently-safe-modifiers"], [658, "concurrently-safe-modifiers"], [679, "concurrently-safe-modifiers"], [694, "concurrently-safe-modifiers"], [708, "concurrently-safe-modifiers"], [722, "concurrently-safe-modifiers"], [736, "concurrently-safe-modifiers"], [863, "concurrently-safe-modifiers"]], "Inserting values": [[605, "inserting-values"], [622, "inserting-values"], [636, "inserting-values"], [650, "inserting-values"], [679, "inserting-values"], [694, "inserting-values"], [708, "inserting-values"], [722, "inserting-values"], [736, "inserting-values"]], "Inserting sequences of elements": [[605, "inserting-sequences-of-elements"], [622, "inserting-sequences-of-elements"], [636, "inserting-sequences-of-elements"], [650, "inserting-sequences-of-elements"], [679, "inserting-sequences-of-elements"], [694, "inserting-sequences-of-elements"], [708, "inserting-sequences-of-elements"], [722, "inserting-sequences-of-elements"], [736, "inserting-sequences-of-elements"]], "Emplacing elements": [[605, "emplacing-elements"], [622, "emplacing-elements"], [636, "emplacing-elements"], [650, "emplacing-elements"], [679, "emplacing-elements"], [694, "emplacing-elements"], [708, "emplacing-elements"], [722, "emplacing-elements"], [736, "emplacing-elements"]], "Erasing elements": [[605, "erasing-elements"], [624, "erasing-elements"], [638, "erasing-elements"], [652, "erasing-elements"], [681, "erasing-elements"], [696, "erasing-elements"], [710, "erasing-elements"], [724, "erasing-elements"], [738, "erasing-elements"]], "Parallel iteration": [[608, "parallel-iteration"], [621, "parallel-iteration"], [635, "parallel-iteration"], [649, "parallel-iteration"], [678, "parallel-iteration"], [693, "parallel-iteration"], [707, "parallel-iteration"], [721, "parallel-iteration"], [735, "parallel-iteration"], [748, "parallel-iteration"]], "range member function": [[608, "range-member-function"], [621, "range-member-function"], [635, "range-member-function"], [649, "range-member-function"], [678, "range-member-function"], [693, "range-member-function"], [707, "range-member-function"], [721, "range-member-function"], [735, "range-member-function"], [748, "range-member-function"]], "Size and capacity": [[609, "size-and-capacity"], [623, "size-and-capacity"], [637, "size-and-capacity"], [651, "size-and-capacity"], [659, "size-and-capacity"], [680, "size-and-capacity"], [695, "size-and-capacity"], [709, "size-and-capacity"], [723, "size-and-capacity"], [737, "size-and-capacity"], [749, "size-and-capacity"], [864, "size-and-capacity"]], "empty": [[609, "empty"], [623, "empty"], [637, "empty"], [651, "empty"], [659, "empty"], [680, "empty"], [695, "empty"], [709, "empty"], [723, "empty"], [737, "empty"], [749, "empty"]], "size": [[609, "size"], [623, "size"], [637, "size"], [651, "size"], [659, "size"], [680, "size"], [695, "size"], [709, "size"], [723, "size"], [737, "size"], [749, "size"]], "max_size": [[609, "max-size"], [623, "max-size"], [637, "max-size"], [651, "max-size"], [680, "max-size"], [695, "max-size"], [709, "max-size"], [723, "max-size"], [737, "max-size"], [749, "max-size"]], "Concurrently unsafe modifiers": [[610, "concurrently-unsafe-modifiers"], [624, "concurrently-unsafe-modifiers"], [638, "concurrently-unsafe-modifiers"], [652, "concurrently-unsafe-modifiers"], [660, "concurrently-unsafe-modifiers"], [681, "concurrently-unsafe-modifiers"], [696, "concurrently-unsafe-modifiers"], [710, "concurrently-unsafe-modifiers"], [724, "concurrently-unsafe-modifiers"], [738, "concurrently-unsafe-modifiers"], [865, "concurrently-unsafe-modifiers"]], "concurrent_map": [[611, "concurrent-map"]], "Element access": [[614, "element-access"], [686, "element-access"], [743, "element-access"]], "at": [[614, "at"], [686, "at"]], "operator[]": [[614, "operator"], [686, "operator"]], "contains": [[616, "contains"], [630, "contains"], [644, "contains"], [673, "contains"], [689, "contains"], [703, "contains"], [717, "contains"], [731, "contains"]], "lower_bound": [[616, "lower-bound"], [630, "lower-bound"], [644, "lower-bound"], [673, "lower-bound"]], "upper_bound": [[616, "upper-bound"], [630, "upper-bound"], [644, "upper-bound"], [673, "upper-bound"]], "Non-member lexicographical comparisons": [[618, "non-member-lexicographical-comparisons"], [632, "non-member-lexicographical-comparisons"], [646, "non-member-lexicographical-comparisons"], [675, "non-member-lexicographical-comparisons"], [746, "non-member-lexicographical-comparisons"]], "Observers": [[620, "observers"], [634, "observers"], [648, "observers"], [677, "observers"], [692, "observers"], [706, "observers"], [720, "observers"], [734, "observers"]], "key_comp": [[620, "key-comp"], [634, "key-comp"], [648, "key-comp"], [677, "key-comp"]], "value_comp": [[620, "value-comp"], [634, "value-comp"], [648, "value-comp"], [677, "value-comp"]], "Inserting nodes": [[622, "inserting-nodes"], [636, "inserting-nodes"], [650, "inserting-nodes"], [679, "inserting-nodes"], [694, "inserting-nodes"], [708, "inserting-nodes"], [722, "inserting-nodes"], [736, "inserting-nodes"]], "Clearing": [[624, "clearing"], [638, "clearing"], [652, "clearing"], [681, "clearing"], [696, "clearing"], [710, "clearing"], [724, "clearing"], [738, "clearing"]], "Erasing sequences": [[624, "erasing-sequences"], [638, "erasing-sequences"], [652, "erasing-sequences"], [681, "erasing-sequences"], [696, "erasing-sequences"], [710, "erasing-sequences"], [724, "erasing-sequences"], [738, "erasing-sequences"]], "Extracting nodes": [[624, "extracting-nodes"], [638, "extracting-nodes"], [652, "extracting-nodes"], [681, "extracting-nodes"], [696, "extracting-nodes"], [710, "extracting-nodes"], [724, "extracting-nodes"], [738, "extracting-nodes"]], "value_compare": [[625, "value-compare"], [639, "value-compare"]], "Class Synopsis": [[625, "class-synopsis"], [639, "class-synopsis"]], "Member objects": [[625, "member-objects"], [639, "member-objects"]], "concurrent_multimap": [[626, "concurrent-multimap"]], "Merging containers": [[636, "merging-containers"], [650, "merging-containers"], [679, "merging-containers"], [708, "merging-containers"], [722, "merging-containers"], [736, "merging-containers"]], "concurrent_multiset": [[640, "concurrent-multiset"]], "concurrent_priority_queue": [[653, "concurrent-priority-queue"]], "concurrent_queue": [[661, "concurrent-queue"]], "concurrent_set": [[669, "concurrent-set"]], "concurrent_unordered_map": [[682, "concurrent-unordered-map"]], "Bucket interface": [[683, "bucket-interface"], [698, "bucket-interface"], [712, "bucket-interface"], [726, "bucket-interface"]], "Bucket begin and bucket end": [[683, "bucket-begin-and-bucket-end"], [698, "bucket-begin-and-bucket-end"], [712, "bucket-begin-and-bucket-end"], [726, "bucket-begin-and-bucket-end"]], "The number of buckets": [[683, "the-number-of-buckets"], [698, "the-number-of-buckets"], [712, "the-number-of-buckets"], [726, "the-number-of-buckets"]], "Size of the bucket": [[683, "size-of-the-bucket"], [698, "size-of-the-bucket"], [712, "size-of-the-bucket"], [726, "size-of-the-bucket"]], "Bucket number": [[683, "bucket-number"], [698, "bucket-number"], [712, "bucket-number"], [726, "bucket-number"]], "Load factor": [[687, "load-factor"], [701, "load-factor"], [715, "load-factor"], [729, "load-factor"]], "Manual rehashing": [[687, "manual-rehashing"], [701, "manual-rehashing"], [715, "manual-rehashing"], [729, "manual-rehashing"]], "hash_function": [[692, "hash-function"], [706, "hash-function"], [720, "hash-function"], [734, "hash-function"]], "key_eq": [[692, "key-eq"], [706, "key-eq"], [720, "key-eq"], [734, "key-eq"]], "concurrent_unordered_multimap": [[697, "concurrent-unordered-multimap"]], "concurrent_unordered_multiset": [[711, "concurrent-unordered-multiset"]], "concurrent_unordered_set": [[725, "concurrent-unordered-set"]], "concurrent_vector": [[739, "concurrent-vector"]], "Exception Safety": [[739, "exception-safety"]], "Concurrent growth": [[740, "concurrent-growth"]], "grow_by": [[740, "grow-by"]], "grow_to_at_least": [[740, "grow-to-at-least"]], "push_back": [[740, "push-back"]], "emplace_back": [[740, "emplace-back"]], "Access by index": [[743, "access-by-index"]], "Access the first and the last element": [[743, "access-the-first-and-the-last-element"]], "rbegin and crbegin": [[744, "rbegin-and-crbegin"]], "rend and crend": [[744, "rend-and-crend"]], "capacity": [[749, "capacity"]], "Concurrently unsafe operations": [[750, "concurrently-unsafe-operations"]], "Reserving": [[750, "reserving"]], "Resizing": [[750, "resizing"]], "shrink_to_fit": [[750, "shrink-to-fit"]], "task_arena::attach": [[751, "task-arena-attach"]], "Member types and constants": [[751, "member-types-and-constants"], [847, "member-types-and-constants"], [849, "member-types-and-constants"], [851, "member-types-and-constants"]], "Flow Graph": [[752, "flow-graph"], [810, "flow-graph"]], "Graph Class": [[752, "graph-class"]], "Nodes": [[752, "nodes"]], "Abstract Interfaces": [[752, "abstract-interfaces"]], "Properties": [[752, "properties"]], "Functional Nodes": [[752, "functional-nodes"]], "Buffering Nodes": [[752, "buffering-nodes"]], "Service Nodes": [[752, "service-nodes"]], "Ports and Edges": [[752, "ports-and-edges"]], "Special Messages Types": [[752, "special-messages-types"]], "async_node": [[753, "async-node"]], "broadcast_node": [[754, "broadcast-node"]], "buffer_node": [[755, "buffer-node"]], "composite_node": [[756, "composite-node"]], "continue_msg": [[757, "continue-msg"]], "continue_node": [[758, "continue-node"]], "copy_body": [[759, "copy-body"]], "Dependency Flow Graph Example": [[760, "dependency-flow-graph-example"]], "Forwarding and Buffering": [[761, "forwarding-and-buffering"]], "Forwarding": [[761, "forwarding"]], "Buffering": [[761, "buffering"]], "Buffering and Forwarding properties summary": [[761, "id1"]], "function_node": [[762, "function-node"]], "Function Nodes Policies": [[763, "function-nodes-policies"]], "Queueing": [[763, "queueing"]], "Rejecting": [[763, "rejecting"]], "Lightweight": [[763, "lightweight"]], "graph": [[764, "graph"]], "reset_flags enumeration": [[764, "reset-flags-enumeration"]], "graph_node": [[765, "graph-node"]], "indexer_node": [[766, "indexer-node"]], "input_node": [[767, "input-node"]], "input_port": [[768, "input-port"]], "join_node": [[769, "join-node"]], "Non-Member Types": [[769, "non-member-types"]], "join_node Policies": [[770, "join-node-policies"]], "limiter_node": [[771, "limiter-node"]], "make_edge": [[772, "make-edge"]], "Message Flow Graph Example": [[773, "message-flow-graph-example"]], "multifunction_node": [[774, "multifunction-node"]], "Nodes Priorities": [[775, "nodes-priorities"]], "output_port": [[776, "output-port"]], "overwrite_node": [[777, "overwrite-node"]], "Predefined Concurrency Limits": [[778, "predefined-concurrency-limits"]], "priority_queue_node": [[779, "priority-queue-node"]], "queue_node": [[780, "queue-node"]], "receiver": [[781, "receiver"]], "remove_edge": [[782, "remove-edge"]], "reset_flags Enumeration": [[783, "reset-flags-enumeration"]], "sender": [[784, "sender"]], "sequencer_node": [[785, "sequencer-node"]], "split_node": [[786, "split-node"]], "tagged_msg": [[787, "tagged-msg"]], "write_once_node": [[788, "write-once-node"]], "Identifiers": [[789, "identifiers"]], "Case": [[789, "case"]], "Reserved Identifier Prefixes": [[789, "reserved-identifier-prefixes"]], "info Namespace": [[790, "info-namespace"]], "Types": [[790, "types"]], "Functions": [[790, "functions"]], "Memory Allocation": [[792, "memory-allocation"]], "Allocators": [[792, "allocators"]], "Memory Resources": [[792, "memory-resources"]], "Library Functions": [[792, "library-functions"]], "C Interface to Scalable Allocator": [[793, "c-interface-to-scalable-allocator"], [793, "id1"]], "cache_aligned_allocator": [[794, "cache-aligned-allocator"]], "Non-member Functions": [[794, "non-member-functions"], [796, "non-member-functions"], [798, "non-member-functions"], [850, "non-member-functions"]], "cache_aligned_resource": [[795, "cache-aligned-resource"]], "scalable_allocator": [[796, "scalable-allocator"]], "scalable_memory_resource": [[797, "scalable-memory-resource"]], "tbb_allocator": [[798, "tbb-allocator"]], "Mutual Exclusion": [[799, "mutual-exclusion"]], "Mutex Classes": [[799, "mutex-classes"]], "mutex": [[800, "mutex"]], "null_mutex": [[801, "null-mutex"]], "null_rw_mutex": [[802, "null-rw-mutex"]], "queuing_mutex": [[803, "queuing-mutex"]], "queuing_rw_mutex": [[804, "queuing-rw-mutex"]], "rw_mutex": [[805, "rw-mutex"]], "speculative_spin_mutex": [[806, "speculative-spin-mutex"]], "speculative_spin_rw_mutex": [[807, "speculative-spin-rw-mutex"]], "spin_mutex": [[808, "spin-mutex"]], "spin_rw_mutex": [[809, "spin-rw-mutex"]], "Named Requirements": [[810, "named-requirements"]], "Mutexes": [[810, "mutexes"]], "Task scheduler": [[810, "task-scheduler"]], "BlockedRangeValue": [[811, "blockedrangevalue"]], "ContainerBasedSequence": [[812, "containerbasedsequence"]], "FilterBody": [[813, "filterbody"]], "ParallelForBody": [[814, "parallelforbody"]], "ParallelForEachBody": [[815, "parallelforeachbody"]], "Terms": [[815, "terms"]], "ParallelForFunc": [[816, "parallelforfunc"]], "ParallelForIndex": [[817, "parallelforindex"]], "ParallelReduceBody": [[818, "parallelreducebody"]], "ParallelReduceFunc": [[819, "parallelreducefunc"]], "ParallelReduceReduction": [[820, "parallelreducereduction"]], "ParallelScanBody": [[821, "parallelscanbody"]], "ParallelScanCombine": [[822, "parallelscancombine"]], "ParallelScanFunc": [[823, "parallelscanfunc"]], "Splittable": [[825, "splittable"]], "ContainerRange": [[826, "containerrange"]], "HashCompare": [[827, "hashcompare"]], "AsyncNodeBody": [[828, "asyncnodebody"]], "ContinueNodeBody": [[829, "continuenodebody"]], "FunctionNodeBody": [[830, "functionnodebody"]], "GatewayType": [[831, "gatewaytype"]], "InputNodeBody": [[832, "inputnodebody"]], "JoinNodeFunctionObject": [[833, "joinnodefunctionobject"]], "MultifunctionNodeBody": [[834, "multifunctionnodebody"]], "Sequencer": [[835, "sequencer"]], "Mutex": [[836, "mutex"]], "Provided guarantees for Mutexes that model the Mutex requirement": [[836, "id1"]], "ReaderWriterMutex": [[837, "readerwritermutex"]], "Provided guarantees for Mutexes that model the ReaderWriterMutex requirement": [[837, "id1"]], "SuspendFunc": [[838, "suspendfunc"]], "oneTBB Auxiliary Interfaces": [[839, "onetbb-auxiliary-interfaces"]], "oneTBB Deprecated Interfaces": [[840, "onetbb-deprecated-interfaces"]], "oneTBB": [[842, "onetbb"]], "oneTBB Interfaces": [[843, "onetbb-interfaces"]], "Notational Conventions": [[844, "notational-conventions"]], "Task Scheduler": [[845, "task-scheduler"]], "Scheduling controls": [[845, "scheduling-controls"]], "Task Group": [[845, "task-group"]], "Task Arena": [[845, "task-arena"]], "Helper types": [[845, "helper-types"]], "attach tag type": [[846, "attach-tag-type"]], "global_control": [[847, "global-control"]], "Resumable tasks": [[848, "resumable-tasks"]], "task_group_context": [[849, "task-group-context"]], "task_scheduler_handle": [[850, "task-scheduler-handle"]], "task_arena": [[851, "task-arena"]], "task_scheduler_observer": [[852, "task-scheduler-observer"]], "this_task_arena": [[853, "this-task-arena"]], "task_group": [[854, "task-group"]], "task_group_status": [[855, "task-group-status"]], "Member constants": [[855, "member-constants"]], "task_handle": [[856, "task-handle"]], "Thread Local Storage": [[857, "thread-local-storage"]], "combinable": [[858, "combinable"]], "enumerable_thread_specific": [[859, "enumerable-thread-specific"]], "Non-member types and constants": [[859, "non-member-types-and-constants"]], "Combining": [[860, "combining"]], "Iteration": [[862, "iteration"]], "flattened2d": [[866, "flattened2d"]], "Thread Safety": [[867, "thread-safety"]], "Timing": [[868, "timing"]], "Syntax": [[868, "syntax"]], "Classes": [[868, "classes"]], "tick_count class": [[869, "tick-count-class"]], "tick_count::interval_t class": [[869, "tick-count-interval-t-class"]], "oneAPI Specification": [[870, "oneapi-specification"]], "Target Audience": [[871, "target-audience"]], "Goals of the Specification": [[871, "goals-of-the-specification"]], "Contribution Guidelines": [[871, "contribution-guidelines"]], "Legal Notices and Disclaimers": [[872, "legal-notices-and-disclaimers"]]}, "indexentries": {"oneapi::dal::kmeans::descriptor (c++ class)": [[18, "_CPPv4I000EN6oneapi3dal6kmeans10descriptorE"]], "oneapi::dal::kmeans::descriptor::accuracy_threshold (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans10descriptor18accuracy_thresholdE"]], "oneapi::dal::kmeans::descriptor::cluster_count (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans10descriptor13cluster_countE"]], "oneapi::dal::kmeans::descriptor::descriptor (c++ function)": [[18, "_CPPv4N6oneapi3dal6kmeans10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans::descriptor::max_iteration_count (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans10descriptor19max_iteration_countE"]], "oneapi::dal::kmeans::infer (c++ function)": [[18, "_CPPv4I000EN6oneapi3dal6kmeans5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::kmeans::infer_input (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal6kmeans11infer_inputE"]], "oneapi::dal::kmeans::infer_input::data (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans11infer_input4dataE"]], "oneapi::dal::kmeans::infer_input::infer_input (c++ function)": [[18, "_CPPv4N6oneapi3dal6kmeans11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::kmeans::infer_input::model (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans11infer_input5modelE"]], "oneapi::dal::kmeans::infer_result (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal6kmeans12infer_resultE"]], "oneapi::dal::kmeans::infer_result::get_labels (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans12infer_result10get_labelsEv"]], "oneapi::dal::kmeans::infer_result::get_objective_function_value (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans12infer_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::infer_result::infer_result (c++ function)": [[18, "_CPPv4N6oneapi3dal6kmeans12infer_result12infer_resultEv"]], "oneapi::dal::kmeans::method::by_default (c++ type)": [[18, "_CPPv4N6oneapi3dal6kmeans6method10by_defaultE"]], "oneapi::dal::kmeans::method::lloyd (c++ struct)": [[18, "_CPPv4N6oneapi3dal6kmeans6method5lloydE"]], "oneapi::dal::kmeans::model (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal6kmeans5modelE"]], "oneapi::dal::kmeans::model::get_centroids (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans5model13get_centroidsEv"]], "oneapi::dal::kmeans::model::get_cluster_count (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans5model17get_cluster_countEv"]], "oneapi::dal::kmeans::model::model (c++ function)": [[18, "_CPPv4N6oneapi3dal6kmeans5model5modelEv"]], "oneapi::dal::kmeans::task::by_default (c++ type)": [[18, "_CPPv4N6oneapi3dal6kmeans4task10by_defaultE"]], "oneapi::dal::kmeans::task::clustering (c++ struct)": [[18, "_CPPv4N6oneapi3dal6kmeans4task10clusteringE"]], "oneapi::dal::kmeans::train (c++ function)": [[18, "_CPPv4I000EN6oneapi3dal6kmeans5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::kmeans::train_input (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal6kmeans11train_inputE"]], "oneapi::dal::kmeans::train_input::data (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans11train_input4dataE"]], "oneapi::dal::kmeans::train_input::initial_centroids (c++ member)": [[18, "_CPPv4N6oneapi3dal6kmeans11train_input17initial_centroidsE"]], "oneapi::dal::kmeans::train_input::train_input (c++ function)": [[18, "_CPPv4N6oneapi3dal6kmeans11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::kmeans::train_result (c++ class)": [[18, "_CPPv4I0EN6oneapi3dal6kmeans12train_resultE"]], "oneapi::dal::kmeans::train_result::get_iteration_count (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans12train_result19get_iteration_countEv"]], "oneapi::dal::kmeans::train_result::get_labels (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans12train_result10get_labelsEv"]], "oneapi::dal::kmeans::train_result::get_model (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans12train_result9get_modelEv"]], "oneapi::dal::kmeans::train_result::get_objective_function_value (c++ function)": [[18, "_CPPv4NK6oneapi3dal6kmeans12train_result28get_objective_function_valueEv"]], "oneapi::dal::kmeans::train_result::train_result (c++ function)": [[18, "_CPPv4N6oneapi3dal6kmeans12train_result12train_resultEv"]], "oneapi::dal::kmeans_init::compute (c++ function)": [[19, "_CPPv4I000EN6oneapi3dal11kmeans_init7computeE14compute_resultI4TaskERK10descriptorI5Float6Method4TaskERK13compute_inputI4TaskE"]], "oneapi::dal::kmeans_init::compute_input (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal11kmeans_init13compute_inputE"]], "oneapi::dal::kmeans_init::compute_input::compute_input (c++ function)": [[19, "_CPPv4N6oneapi3dal11kmeans_init13compute_input13compute_inputERK5table"]], "oneapi::dal::kmeans_init::compute_input::data (c++ member)": [[19, "_CPPv4N6oneapi3dal11kmeans_init13compute_input4dataE"]], "oneapi::dal::kmeans_init::compute_result (c++ class)": [[19, "_CPPv4I0EN6oneapi3dal11kmeans_init14compute_resultE"]], "oneapi::dal::kmeans_init::compute_result::compute_result (c++ function)": [[19, "_CPPv4N6oneapi3dal11kmeans_init14compute_result14compute_resultEv"]], "oneapi::dal::kmeans_init::compute_result::get_centroids (c++ function)": [[19, "_CPPv4NK6oneapi3dal11kmeans_init14compute_result13get_centroidsEv"]], "oneapi::dal::kmeans_init::descriptor (c++ class)": [[19, "_CPPv4I000EN6oneapi3dal11kmeans_init10descriptorE"]], "oneapi::dal::kmeans_init::descriptor::cluster_count (c++ member)": [[19, "_CPPv4N6oneapi3dal11kmeans_init10descriptor13cluster_countE"]], "oneapi::dal::kmeans_init::descriptor::descriptor (c++ function)": [[19, "_CPPv4N6oneapi3dal11kmeans_init10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::kmeans_init::method::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal11kmeans_init6method10by_defaultE"]], "oneapi::dal::kmeans_init::method::dense (c++ struct)": [[19, "_CPPv4N6oneapi3dal11kmeans_init6method5denseE"]], "oneapi::dal::kmeans_init::task::by_default (c++ type)": [[19, "_CPPv4N6oneapi3dal11kmeans_init4task10by_defaultE"]], "oneapi::dal::kmeans_init::task::init (c++ struct)": [[19, "_CPPv4N6oneapi3dal11kmeans_init4task4initE"]], "oneapi::dal::pca::descriptor (c++ class)": [[21, "_CPPv4I000EN6oneapi3dal3pca10descriptorE"]], "oneapi::dal::pca::descriptor::component_count (c++ member)": [[21, "_CPPv4N6oneapi3dal3pca10descriptor15component_countE"]], "oneapi::dal::pca::descriptor::descriptor (c++ function)": [[21, "_CPPv4N6oneapi3dal3pca10descriptor10descriptorENSt7int64_tE"]], "oneapi::dal::pca::descriptor::deterministic (c++ member)": [[21, "_CPPv4N6oneapi3dal3pca10descriptor13deterministicE"]], "oneapi::dal::pca::infer (c++ function)": [[21, "_CPPv4I000EN6oneapi3dal3pca5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::pca::infer_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3pca11infer_inputE"]], "oneapi::dal::pca::infer_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal3pca11infer_input4dataE"]], "oneapi::dal::pca::infer_input::infer_input (c++ function)": [[21, "_CPPv4N6oneapi3dal3pca11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::pca::infer_input::model (c++ member)": [[21, "_CPPv4N6oneapi3dal3pca11infer_input5modelE"]], "oneapi::dal::pca::infer_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3pca12infer_resultE"]], "oneapi::dal::pca::infer_result::get_transformed_data (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca12infer_result20get_transformed_dataEv"]], "oneapi::dal::pca::infer_result::infer_result (c++ function)": [[21, "_CPPv4N6oneapi3dal3pca12infer_result12infer_resultEv"]], "oneapi::dal::pca::method::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal3pca6method10by_defaultE"]], "oneapi::dal::pca::method::cov (c++ struct)": [[21, "_CPPv4N6oneapi3dal3pca6method3covE"]], "oneapi::dal::pca::method::svd (c++ struct)": [[21, "_CPPv4N6oneapi3dal3pca6method3svdE"]], "oneapi::dal::pca::model (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3pca5modelE"]], "oneapi::dal::pca::model::get_component_count (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca5model19get_component_countEv"]], "oneapi::dal::pca::model::get_eigenvectors (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca5model16get_eigenvectorsEv"]], "oneapi::dal::pca::model::model (c++ function)": [[21, "_CPPv4N6oneapi3dal3pca5model5modelEv"]], "oneapi::dal::pca::task::by_default (c++ type)": [[21, "_CPPv4N6oneapi3dal3pca4task10by_defaultE"]], "oneapi::dal::pca::task::dim_reduction (c++ struct)": [[21, "_CPPv4N6oneapi3dal3pca4task13dim_reductionE"]], "oneapi::dal::pca::train (c++ function)": [[21, "_CPPv4I000EN6oneapi3dal3pca5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::pca::train_input (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3pca11train_inputE"]], "oneapi::dal::pca::train_input::data (c++ member)": [[21, "_CPPv4N6oneapi3dal3pca11train_input4dataE"]], "oneapi::dal::pca::train_input::train_input (c++ function)": [[21, "_CPPv4N6oneapi3dal3pca11train_input11train_inputERK5table"]], "oneapi::dal::pca::train_result (c++ class)": [[21, "_CPPv4I0EN6oneapi3dal3pca12train_resultE"]], "oneapi::dal::pca::train_result::get_eigenvalues (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca12train_result15get_eigenvaluesEv"]], "oneapi::dal::pca::train_result::get_eigenvectors (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca12train_result16get_eigenvectorsEv"]], "oneapi::dal::pca::train_result::get_means (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca12train_result9get_meansEv"]], "oneapi::dal::pca::train_result::get_model (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca12train_result9get_modelEv"]], "oneapi::dal::pca::train_result::get_variances (c++ function)": [[21, "_CPPv4NK6oneapi3dal3pca12train_result13get_variancesEv"]], "oneapi::dal::pca::train_result::train_result (c++ function)": [[21, "_CPPv4N6oneapi3dal3pca12train_result12train_resultEv"]], "oneapi::dal::knn::descriptor (c++ class)": [[24, "_CPPv4I000EN6oneapi3dal3knn10descriptorE"]], "oneapi::dal::knn::descriptor::class_count (c++ member)": [[24, "_CPPv4N6oneapi3dal3knn10descriptor11class_countE"]], "oneapi::dal::knn::descriptor::descriptor (c++ function)": [[24, "_CPPv4N6oneapi3dal3knn10descriptor10descriptorENSt7int64_tENSt7int64_tE"]], "oneapi::dal::knn::descriptor::neighbor_count (c++ member)": [[24, "_CPPv4N6oneapi3dal3knn10descriptor14neighbor_countE"]], "oneapi::dal::knn::infer (c++ function)": [[24, "_CPPv4I000EN6oneapi3dal3knn5inferE12infer_resultI4TaskERK10descriptorI5Float6Method4TaskERK11infer_inputI4TaskE"]], "oneapi::dal::knn::infer_input (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal3knn11infer_inputE"]], "oneapi::dal::knn::infer_input::data (c++ member)": [[24, "_CPPv4N6oneapi3dal3knn11infer_input4dataE"]], "oneapi::dal::knn::infer_input::infer_input (c++ function)": [[24, "_CPPv4N6oneapi3dal3knn11infer_input11infer_inputERK5modelI4TaskERK5table"]], "oneapi::dal::knn::infer_input::model (c++ member)": [[24, "_CPPv4N6oneapi3dal3knn11infer_input5modelE"]], "oneapi::dal::knn::infer_result (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal3knn12infer_resultE"]], "oneapi::dal::knn::infer_result::get_labels (c++ function)": [[24, "_CPPv4NK6oneapi3dal3knn12infer_result10get_labelsEv"]], "oneapi::dal::knn::infer_result::infer_result (c++ function)": [[24, "_CPPv4N6oneapi3dal3knn12infer_result12infer_resultEv"]], "oneapi::dal::knn::method::bruteforce (c++ struct)": [[24, "_CPPv4N6oneapi3dal3knn6method10bruteforceE"]], "oneapi::dal::knn::method::by_default (c++ type)": [[24, "_CPPv4N6oneapi3dal3knn6method10by_defaultE"]], "oneapi::dal::knn::method::kd_tree (c++ struct)": [[24, "_CPPv4N6oneapi3dal3knn6method7kd_treeE"]], "oneapi::dal::knn::model (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal3knn5modelE"]], "oneapi::dal::knn::model::model (c++ function)": [[24, "_CPPv4N6oneapi3dal3knn5model5modelEv"]], "oneapi::dal::knn::task::by_default (c++ type)": [[24, "_CPPv4N6oneapi3dal3knn4task10by_defaultE"]], "oneapi::dal::knn::task::classification (c++ struct)": [[24, "_CPPv4N6oneapi3dal3knn4task14classificationE"]], "oneapi::dal::knn::train (c++ function)": [[24, "_CPPv4I000EN6oneapi3dal3knn5trainE12train_resultI4TaskERK10descriptorI5Float6Method4TaskERK11train_inputI4TaskE"]], "oneapi::dal::knn::train_input (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal3knn11train_inputE"]], "oneapi::dal::knn::train_input::data (c++ member)": [[24, "_CPPv4N6oneapi3dal3knn11train_input4dataE"]], "oneapi::dal::knn::train_input::labels (c++ member)": [[24, "_CPPv4N6oneapi3dal3knn11train_input6labelsE"]], "oneapi::dal::knn::train_input::train_input (c++ function)": [[24, "_CPPv4N6oneapi3dal3knn11train_input11train_inputERK5tableRK5table"]], "oneapi::dal::knn::train_result (c++ class)": [[24, "_CPPv4I0EN6oneapi3dal3knn12train_resultE"]], "oneapi::dal::knn::train_result::get_model (c++ function)": [[24, "_CPPv4NK6oneapi3dal3knn12train_result9get_modelEv"]], "oneapi::dal::knn::train_result::train_result (c++ function)": [[24, "_CPPv4N6oneapi3dal3knn12train_result12train_resultEv"]], "oneapi::dal::data_type (c++ enum)": [[28, "_CPPv4N6oneapi3dal9data_typeE"]], "oneapi::dal::range (c++ struct)": [[28, "_CPPv4N6oneapi3dal5rangeE"]], "oneapi::dal::range::get_element_count (c++ function)": [[28, "_CPPv4NK6oneapi3dal5range17get_element_countENSt7int64_tE"]], "oneapi::dal::range::range (c++ function)": [[28, "_CPPv4N6oneapi3dal5range5rangeENSt7int64_tENSt7int64_tE"]], "oneapi::dal::column_accessor (c++ class)": [[33, "_CPPv4I0EN6oneapi3dal15column_accessorE"]], "oneapi::dal::column_accessor::column_accessor (c++ function)": [[33, "_CPPv4N6oneapi3dal15column_accessor15column_accessorERK5table"]], "oneapi::dal::column_accessor::pull (c++ function)": [[33, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueENSt7int64_tERK5rangeRKN4sycl3usm5allocE"], [33, "_CPPv4NK6oneapi3dal15column_accessor4pullERN4sycl5queueER5arrayI6data_tENSt7int64_tERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor (c++ class)": [[34, "_CPPv4I0EN6oneapi3dal12row_accessorE"]], "oneapi::dal::row_accessor::pull (c++ function)": [[34, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueER5arrayI6data_tERK5rangeRKN4sycl3usm5allocE"], [34, "_CPPv4NK6oneapi3dal12row_accessor4pullERN4sycl5queueERK5rangeRKN4sycl3usm5allocE"]], "oneapi::dal::row_accessor::row_accessor (c++ function)": [[34, "_CPPv4N6oneapi3dal12row_accessor12row_accessorERK5table"]], "oneapi::dal::array (c++ class)": [[36, "_CPPv4I0EN6oneapi3dal5arrayE"]], "oneapi::dal::array::array (c++ function)": [[36, "_CPPv4I00EN6oneapi3dal5array5arrayERK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [36, "_CPPv4I00EN6oneapi3dal5array5arrayERKN4sycl5queueEP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [36, "_CPPv4N6oneapi3dal5array5arrayERK5arrayI4DataE"], [36, "_CPPv4N6oneapi3dal5array5arrayERR5arrayI4DataE"], [36, "_CPPv4N6oneapi3dal5array5arrayEv"]], "oneapi::dal::array::empty (c++ function)": [[36, "_CPPv4N6oneapi3dal5array5emptyERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::array::full (c++ function)": [[36, "_CPPv4I0EN6oneapi3dal5array4fullE5arrayI4DataERN4sycl5queueENSt7int64_tERR7ElementRKN4sycl3usm5allocE"]], "oneapi::dal::array::get_count (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array9get_countEv"]], "oneapi::dal::array::get_data (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array8get_dataEv"]], "oneapi::dal::array::get_mutable_data (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array16get_mutable_dataEv"]], "oneapi::dal::array::get_size (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array8get_sizeEv"]], "oneapi::dal::array::has_mutable_data (c++ function)": [[36, "_CPPv4NK6oneapi3dal5array16has_mutable_dataEv"]], "oneapi::dal::array::need_mutable_data (c++ function)": [[36, "_CPPv4N6oneapi3dal5array17need_mutable_dataERN4sycl5queueERKN4sycl3usm5allocE"]], "oneapi::dal::array::operator= (c++ function)": [[36, "_CPPv4N6oneapi3dal5arrayaSERK5arrayI4DataE"], [36, "_CPPv4N6oneapi3dal5arrayaSERR5arrayI4DataE"]], "oneapi::dal::array::operator[] (c++ function)": [[36, "_CPPv4NK6oneapi3dal5arrayixENSt7int64_tE"]], "oneapi::dal::array::reset (c++ function)": [[36, "_CPPv4I00EN6oneapi3dal5array5resetEvP7ExtDataNSt7int64_tERR7DeleterRKNSt6vectorIN4sycl5eventEEE"], [36, "_CPPv4I00EN6oneapi3dal5array5resetEvRK5arrayI7RefDataEP7ExtDataNSt7int64_tE"], [36, "_CPPv4N6oneapi3dal5array5resetERKN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"], [36, "_CPPv4N6oneapi3dal5array5resetEv"]], "oneapi::dal::array::wrap (c++ function)": [[36, "_CPPv4I0EN6oneapi3dal5array4wrapE5arrayI4DataEP7ExtDataNSt7int64_tERKNSt6vectorIN4sycl5eventEEE"]], "oneapi::dal::array::zeros (c++ function)": [[36, "_CPPv4N6oneapi3dal5array5zerosERN4sycl5queueENSt7int64_tERKN4sycl3usm5allocE"]], "oneapi::dal::csv::data_source (c++ class)": [[37, "_CPPv4N6oneapi3dal3csv11data_sourceE"]], "oneapi::dal::csv::data_source::data_source (c++ function)": [[37, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceEPKcc12read_options"], [37, "_CPPv4N6oneapi3dal3csv11data_source11data_sourceERKNSt6stringEc12read_options"]], "oneapi::dal::csv::data_source::delimiter (c++ member)": [[37, "_CPPv4N6oneapi3dal3csv11data_source9delimiterE"]], "oneapi::dal::csv::data_source::file_name (c++ member)": [[37, "_CPPv4N6oneapi3dal3csv11data_source9file_nameE"]], "oneapi::dal::csv::data_source::options (c++ member)": [[37, "_CPPv4N6oneapi3dal3csv11data_source7optionsE"]], "oneapi::dal::csv::read_args (c++ class)": [[37, "_CPPv4I0EN6oneapi3dal3csv9read_argsE"]], "oneapi::dal::csv::read_args::read_args (c++ function)": [[37, "_CPPv4N6oneapi3dal3csv9read_args9read_argsEv"]], "oneapi::dal::read (c++ function)": [[37, "_CPPv4I00EN6oneapi3dal4readE6ObjectRK10DataSource"]], "oneapi::dal::homogen_table (c++ class)": [[40, "_CPPv4N6oneapi3dal13homogen_tableE"]], "oneapi::dal::homogen_table::get_data (c++ function)": [[40, "_CPPv4I0ENK6oneapi3dal13homogen_table8get_dataEPK4Datav"], [40, "_CPPv4NK6oneapi3dal13homogen_table8get_dataEv"]], "oneapi::dal::homogen_table::get_kind (c++ function)": [[40, "_CPPv4NK6oneapi3dal13homogen_table8get_kindEv"]], "oneapi::dal::homogen_table::homogen_table (c++ function)": [[40, "_CPPv4I00EN6oneapi3dal13homogen_table13homogen_tableERKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERR12ConstDeleterRKN4sycl12vector_classIN4sycl5eventEEE11data_layout"], [40, "_CPPv4N6oneapi3dal13homogen_table13homogen_tableEv"]], "oneapi::dal::homogen_table::kind (c++ function)": [[40, "_CPPv4N6oneapi3dal13homogen_table4kindEv"]], "oneapi::dal::homogen_table::wrap (c++ function)": [[40, "_CPPv4I0EN6oneapi3dal13homogen_table4wrapE13homogen_tableRKN4sycl5queueEPK4DataNSt7int64_tENSt7int64_tERKN4sycl12vector_classIN4sycl5eventEEE11data_layout"]], "oneapi::dal::data_layout (c++ enum)": [[41, "_CPPv4N6oneapi3dal11data_layoutE"]], "oneapi::dal::feature_type (c++ enum)": [[41, "_CPPv4N6oneapi3dal12feature_typeE"]], "oneapi::dal::table (c++ class)": [[41, "_CPPv4N6oneapi3dal5tableE"]], "oneapi::dal::table::get_column_count (c++ function)": [[41, "_CPPv4NK6oneapi3dal5table16get_column_countEv"]], "oneapi::dal::table::get_data_layout (c++ function)": [[41, "_CPPv4NK6oneapi3dal5table15get_data_layoutEv"]], "oneapi::dal::table::get_kind (c++ function)": [[41, "_CPPv4NK6oneapi3dal5table8get_kindEv"]], "oneapi::dal::table::get_metadata (c++ function)": [[41, "_CPPv4NK6oneapi3dal5table12get_metadataEv"]], "oneapi::dal::table::get_row_count (c++ function)": [[41, "_CPPv4NK6oneapi3dal5table13get_row_countEv"]], "oneapi::dal::table::has_data (c++ function)": [[41, "_CPPv4NK6oneapi3dal5table8has_dataEv"]], "oneapi::dal::table::operator= (c++ function)": [[41, "_CPPv4N6oneapi3dal5tableaSERK5table"], [41, "_CPPv4N6oneapi3dal5tableaSERR5table"]], "oneapi::dal::table::table (c++ function)": [[41, "_CPPv4N6oneapi3dal5table5tableERK5table"], [41, "_CPPv4N6oneapi3dal5table5tableERR5table"], [41, "_CPPv4N6oneapi3dal5table5tableEv"]], "oneapi::dal::table_metadata (c++ class)": [[41, "_CPPv4N6oneapi3dal14table_metadataE"]], "oneapi::dal::table_metadata::get_data_type (c++ function)": [[41, "_CPPv4NK6oneapi3dal14table_metadata13get_data_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::get_feature_count (c++ function)": [[41, "_CPPv4NK6oneapi3dal14table_metadata17get_feature_countEv"]], "oneapi::dal::table_metadata::get_feature_type (c++ function)": [[41, "_CPPv4NK6oneapi3dal14table_metadata16get_feature_typeENSt7int64_tE"]], "oneapi::dal::table_metadata::table_metadata (c++ function)": [[41, "_CPPv4N6oneapi3dal14table_metadata14table_metadataERK5arrayI9data_typeERK5arrayI12feature_typeE"], [41, "_CPPv4N6oneapi3dal14table_metadata14table_metadataEv"]], "api": [[42, "term-API"]], "accessor": [[42, "term-Accessor"]], "batch mode": [[42, "term-Batch-mode"]], "builder": [[42, "term-Builder"]], "csv file": [[42, "term-CSV-file"]], "categorical feature": [[42, "term-Categorical-feature"]], "classification": [[42, "term-Classification"]], "clustering": [[42, "term-Clustering"]], "contiguous data": [[42, "term-Contiguous-data"]], "continuous feature": [[42, "term-Continuous-feature"]], "dpc++": [[42, "term-DPC"]], "data format": [[42, "term-Data-format"]], "data layout": [[42, "term-Data-layout"]], "data type": [[42, "term-Data-type"]], "dataset": [[42, "term-Dataset"]], "dimensionality reduction": [[42, "term-Dimensionality-reduction"]], "feature": [[42, "term-Feature"]], "feature vector": [[42, "term-Feature-vector"]], "flat data": [[42, "term-Flat-data"]], "getter": [[42, "term-Getter"]], "heterogeneous data": [[42, "term-Heterogeneous-data"]], "homogeneous data": [[42, "term-Homogeneous-data"]], "host/device": [[42, "term-Host-Device"]], "immutability": [[42, "term-Immutability"]], "inference": [[42, "term-Inference"]], "inference set": [[42, "term-Inference-set"]], "interval feature": [[42, "term-Interval-feature"]], "jit": [[42, "term-JIT"]], "kernel": [[42, "term-Kernel"]], "label": [[42, "term-Label"]], "metadata": [[42, "term-Metadata"]], "model": [[42, "term-Model"]], "nominal feature": [[42, "term-Nominal-feature"]], "observation": [[42, "term-Observation"]], "online mode": [[42, "term-Online-mode"]], "ordinal feature": [[42, "term-Ordinal-feature"]], "outlier": [[42, "term-Outlier"]], "ratio feature": [[42, "term-Ratio-feature"]], "reference-counted object": [[42, "term-Reference-counted-object"]], "regression": [[42, "term-Regression"]], "response": [[42, "term-Response"]], "spir-v": [[42, "term-SPIR-V"]], "sycl": [[42, "term-SYCL"]], "setter": [[42, "term-Setter"]], "supervised learning": [[42, "term-Supervised-learning"]], "table": [[42, "term-Table"]], "training": [[42, "term-Training"]], "training set": [[42, "term-Training-set"]], "unsupervised learning": [[42, "term-Unsupervised-learning"]], "workload": [[42, "term-Workload"]], "dnnl::memory::data_type (c++ enum)": [[54, "_CPPv4N4dnnl6memory9data_typeE"]], "dnnl::memory::data_type::bf16 (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type4bf16E"]], "dnnl::memory::data_type::f16 (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type3f16E"]], "dnnl::memory::data_type::f32 (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type3f32E"]], "dnnl::memory::data_type::s32 (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type3s32E"]], "dnnl::memory::data_type::s8 (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type2s8E"]], "dnnl::memory::data_type::u8 (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type2u8E"]], "dnnl::memory::data_type::undef (c++ enumerator)": [[54, "_CPPv4N4dnnl6memory9data_type5undefE"]], "dnnl::memory::format_tag (c++ enum)": [[57, "_CPPv4N4dnnl6memory10format_tagE"]], "dnnl::memory::format_tag::a (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag1aE"]], "dnnl::memory::format_tag::ab (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2abE"]], "dnnl::memory::format_tag::abc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3abcE"]], "dnnl::memory::format_tag::abcd (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4abcdE"]], "dnnl::memory::format_tag::abcde (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5abcdeE"]], "dnnl::memory::format_tag::abcdef (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag6abcdefE"]], "dnnl::memory::format_tag::abdc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4abdcE"]], "dnnl::memory::format_tag::abdec (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5abdecE"]], "dnnl::memory::format_tag::acb (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3acbE"]], "dnnl::memory::format_tag::acbde (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5acbdeE"]], "dnnl::memory::format_tag::acbdef (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag6acbdefE"]], "dnnl::memory::format_tag::acdb (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4acdbE"]], "dnnl::memory::format_tag::acdeb (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5acdebE"]], "dnnl::memory::format_tag::any (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3anyE"]], "dnnl::memory::format_tag::ba (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2baE"]], "dnnl::memory::format_tag::bac (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3bacE"]], "dnnl::memory::format_tag::bacd (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4bacdE"]], "dnnl::memory::format_tag::bacde (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5bacdeE"]], "dnnl::memory::format_tag::bca (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3bcaE"]], "dnnl::memory::format_tag::bcda (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4bcdaE"]], "dnnl::memory::format_tag::bcdea (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5bcdeaE"]], "dnnl::memory::format_tag::cba (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3cbaE"]], "dnnl::memory::format_tag::cdba (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4cdbaE"]], "dnnl::memory::format_tag::cdeba (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5cdebaE"]], "dnnl::memory::format_tag::chwn (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4chwnE"]], "dnnl::memory::format_tag::cn (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2cnE"]], "dnnl::memory::format_tag::dcab (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4dcabE"]], "dnnl::memory::format_tag::decab (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5decabE"]], "dnnl::memory::format_tag::defcab (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag6defcabE"]], "dnnl::memory::format_tag::dhwigo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag6dhwigoE"]], "dnnl::memory::format_tag::dhwio (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5dhwioE"]], "dnnl::memory::format_tag::giodhw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag6giodhwE"]], "dnnl::memory::format_tag::giohw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5giohwE"]], "dnnl::memory::format_tag::goidhw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag6goidhwE"]], "dnnl::memory::format_tag::goihw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5goihwE"]], "dnnl::memory::format_tag::goiw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4goiwE"]], "dnnl::memory::format_tag::hwigo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5hwigoE"]], "dnnl::memory::format_tag::hwio (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4hwioE"]], "dnnl::memory::format_tag::idhwo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5idhwoE"]], "dnnl::memory::format_tag::ihwo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4ihwoE"]], "dnnl::memory::format_tag::io (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2ioE"]], "dnnl::memory::format_tag::iodhw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5iodhwE"]], "dnnl::memory::format_tag::iohw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4iohwE"]], "dnnl::memory::format_tag::iwo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3iwoE"]], "dnnl::memory::format_tag::ldgo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4ldgoE"]], "dnnl::memory::format_tag::ldgoi (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5ldgoiE"]], "dnnl::memory::format_tag::ldigo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5ldigoE"]], "dnnl::memory::format_tag::ldio (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4ldioE"]], "dnnl::memory::format_tag::ldnc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4ldncE"]], "dnnl::memory::format_tag::ldoi (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4ldoiE"]], "dnnl::memory::format_tag::nc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2ncE"]], "dnnl::memory::format_tag::ncdhw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5ncdhwE"]], "dnnl::memory::format_tag::nchw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4nchwE"]], "dnnl::memory::format_tag::ncw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3ncwE"]], "dnnl::memory::format_tag::ndhwc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5ndhwcE"]], "dnnl::memory::format_tag::nhwc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4nhwcE"]], "dnnl::memory::format_tag::nt (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2ntE"]], "dnnl::memory::format_tag::ntc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3ntcE"]], "dnnl::memory::format_tag::nwc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3nwcE"]], "dnnl::memory::format_tag::odhwi (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5odhwiE"]], "dnnl::memory::format_tag::ohwi (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4ohwiE"]], "dnnl::memory::format_tag::oi (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2oiE"]], "dnnl::memory::format_tag::oidhw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5oidhwE"]], "dnnl::memory::format_tag::oihw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4oihwE"]], "dnnl::memory::format_tag::oiw (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3oiwE"]], "dnnl::memory::format_tag::owi (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3owiE"]], "dnnl::memory::format_tag::tn (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag2tnE"]], "dnnl::memory::format_tag::tnc (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3tncE"]], "dnnl::memory::format_tag::undef (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag5undefE"]], "dnnl::memory::format_tag::wigo (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag4wigoE"]], "dnnl::memory::format_tag::wio (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag3wioE"]], "dnnl::memory::format_tag::x (c++ enumerator)": [[57, "_CPPv4N4dnnl6memory10format_tag1xE"]], "dnnl::memory::dim (c++ type)": [[58, "_CPPv4N4dnnl6memory3dimE"]], "dnnl::memory::dims (c++ type)": [[58, "_CPPv4N4dnnl6memory4dimsE"]], "dnnl_memory_allocate (c macro)": [[59, "c.DNNL_MEMORY_ALLOCATE"]], "dnnl_memory_none (c macro)": [[59, "c.DNNL_MEMORY_NONE"]], "dnnl::memory (c++ struct)": [[59, "_CPPv4N4dnnl6memoryE"]], "dnnl::memory::desc (c++ struct)": [[59, "_CPPv4N4dnnl6memory4descE"]], "dnnl::memory::desc::data_type (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc9data_typeEv"]], "dnnl::memory::desc::desc (c++ function)": [[59, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_type10format_tagb"], [59, "_CPPv4N4dnnl6memory4desc4descERK4dims9data_typeRK4dimsb"], [59, "_CPPv4N4dnnl6memory4desc4descEv"]], "dnnl::memory::desc::dims (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc4dimsEv"]], "dnnl::memory::desc::get_size (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc8get_sizeEv"]], "dnnl::memory::desc::is_zero (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc7is_zeroEv"]], "dnnl::memory::desc::operator!= (c++ function)": [[59, "_CPPv4NK4dnnl6memory4descneERK4desc"]], "dnnl::memory::desc::operator== (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desceqERK4desc"]], "dnnl::memory::desc::permute_axes (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc12permute_axesERKNSt6vectorIiEEb"]], "dnnl::memory::desc::reshape (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc7reshapeERK4dimsb"]], "dnnl::memory::desc::submemory_desc (c++ function)": [[59, "_CPPv4NK4dnnl6memory4desc14submemory_descERK4dimsRK4dimsb"]], "dnnl::memory::get_data_handle (c++ function)": [[59, "_CPPv4NK4dnnl6memory15get_data_handleEv"]], "dnnl::memory::get_desc (c++ function)": [[59, "_CPPv4NK4dnnl6memory8get_descEv"]], "dnnl::memory::get_engine (c++ function)": [[59, "_CPPv4NK4dnnl6memory10get_engineEv"]], "dnnl::memory::map_data (c++ function)": [[59, "_CPPv4I0ENK4dnnl6memory8map_dataEP1Tv"]], "dnnl::memory::memory (c++ function)": [[59, "_CPPv4N4dnnl6memory6memoryERK4descRK6engine"], [59, "_CPPv4N4dnnl6memory6memoryERK4descRK6enginePv"], [59, "_CPPv4N4dnnl6memory6memoryEv"]], "dnnl::memory::set_data_handle (c++ function)": [[59, "_CPPv4NK4dnnl6memory15set_data_handleEPv"], [59, "_CPPv4NK4dnnl6memory15set_data_handleEPvRK6stream"]], "dnnl::memory::unmap_data (c++ function)": [[59, "_CPPv4NK4dnnl6memory10unmap_dataEPv"]], "dnnl::sycl_interop::get_buffer (c++ function)": [[59, "_CPPv4I0_iEN4dnnl12sycl_interop10get_bufferEN2cl4sycl6bufferI1T5ndimsEERK6memory"]], "dnnl::sycl_interop::get_memory_kind (c++ function)": [[59, "_CPPv4N4dnnl12sycl_interop15get_memory_kindERK6memory"]], "dnnl::sycl_interop::make_memory (c++ function)": [[59, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6engineN2cl4sycl6bufferI1T5ndimsEE"], [59, "_CPPv4I0_iEN4dnnl12sycl_interop11make_memoryE6memoryRKN6memory4descERK6streamN2cl4sycl6bufferI1T5ndimsEE"], [59, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6engine11memory_kindPv"], [59, "_CPPv4N4dnnl12sycl_interop11make_memoryERKN6memory4descERK6stream11memory_kindPv"]], "dnnl::sycl_interop::memory_kind (c++ enum)": [[59, "_CPPv4N4dnnl12sycl_interop11memory_kindE"]], "dnnl::sycl_interop::memory_kind::buffer (c++ enumerator)": [[59, "_CPPv4N4dnnl12sycl_interop11memory_kind6bufferE"]], "dnnl::sycl_interop::memory_kind::usm (c++ enumerator)": [[59, "_CPPv4N4dnnl12sycl_interop11memory_kind3usmE"]], "dnnl::sycl_interop::set_buffer (c++ function)": [[59, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEE"], [59, "_CPPv4I0_iEN4dnnl12sycl_interop10set_bufferEvR6memoryN2cl4sycl6bufferI1T5ndimsEER6stream"]], "dnnl::engine (c++ struct)": [[60, "_CPPv4N4dnnl6engineE"]], "dnnl::engine::engine (c++ function)": [[60, "_CPPv4N4dnnl6engine6engineE4kind6size_t"], [60, "_CPPv4N4dnnl6engine6engineEv"]], "dnnl::engine::get_count (c++ function)": [[60, "_CPPv4N4dnnl6engine9get_countE4kind"]], "dnnl::engine::get_kind (c++ function)": [[60, "_CPPv4NK4dnnl6engine8get_kindEv"]], "dnnl::engine::kind (c++ enum)": [[60, "_CPPv4N4dnnl6engine4kindE"]], "dnnl::engine::kind::any (c++ enumerator)": [[60, "_CPPv4N4dnnl6engine4kind3anyE"]], "dnnl::engine::kind::cpu (c++ enumerator)": [[60, "_CPPv4N4dnnl6engine4kind3cpuE"]], "dnnl::engine::kind::gpu (c++ enumerator)": [[60, "_CPPv4N4dnnl6engine4kind3gpuE"]], "dnnl::stream (c++ struct)": [[60, "_CPPv4N4dnnl6streamE"]], "dnnl::stream::flags (c++ enum)": [[60, "_CPPv4N4dnnl6stream5flagsE"]], "dnnl::stream::flags::default_flags (c++ enumerator)": [[60, "_CPPv4N4dnnl6stream5flags13default_flagsE"]], "dnnl::stream::flags::in_order (c++ enumerator)": [[60, "_CPPv4N4dnnl6stream5flags8in_orderE"]], "dnnl::stream::flags::out_of_order (c++ enumerator)": [[60, "_CPPv4N4dnnl6stream5flags12out_of_orderE"]], "dnnl::stream::get_engine (c++ function)": [[60, "_CPPv4NK4dnnl6stream10get_engineEv"]], "dnnl::stream::stream (c++ function)": [[60, "_CPPv4N4dnnl6stream6streamERK6engine5flags"], [60, "_CPPv4N4dnnl6stream6streamEv"]], "dnnl::stream::wait (c++ function)": [[60, "_CPPv4N4dnnl6stream4waitEv"]], "dnnl::sycl_interop::get_context (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop11get_contextERK6engine"]], "dnnl::sycl_interop::get_device (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop10get_deviceERK6engine"]], "dnnl::sycl_interop::get_queue (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop9get_queueERK6stream"]], "dnnl::sycl_interop::make_engine (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop11make_engineERKN2cl4sycl6deviceERKN2cl4sycl7contextE"]], "dnnl::sycl_interop::make_stream (c++ function)": [[60, "_CPPv4N4dnnl12sycl_interop11make_streamERK6engineRN2cl4sycl5queueE"]], "dnnl_graph_unknown_dim (c macro)": [[62, "c.DNNL_GRAPH_UNKNOWN_DIM"]], "dnnl_graph_unknown_ndims (c macro)": [[62, "c.DNNL_GRAPH_UNKNOWN_NDIMS"]], "dnnl::graph::graph (c++ struct)": [[62, "_CPPv4N4dnnl5graph5graphE"]], "dnnl::graph::graph::add_op (c++ function)": [[62, "_CPPv4N4dnnl5graph5graph6add_opERK2opb"]], "dnnl::graph::graph::finalize (c++ function)": [[62, "_CPPv4N4dnnl5graph5graph8finalizeEv"]], "dnnl::graph::graph::get_partitions (c++ function)": [[62, "_CPPv4N4dnnl5graph5graph14get_partitionsEN9partition6policyE"]], "dnnl::graph::graph::graph (c++ function)": [[62, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindE"], [62, "_CPPv4N4dnnl5graph5graph5graphEN4dnnl6engine4kindEN4dnnl11fpmath_modeE"]], "dnnl::graph::graph::is_finalized (c++ function)": [[62, "_CPPv4NK4dnnl5graph5graph12is_finalizedEv"]], "dnnl::graph::logical_tensor (c++ struct)": [[62, "_CPPv4N4dnnl5graph14logical_tensorE"]], "dnnl::graph::logical_tensor::data_type (c++ enum)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_typeE"]], "dnnl::graph::logical_tensor::data_type::bf16 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type4bf16E"]], "dnnl::graph::logical_tensor::data_type::boolean (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type7booleanE"]], "dnnl::graph::logical_tensor::data_type::f16 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f16E"]], "dnnl::graph::logical_tensor::data_type::f32 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type3f32E"]], "dnnl::graph::logical_tensor::data_type::s32 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type3s32E"]], "dnnl::graph::logical_tensor::data_type::s8 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type2s8E"]], "dnnl::graph::logical_tensor::data_type::u8 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type2u8E"]], "dnnl::graph::logical_tensor::data_type::undef (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor9data_type5undefE"]], "dnnl::graph::logical_tensor::dim (c++ type)": [[62, "_CPPv4N4dnnl5graph14logical_tensor3dimE"]], "dnnl::graph::logical_tensor::dims (c++ type)": [[62, "_CPPv4N4dnnl5graph14logical_tensor4dimsE"]], "dnnl::graph::logical_tensor::get_data_type (c++ function)": [[62, "_CPPv4N4dnnl5graph14logical_tensor13get_data_typeEv"]], "dnnl::graph::logical_tensor::get_dims (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor8get_dimsEv"]], "dnnl::graph::logical_tensor::get_id (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor6get_idEv"]], "dnnl::graph::logical_tensor::get_layout_id (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor13get_layout_idEv"]], "dnnl::graph::logical_tensor::get_layout_type (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor15get_layout_typeEv"]], "dnnl::graph::logical_tensor::get_mem_size (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor12get_mem_sizeEv"]], "dnnl::graph::logical_tensor::get_property_type (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor17get_property_typeEv"]], "dnnl::graph::logical_tensor::get_strides (c++ function)": [[62, "_CPPv4NK4dnnl5graph14logical_tensor11get_stridesEv"]], "dnnl::graph::logical_tensor::is_equal (c++ function)": [[62, "_CPPv4N4dnnl5graph14logical_tensor8is_equalERK14logical_tensor"]], "dnnl::graph::logical_tensor::layout_type (c++ enum)": [[62, "_CPPv4N4dnnl5graph14logical_tensor11layout_typeE"]], "dnnl::graph::logical_tensor::layout_type::any (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor11layout_type3anyE"]], "dnnl::graph::logical_tensor::layout_type::opaque (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor11layout_type6opaqueE"]], "dnnl::graph::logical_tensor::layout_type::strided (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor11layout_type7stridedE"]], "dnnl::graph::logical_tensor::layout_type::undef (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor11layout_type5undefE"]], "dnnl::graph::logical_tensor::logical_tensor (c++ function)": [[62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type11layout_type"], [62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_type7int32_t11layout_type13property_type"], [62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims11layout_type13property_type"], [62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dims6size_t13property_type"], [62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorE6size_t9data_typeRK4dimsRK4dims13property_type"], [62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorERK14logical_tensor"], [62, "_CPPv4N4dnnl5graph14logical_tensor14logical_tensorEv"]], "dnnl::graph::logical_tensor::operator= (c++ function)": [[62, "_CPPv4N4dnnl5graph14logical_tensoraSERK14logical_tensor"]], "dnnl::graph::logical_tensor::property_type (c++ enum)": [[62, "_CPPv4N4dnnl5graph14logical_tensor13property_typeE"]], "dnnl::graph::logical_tensor::property_type::constant (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor13property_type8constantE"]], "dnnl::graph::logical_tensor::property_type::undef (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor13property_type5undefE"]], "dnnl::graph::logical_tensor::property_type::variable (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph14logical_tensor13property_type8variableE"]], "dnnl::graph::op (c++ struct)": [[62, "_CPPv4N4dnnl5graph2opE"]], "dnnl::graph::op::add_input (c++ function)": [[62, "_CPPv4N4dnnl5graph2op9add_inputERK14logical_tensor"]], "dnnl::graph::op::add_inputs (c++ function)": [[62, "_CPPv4N4dnnl5graph2op10add_inputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::add_output (c++ function)": [[62, "_CPPv4N4dnnl5graph2op10add_outputERK14logical_tensor"]], "dnnl::graph::op::add_outputs (c++ function)": [[62, "_CPPv4N4dnnl5graph2op11add_outputsERKNSt6vectorI14logical_tensorEE"]], "dnnl::graph::op::attr (c++ enum)": [[62, "_CPPv4N4dnnl5graph2op4attrE"]], "dnnl::graph::op::attr::alpha (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr5alphaE"]], "dnnl::graph::op::attr::auto_broadcast (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr14auto_broadcastE"]], "dnnl::graph::op::attr::auto_pad (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr8auto_padE"]], "dnnl::graph::op::attr::axes (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr4axesE"]], "dnnl::graph::op::attr::axis (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr4axisE"]], "dnnl::graph::op::attr::begin_norm_axis (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr15begin_norm_axisE"]], "dnnl::graph::op::attr::beta (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr4betaE"]], "dnnl::graph::op::attr::coordinate_transformation_mode (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr30coordinate_transformation_modeE"]], "dnnl::graph::op::attr::data_format (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr11data_formatE"]], "dnnl::graph::op::attr::dilations (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr9dilationsE"]], "dnnl::graph::op::attr::dst_shape (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr9dst_shapeE"]], "dnnl::graph::op::attr::epsilon (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr7epsilonE"]], "dnnl::graph::op::attr::exclude_pad (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr11exclude_padE"]], "dnnl::graph::op::attr::groups (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr6groupsE"]], "dnnl::graph::op::attr::keep_dims (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr9keep_dimsE"]], "dnnl::graph::op::attr::keep_stats (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr10keep_statsE"]], "dnnl::graph::op::attr::kernel (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr6kernelE"]], "dnnl::graph::op::attr::max (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr3maxE"]], "dnnl::graph::op::attr::min (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr3minE"]], "dnnl::graph::op::attr::mode (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr4modeE"]], "dnnl::graph::op::attr::momentum (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr8momentumE"]], "dnnl::graph::op::attr::order (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr5orderE"]], "dnnl::graph::op::attr::output_padding (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr14output_paddingE"]], "dnnl::graph::op::attr::pads_begin (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr10pads_beginE"]], "dnnl::graph::op::attr::pads_end (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr8pads_endE"]], "dnnl::graph::op::attr::per_channel_broadcast (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr21per_channel_broadcastE"]], "dnnl::graph::op::attr::qtype (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr5qtypeE"]], "dnnl::graph::op::attr::rounding_type (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr13rounding_typeE"]], "dnnl::graph::op::attr::scales (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr6scalesE"]], "dnnl::graph::op::attr::shape (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr5shapeE"]], "dnnl::graph::op::attr::sizes (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr5sizesE"]], "dnnl::graph::op::attr::special_zero (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr12special_zeroE"]], "dnnl::graph::op::attr::src_shape (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr9src_shapeE"]], "dnnl::graph::op::attr::strides (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr7stridesE"]], "dnnl::graph::op::attr::transpose_a (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr11transpose_aE"]], "dnnl::graph::op::attr::transpose_b (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr11transpose_bE"]], "dnnl::graph::op::attr::undef (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr5undefE"]], "dnnl::graph::op::attr::use_affine (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr10use_affineE"]], "dnnl::graph::op::attr::use_dst (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr7use_dstE"]], "dnnl::graph::op::attr::weights_format (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr14weights_formatE"]], "dnnl::graph::op::attr::weights_shape (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr13weights_shapeE"]], "dnnl::graph::op::attr::zps (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4attr3zpsE"]], "dnnl::graph::op::kind (c++ enum)": [[62, "_CPPv4N4dnnl5graph2op4kindE"]], "dnnl::graph::op::kind::abs (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3AbsE"]], "dnnl::graph::op::kind::absbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind11AbsBackwardE"]], "dnnl::graph::op::kind::add (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3AddE"]], "dnnl::graph::op::kind::avgpool (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7AvgPoolE"]], "dnnl::graph::op::kind::avgpoolbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15AvgPoolBackwardE"]], "dnnl::graph::op::kind::batchnormforwardtraining (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind24BatchNormForwardTrainingE"]], "dnnl::graph::op::kind::batchnorminference (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind18BatchNormInferenceE"]], "dnnl::graph::op::kind::batchnormtrainingbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind25BatchNormTrainingBackwardE"]], "dnnl::graph::op::kind::biasadd (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7BiasAddE"]], "dnnl::graph::op::kind::biasaddbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15BiasAddBackwardE"]], "dnnl::graph::op::kind::clamp (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind5ClampE"]], "dnnl::graph::op::kind::clampbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind13ClampBackwardE"]], "dnnl::graph::op::kind::concat (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind6ConcatE"]], "dnnl::graph::op::kind::convtranspose (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind13ConvTransposeE"]], "dnnl::graph::op::kind::convtransposebackwarddata (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind25ConvTransposeBackwardDataE"]], "dnnl::graph::op::kind::convtransposebackwardweights (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind28ConvTransposeBackwardWeightsE"]], "dnnl::graph::op::kind::convolution (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind11ConvolutionE"]], "dnnl::graph::op::kind::convolutionbackwarddata (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind23ConvolutionBackwardDataE"]], "dnnl::graph::op::kind::convolutionbackwardweights (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind26ConvolutionBackwardWeightsE"]], "dnnl::graph::op::kind::dequantize (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind10DequantizeE"]], "dnnl::graph::op::kind::divide (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind6DivideE"]], "dnnl::graph::op::kind::dynamicdequantize (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind17DynamicDequantizeE"]], "dnnl::graph::op::kind::dynamicquantize (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15DynamicQuantizeE"]], "dnnl::graph::op::kind::elu (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3EluE"]], "dnnl::graph::op::kind::elubackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind11EluBackwardE"]], "dnnl::graph::op::kind::end (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3EndE"]], "dnnl::graph::op::kind::exp (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3ExpE"]], "dnnl::graph::op::kind::gelu (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind4GELUE"]], "dnnl::graph::op::kind::gelubackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind12GELUBackwardE"]], "dnnl::graph::op::kind::hardsigmoid (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind11HardSigmoidE"]], "dnnl::graph::op::kind::hardsigmoidbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind19HardSigmoidBackwardE"]], "dnnl::graph::op::kind::hardswish (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind9HardSwishE"]], "dnnl::graph::op::kind::hardswishbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind17HardSwishBackwardE"]], "dnnl::graph::op::kind::interpolate (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind11InterpolateE"]], "dnnl::graph::op::kind::interpolatebackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind19InterpolateBackwardE"]], "dnnl::graph::op::kind::lastsymbol (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind10LastSymbolE"]], "dnnl::graph::op::kind::layernorm (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind9LayerNormE"]], "dnnl::graph::op::kind::layernormbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind17LayerNormBackwardE"]], "dnnl::graph::op::kind::leakyrelu (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind9LeakyReLUE"]], "dnnl::graph::op::kind::log (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3LogE"]], "dnnl::graph::op::kind::logsoftmax (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind10LogSoftmaxE"]], "dnnl::graph::op::kind::logsoftmaxbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind18LogSoftmaxBackwardE"]], "dnnl::graph::op::kind::matmul (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind6MatMulE"]], "dnnl::graph::op::kind::maxpool (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7MaxPoolE"]], "dnnl::graph::op::kind::maxpoolbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15MaxPoolBackwardE"]], "dnnl::graph::op::kind::maximum (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7MaximumE"]], "dnnl::graph::op::kind::minimum (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7MinimumE"]], "dnnl::graph::op::kind::mish (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind4MishE"]], "dnnl::graph::op::kind::mishbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind12MishBackwardE"]], "dnnl::graph::op::kind::multiply (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8MultiplyE"]], "dnnl::graph::op::kind::prelu (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind5PReLUE"]], "dnnl::graph::op::kind::prelubackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind13PReLUBackwardE"]], "dnnl::graph::op::kind::pow (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind3PowE"]], "dnnl::graph::op::kind::quantize (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8QuantizeE"]], "dnnl::graph::op::kind::relu (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind4ReLUE"]], "dnnl::graph::op::kind::relubackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind12ReLUBackwardE"]], "dnnl::graph::op::kind::reciprocal (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind10ReciprocalE"]], "dnnl::graph::op::kind::reducel1 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8ReduceL1E"]], "dnnl::graph::op::kind::reducel2 (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8ReduceL2E"]], "dnnl::graph::op::kind::reducemax (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind9ReduceMaxE"]], "dnnl::graph::op::kind::reducemean (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind10ReduceMeanE"]], "dnnl::graph::op::kind::reducemin (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind9ReduceMinE"]], "dnnl::graph::op::kind::reduceprod (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind10ReduceProdE"]], "dnnl::graph::op::kind::reducesum (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind9ReduceSumE"]], "dnnl::graph::op::kind::reorder (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7ReorderE"]], "dnnl::graph::op::kind::round (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind5RoundE"]], "dnnl::graph::op::kind::select (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind6SelectE"]], "dnnl::graph::op::kind::sigmoid (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7SigmoidE"]], "dnnl::graph::op::kind::sigmoidbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15SigmoidBackwardE"]], "dnnl::graph::op::kind::softmax (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind7SoftMaxE"]], "dnnl::graph::op::kind::softmaxbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15SoftMaxBackwardE"]], "dnnl::graph::op::kind::softplus (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8SoftPlusE"]], "dnnl::graph::op::kind::softplusbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind16SoftPlusBackwardE"]], "dnnl::graph::op::kind::sqrt (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind4SqrtE"]], "dnnl::graph::op::kind::sqrtbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind12SqrtBackwardE"]], "dnnl::graph::op::kind::square (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind6SquareE"]], "dnnl::graph::op::kind::squareddifference (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind17SquaredDifferenceE"]], "dnnl::graph::op::kind::staticreshape (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind13StaticReshapeE"]], "dnnl::graph::op::kind::statictranspose (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind15StaticTransposeE"]], "dnnl::graph::op::kind::subtract (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8SubtractE"]], "dnnl::graph::op::kind::tanh (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind4TanhE"]], "dnnl::graph::op::kind::tanhbackward (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind12TanhBackwardE"]], "dnnl::graph::op::kind::typecast (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8TypeCastE"]], "dnnl::graph::op::kind::wildcard (c++ enumerator)": [[62, "_CPPv4N4dnnl5graph2op4kind8WildcardE"]], "dnnl::graph::op::op (c++ function)": [[62, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6stringE"], [62, "_CPPv4N4dnnl5graph2op2opE6size_t4kindRKNSt6vectorI14logical_tensorEERKNSt6vectorI14logical_tensorEERKNSt6stringE"]], "dnnl::graph::op::set_attr (c++ function)": [[62, "_CPPv4I0EN4dnnl5graph2op8set_attrER2op4attrRK4Type"]], "dnnl::error (c++ struct)": [[150, "_CPPv4N4dnnl5errorE"]], "dnnl::primitive_attr (c++ struct)": [[151, "_CPPv4N4dnnl14primitive_attrE"]], "dnnl::primitive_attr::get_fpmath_mode (c++ function)": [[151, "_CPPv4NK4dnnl14primitive_attr15get_fpmath_modeEv"]], "dnnl::primitive_attr::get_post_ops (c++ function)": [[151, "_CPPv4NK4dnnl14primitive_attr12get_post_opsEv"]], "dnnl::primitive_attr::get_scales_mask (c++ function)": [[151, "_CPPv4NK4dnnl14primitive_attr15get_scales_maskEi"]], "dnnl::primitive_attr::get_scratchpad_mode (c++ function)": [[151, "_CPPv4NK4dnnl14primitive_attr19get_scratchpad_modeEv"]], "dnnl::primitive_attr::primitive_attr (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr14primitive_attrEv"]], "dnnl::primitive_attr::set_fpmath_mode (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr15set_fpmath_modeE11fpmath_mode"]], "dnnl::primitive_attr::set_post_ops (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr12set_post_opsEK8post_ops"]], "dnnl::primitive_attr::set_rnn_data_qparams (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr20set_rnn_data_qparamsEff"]], "dnnl::primitive_attr::set_rnn_weights_qparams (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr23set_rnn_weights_qparamsEiRKNSt6vectorIfEE"]], "dnnl::primitive_attr::set_scales_mask (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr15set_scales_maskEii"]], "dnnl::primitive_attr::set_scratchpad_mode (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr19set_scratchpad_modeE15scratchpad_mode"]], "dnnl::primitive_attr::set_zero_points_mask (c++ function)": [[151, "_CPPv4N4dnnl14primitive_attr20set_zero_points_maskEii"]], "dnnl::scratchpad_mode (c++ enum)": [[151, "_CPPv4N4dnnl15scratchpad_modeE"]], "dnnl::scratchpad_mode::library (c++ enumerator)": [[151, "_CPPv4N4dnnl15scratchpad_mode7libraryE"]], "dnnl::scratchpad_mode::user (c++ enumerator)": [[151, "_CPPv4N4dnnl15scratchpad_mode4userE"]], "dnnl::post_ops (c++ struct)": [[152, "_CPPv4N4dnnl8post_opsE"]], "dnnl::post_ops::append_binary (c++ function)": [[152, "_CPPv4N4dnnl8post_ops13append_binaryE9algorithmRKN6memory4descE"]], "dnnl::post_ops::append_eltwise (c++ function)": [[152, "_CPPv4N4dnnl8post_ops14append_eltwiseE9algorithmff"]], "dnnl::post_ops::append_sum (c++ function)": [[152, "_CPPv4N4dnnl8post_ops10append_sumEN6memory9data_typeE"]], "dnnl::post_ops::get_params_binary (c++ function)": [[152, "_CPPv4NK4dnnl8post_ops17get_params_binaryEiR9algorithmRN6memory4descE"]], "dnnl::post_ops::get_params_eltwise (c++ function)": [[152, "_CPPv4NK4dnnl8post_ops18get_params_eltwiseEiR9algorithmRfRf"]], "dnnl::post_ops::get_params_sum (c++ function)": [[152, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRf"], [152, "_CPPv4NK4dnnl8post_ops14get_params_sumEiRfRN6memory9data_typeE"]], "dnnl::post_ops::kind (c++ function)": [[152, "_CPPv4NK4dnnl8post_ops4kindEi"]], "dnnl::post_ops::len (c++ function)": [[152, "_CPPv4NK4dnnl8post_ops3lenEv"]], "dnnl::post_ops::post_ops (c++ function)": [[152, "_CPPv4N4dnnl8post_ops8post_opsEv"]], "dnnl::batch_normalization_backward (c++ struct)": [[153, "_CPPv4N4dnnl28batch_normalization_backwardE"]], "dnnl::batch_normalization_backward::batch_normalization_backward (c++ function)": [[153, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardERK14primitive_desc"], [153, "_CPPv4N4dnnl28batch_normalization_backward28batch_normalization_backwardEv"]], "dnnl::batch_normalization_backward::primitive_desc (c++ struct)": [[153, "_CPPv4N4dnnl28batch_normalization_backward14primitive_descE"]], "dnnl::batch_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[153, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::dst_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_flags (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_backward::primitive_desc::mean_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[153, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27batch_normalization_forward14primitive_descERK14primitive_attrb"], [153, "_CPPv4N4dnnl28batch_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::src_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::variance_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::weights_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[153, "_CPPv4NK4dnnl28batch_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::batch_normalization_forward (c++ struct)": [[153, "_CPPv4N4dnnl27batch_normalization_forwardE"]], "dnnl::batch_normalization_forward::batch_normalization_forward (c++ function)": [[153, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardERK14primitive_desc"], [153, "_CPPv4N4dnnl27batch_normalization_forward27batch_normalization_forwardEv"]], "dnnl::batch_normalization_forward::primitive_desc (c++ struct)": [[153, "_CPPv4N4dnnl27batch_normalization_forward14primitive_descE"]], "dnnl::batch_normalization_forward::primitive_desc::dst_desc (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_flags (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::batch_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::batch_normalization_forward::primitive_desc::mean_desc (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[153, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [153, "_CPPv4N4dnnl27batch_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::src_desc (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc8src_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::variance_desc (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::weights_desc (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::batch_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[153, "_CPPv4NK4dnnl27batch_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::binary (c++ struct)": [[154, "_CPPv4N4dnnl6binaryE"]], "dnnl::binary::binary (c++ function)": [[154, "_CPPv4N4dnnl6binary6binaryERK14primitive_desc"], [154, "_CPPv4N4dnnl6binary6binaryEv"]], "dnnl::binary::primitive_desc (c++ struct)": [[154, "_CPPv4N4dnnl6binary14primitive_descE"]], "dnnl::binary::primitive_desc::dst_desc (c++ function)": [[154, "_CPPv4NK4dnnl6binary14primitive_desc8dst_descEv"]], "dnnl::binary::primitive_desc::get_algorithm (c++ function)": [[154, "_CPPv4NK4dnnl6binary14primitive_desc13get_algorithmEv"]], "dnnl::binary::primitive_desc::primitive_desc (c++ function)": [[154, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [154, "_CPPv4N4dnnl6binary14primitive_desc14primitive_descEv"]], "dnnl::binary::primitive_desc::src0_desc (c++ function)": [[154, "_CPPv4NK4dnnl6binary14primitive_desc9src0_descEv"]], "dnnl::binary::primitive_desc::src1_desc (c++ function)": [[154, "_CPPv4NK4dnnl6binary14primitive_desc9src1_descEv"]], "dnnl::binary::primitive_desc::src_desc (c++ function)": [[154, "_CPPv4NK4dnnl6binary14primitive_desc8src_descEi"]], "dnnl::concat (c++ struct)": [[155, "_CPPv4N4dnnl6concatE"]], "dnnl::concat::concat (c++ function)": [[155, "_CPPv4N4dnnl6concat6concatERK14primitive_desc"], [155, "_CPPv4N4dnnl6concat6concatEv"]], "dnnl::concat::primitive_desc (c++ struct)": [[155, "_CPPv4N4dnnl6concat14primitive_descE"]], "dnnl::concat::primitive_desc::dst_desc (c++ function)": [[155, "_CPPv4NK4dnnl6concat14primitive_desc8dst_descEv"]], "dnnl::concat::primitive_desc::primitive_desc (c++ function)": [[155, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descERKN6memory4descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [155, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEiRKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [155, "_CPPv4N4dnnl6concat14primitive_desc14primitive_descEv"]], "dnnl::concat::primitive_desc::src_desc (c++ function)": [[155, "_CPPv4NK4dnnl6concat14primitive_desc8src_descEi"]], "dnnl::convolution_backward_data (c++ struct)": [[156, "_CPPv4N4dnnl25convolution_backward_dataE"]], "dnnl::convolution_backward_data::convolution_backward_data (c++ function)": [[156, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataERK14primitive_desc"], [156, "_CPPv4N4dnnl25convolution_backward_data25convolution_backward_dataEv"]], "dnnl::convolution_backward_data::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl25convolution_backward_data14primitive_descE"]], "dnnl::convolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::convolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_data::primitive_desc::get_dilations (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_data::primitive_desc::get_strides (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl25convolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_data::primitive_desc::weights_desc (c++ function)": [[156, "_CPPv4NK4dnnl25convolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::convolution_backward_weights (c++ struct)": [[156, "_CPPv4N4dnnl28convolution_backward_weightsE"]], "dnnl::convolution_backward_weights::convolution_backward_weights (c++ function)": [[156, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsERK14primitive_desc"], [156, "_CPPv4N4dnnl28convolution_backward_weights28convolution_backward_weightsEv"]], "dnnl::convolution_backward_weights::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl28convolution_backward_weights14primitive_descE"]], "dnnl::convolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_backward_weights::primitive_desc::get_strides (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::convolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN19convolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl28convolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::convolution_backward_weights::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl28convolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::convolution_forward (c++ struct)": [[156, "_CPPv4N4dnnl19convolution_forwardE"]], "dnnl::convolution_forward::convolution_forward (c++ function)": [[156, "_CPPv4N4dnnl19convolution_forward19convolution_forwardERK14primitive_desc"], [156, "_CPPv4N4dnnl19convolution_forward19convolution_forwardEv"]], "dnnl::convolution_forward::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl19convolution_forward14primitive_descE"]], "dnnl::convolution_forward::primitive_desc::bias_desc (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc9bias_descEv"]], "dnnl::convolution_forward::primitive_desc::dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8dst_descEv"]], "dnnl::convolution_forward::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::convolution_forward::primitive_desc::get_dilations (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_l (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::convolution_forward::primitive_desc::get_padding_r (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::convolution_forward::primitive_desc::get_prop_kind (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::convolution_forward::primitive_desc::get_strides (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc11get_stridesEv"]], "dnnl::convolution_forward::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl19convolution_forward14primitive_desc14primitive_descEv"]], "dnnl::convolution_forward::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc8src_descEv"]], "dnnl::convolution_forward::primitive_desc::weights_desc (c++ function)": [[156, "_CPPv4NK4dnnl19convolution_forward14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_data (c++ struct)": [[156, "_CPPv4N4dnnl27deconvolution_backward_dataE"]], "dnnl::deconvolution_backward_data::deconvolution_backward_data (c++ function)": [[156, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataERK14primitive_desc"], [156, "_CPPv4N4dnnl27deconvolution_backward_data27deconvolution_backward_dataEv"]], "dnnl::deconvolution_backward_data::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_descE"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::diff_src_desc (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_dilations (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_l (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_padding_r (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_prop_kind (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_data::primitive_desc::get_strides (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_data::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl27deconvolution_backward_data14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_data::primitive_desc::weights_desc (c++ function)": [[156, "_CPPv4NK4dnnl27deconvolution_backward_data14primitive_desc12weights_descEv"]], "dnnl::deconvolution_backward_weights (c++ struct)": [[156, "_CPPv4N4dnnl30deconvolution_backward_weightsE"]], "dnnl::deconvolution_backward_weights::deconvolution_backward_weights (c++ function)": [[156, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsERK14primitive_desc"], [156, "_CPPv4N4dnnl30deconvolution_backward_weights30deconvolution_backward_weightsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_descE"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_dilations (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_l (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_padding_r (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::get_strides (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN21deconvolution_forward14primitive_descERK14primitive_attrb"], [156, "_CPPv4N4dnnl30deconvolution_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_backward_weights::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl30deconvolution_backward_weights14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward (c++ struct)": [[156, "_CPPv4N4dnnl21deconvolution_forwardE"]], "dnnl::deconvolution_forward::deconvolution_forward (c++ function)": [[156, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardERK14primitive_desc"], [156, "_CPPv4N4dnnl21deconvolution_forward21deconvolution_forwardEv"]], "dnnl::deconvolution_forward::primitive_desc (c++ struct)": [[156, "_CPPv4N4dnnl21deconvolution_forward14primitive_descE"]], "dnnl::deconvolution_forward::primitive_desc::bias_desc (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc9bias_descEv"]], "dnnl::deconvolution_forward::primitive_desc::dst_desc (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8dst_descEv"]], "dnnl::deconvolution_forward::primitive_desc::get_algorithm (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_algorithmEv"]], "dnnl::deconvolution_forward::primitive_desc::get_dilations (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_dilationsEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_l (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_lEv"]], "dnnl::deconvolution_forward::primitive_desc::get_padding_r (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_padding_rEv"]], "dnnl::deconvolution_forward::primitive_desc::get_prop_kind (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc13get_prop_kindEv"]], "dnnl::deconvolution_forward::primitive_desc::get_strides (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc11get_stridesEv"]], "dnnl::deconvolution_forward::primitive_desc::primitive_desc (c++ function)": [[156, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [156, "_CPPv4N4dnnl21deconvolution_forward14primitive_desc14primitive_descEv"]], "dnnl::deconvolution_forward::primitive_desc::src_desc (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc8src_descEv"]], "dnnl::deconvolution_forward::primitive_desc::weights_desc (c++ function)": [[156, "_CPPv4NK4dnnl21deconvolution_forward14primitive_desc12weights_descEv"]], "dnnl::eltwise_backward (c++ struct)": [[157, "_CPPv4N4dnnl16eltwise_backwardE"]], "dnnl::eltwise_backward::eltwise_backward (c++ function)": [[157, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardERK14primitive_desc"], [157, "_CPPv4N4dnnl16eltwise_backward16eltwise_backwardEv"]], "dnnl::eltwise_backward::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl16eltwise_backward14primitive_descE"]], "dnnl::eltwise_backward::primitive_desc::diff_dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_dst_descEv"]], "dnnl::eltwise_backward::primitive_desc::diff_src_desc (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13diff_src_descEv"]], "dnnl::eltwise_backward::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_backward::primitive_desc::get_alpha (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_backward::primitive_desc::get_beta (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8get_betaEv"]], "dnnl::eltwise_backward::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_backward::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descERKN15eltwise_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEfRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEffRKN15eltwise_forward14primitive_descERK14primitive_attrb"], [157, "_CPPv4N4dnnl16eltwise_backward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_backward::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl16eltwise_backward14primitive_desc8src_descEv"]], "dnnl::eltwise_forward (c++ struct)": [[157, "_CPPv4N4dnnl15eltwise_forwardE"]], "dnnl::eltwise_forward::eltwise_forward (c++ function)": [[157, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardERK14primitive_desc"], [157, "_CPPv4N4dnnl15eltwise_forward15eltwise_forwardEv"]], "dnnl::eltwise_forward::primitive_desc (c++ struct)": [[157, "_CPPv4N4dnnl15eltwise_forward14primitive_descE"]], "dnnl::eltwise_forward::primitive_desc::dst_desc (c++ function)": [[157, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8dst_descEv"]], "dnnl::eltwise_forward::primitive_desc::get_algorithm (c++ function)": [[157, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_algorithmEv"]], "dnnl::eltwise_forward::primitive_desc::get_alpha (c++ function)": [[157, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc9get_alphaEv"]], "dnnl::eltwise_forward::primitive_desc::get_beta (c++ function)": [[157, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8get_betaEv"]], "dnnl::eltwise_forward::primitive_desc::get_prop_kind (c++ function)": [[157, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc13get_prop_kindEv"]], "dnnl::eltwise_forward::primitive_desc::primitive_desc (c++ function)": [[157, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [157, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [157, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [157, "_CPPv4N4dnnl15eltwise_forward14primitive_desc14primitive_descEv"]], "dnnl::eltwise_forward::primitive_desc::src_desc (c++ function)": [[157, "_CPPv4NK4dnnl15eltwise_forward14primitive_desc8src_descEv"]], "dnnl_arg_attr_scales (c macro)": [[158, "c.DNNL_ARG_ATTR_SCALES"]], "dnnl_arg_attr_zero_points (c macro)": [[158, "c.DNNL_ARG_ATTR_ZERO_POINTS"]], "dnnl_arg_bias (c macro)": [[158, "c.DNNL_ARG_BIAS"]], "dnnl_arg_diff_bias (c macro)": [[158, "c.DNNL_ARG_DIFF_BIAS"]], "dnnl_arg_diff_dst (c macro)": [[158, "c.DNNL_ARG_DIFF_DST"]], "dnnl_arg_diff_dst_0 (c macro)": [[158, "c.DNNL_ARG_DIFF_DST_0"]], "dnnl_arg_diff_dst_1 (c macro)": [[158, "c.DNNL_ARG_DIFF_DST_1"]], "dnnl_arg_diff_dst_2 (c macro)": [[158, "c.DNNL_ARG_DIFF_DST_2"]], "dnnl_arg_diff_dst_iter (c macro)": [[158, "c.DNNL_ARG_DIFF_DST_ITER"]], "dnnl_arg_diff_dst_iter_c (c macro)": [[158, "c.DNNL_ARG_DIFF_DST_ITER_C"]], "dnnl_arg_diff_dst_layer (c macro)": [[158, "c.DNNL_ARG_DIFF_DST_LAYER"]], "dnnl_arg_diff_scale (c macro)": [[158, "c.DNNL_ARG_DIFF_SCALE"]], "dnnl_arg_diff_shift (c macro)": [[158, "c.DNNL_ARG_DIFF_SHIFT"]], "dnnl_arg_diff_src (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC"]], "dnnl_arg_diff_src_0 (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC_0"]], "dnnl_arg_diff_src_1 (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC_1"]], "dnnl_arg_diff_src_2 (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC_2"]], "dnnl_arg_diff_src_iter (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC_ITER"]], "dnnl_arg_diff_src_iter_c (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC_ITER_C"]], "dnnl_arg_diff_src_layer (c macro)": [[158, "c.DNNL_ARG_DIFF_SRC_LAYER"]], "dnnl_arg_diff_weights (c macro)": [[158, "c.DNNL_ARG_DIFF_WEIGHTS"]], "dnnl_arg_diff_weights_0 (c macro)": [[158, "c.DNNL_ARG_DIFF_WEIGHTS_0"]], "dnnl_arg_diff_weights_1 (c macro)": [[158, "c.DNNL_ARG_DIFF_WEIGHTS_1"]], "dnnl_arg_diff_weights_iter (c macro)": [[158, "c.DNNL_ARG_DIFF_WEIGHTS_ITER"]], "dnnl_arg_diff_weights_layer (c macro)": [[158, "c.DNNL_ARG_DIFF_WEIGHTS_LAYER"]], "dnnl_arg_dst (c macro)": [[158, "c.DNNL_ARG_DST"]], "dnnl_arg_dst_0 (c macro)": [[158, "c.DNNL_ARG_DST_0"]], "dnnl_arg_dst_1 (c macro)": [[158, "c.DNNL_ARG_DST_1"]], "dnnl_arg_dst_2 (c macro)": [[158, "c.DNNL_ARG_DST_2"]], "dnnl_arg_dst_iter (c macro)": [[158, "c.DNNL_ARG_DST_ITER"]], "dnnl_arg_dst_iter_c (c macro)": [[158, "c.DNNL_ARG_DST_ITER_C"]], "dnnl_arg_dst_layer (c macro)": [[158, "c.DNNL_ARG_DST_LAYER"]], "dnnl_arg_from (c macro)": [[158, "c.DNNL_ARG_FROM"]], "dnnl_arg_mean (c macro)": [[158, "c.DNNL_ARG_MEAN"]], "dnnl_arg_multiple_dst (c macro)": [[158, "c.DNNL_ARG_MULTIPLE_DST"]], "dnnl_arg_multiple_src (c macro)": [[158, "c.DNNL_ARG_MULTIPLE_SRC"]], "dnnl_arg_scale (c macro)": [[158, "c.DNNL_ARG_SCALE"]], "dnnl_arg_scratchpad (c macro)": [[158, "c.DNNL_ARG_SCRATCHPAD"]], "dnnl_arg_shift (c macro)": [[158, "c.DNNL_ARG_SHIFT"]], "dnnl_arg_src (c macro)": [[158, "c.DNNL_ARG_SRC"]], "dnnl_arg_src_0 (c macro)": [[158, "c.DNNL_ARG_SRC_0"]], "dnnl_arg_src_1 (c macro)": [[158, "c.DNNL_ARG_SRC_1"]], "dnnl_arg_src_2 (c macro)": [[158, "c.DNNL_ARG_SRC_2"]], "dnnl_arg_src_iter (c macro)": [[158, "c.DNNL_ARG_SRC_ITER"]], "dnnl_arg_src_iter_c (c macro)": [[158, "c.DNNL_ARG_SRC_ITER_C"]], "dnnl_arg_src_layer (c macro)": [[158, "c.DNNL_ARG_SRC_LAYER"]], "dnnl_arg_to (c macro)": [[158, "c.DNNL_ARG_TO"]], "dnnl_arg_variance (c macro)": [[158, "c.DNNL_ARG_VARIANCE"]], "dnnl_arg_weights (c macro)": [[158, "c.DNNL_ARG_WEIGHTS"]], "dnnl_arg_weights_0 (c macro)": [[158, "c.DNNL_ARG_WEIGHTS_0"]], "dnnl_arg_weights_1 (c macro)": [[158, "c.DNNL_ARG_WEIGHTS_1"]], "dnnl_arg_weights_iter (c macro)": [[158, "c.DNNL_ARG_WEIGHTS_ITER"]], "dnnl_arg_weights_layer (c macro)": [[158, "c.DNNL_ARG_WEIGHTS_LAYER"]], "dnnl_arg_workspace (c macro)": [[158, "c.DNNL_ARG_WORKSPACE"]], "dnnl_runtime_dim_val (c macro)": [[158, "c.DNNL_RUNTIME_DIM_VAL"]], "dnnl_runtime_f32_val (c macro)": [[158, "c.DNNL_RUNTIME_F32_VAL"]], "dnnl_runtime_s32_val (c macro)": [[158, "c.DNNL_RUNTIME_S32_VAL"]], "dnnl_runtime_size_val (c macro)": [[158, "c.DNNL_RUNTIME_SIZE_VAL"]], "dnnl::algorithm (c++ enum)": [[158, "_CPPv4N4dnnl9algorithmE"]], "dnnl::algorithm::binary_add (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm10binary_addE"]], "dnnl::algorithm::binary_div (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm10binary_divE"]], "dnnl::algorithm::binary_eq (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm9binary_eqE"]], "dnnl::algorithm::binary_ge (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm9binary_geE"]], "dnnl::algorithm::binary_gt (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm9binary_gtE"]], "dnnl::algorithm::binary_le (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm9binary_leE"]], "dnnl::algorithm::binary_lt (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm9binary_ltE"]], "dnnl::algorithm::binary_max (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm10binary_maxE"]], "dnnl::algorithm::binary_min (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm10binary_minE"]], "dnnl::algorithm::binary_mul (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm10binary_mulE"]], "dnnl::algorithm::binary_ne (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm9binary_neE"]], "dnnl::algorithm::binary_sub (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm10binary_subE"]], "dnnl::algorithm::convolution_auto (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm16convolution_autoE"]], "dnnl::algorithm::convolution_direct (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm18convolution_directE"]], "dnnl::algorithm::convolution_winograd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm20convolution_winogradE"]], "dnnl::algorithm::deconvolution_direct (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm20deconvolution_directE"]], "dnnl::algorithm::deconvolution_winograd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm22deconvolution_winogradE"]], "dnnl::algorithm::eltwise_abs (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11eltwise_absE"]], "dnnl::algorithm::eltwise_bounded_relu (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm20eltwise_bounded_reluE"]], "dnnl::algorithm::eltwise_clip (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12eltwise_clipE"]], "dnnl::algorithm::eltwise_clip_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm28eltwise_clip_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_elu (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11eltwise_eluE"]], "dnnl::algorithm::eltwise_elu_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm27eltwise_elu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_exp (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11eltwise_expE"]], "dnnl::algorithm::eltwise_exp_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm27eltwise_exp_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_gelu (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12eltwise_geluE"]], "dnnl::algorithm::eltwise_gelu_erf (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm16eltwise_gelu_erfE"]], "dnnl::algorithm::eltwise_gelu_tanh (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm17eltwise_gelu_tanhE"]], "dnnl::algorithm::eltwise_hardsigmoid (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm19eltwise_hardsigmoidE"]], "dnnl::algorithm::eltwise_hardswish (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm17eltwise_hardswishE"]], "dnnl::algorithm::eltwise_linear (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm14eltwise_linearE"]], "dnnl::algorithm::eltwise_log (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11eltwise_logE"]], "dnnl::algorithm::eltwise_logistic (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm16eltwise_logisticE"]], "dnnl::algorithm::eltwise_logistic_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm32eltwise_logistic_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_mish (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12eltwise_mishE"]], "dnnl::algorithm::eltwise_pow (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11eltwise_powE"]], "dnnl::algorithm::eltwise_relu (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12eltwise_reluE"]], "dnnl::algorithm::eltwise_relu_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm28eltwise_relu_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_round (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm13eltwise_roundE"]], "dnnl::algorithm::eltwise_soft_relu (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm17eltwise_soft_reluE"]], "dnnl::algorithm::eltwise_sqrt (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12eltwise_sqrtE"]], "dnnl::algorithm::eltwise_sqrt_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm28eltwise_sqrt_use_dst_for_bwdE"]], "dnnl::algorithm::eltwise_square (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm14eltwise_squareE"]], "dnnl::algorithm::eltwise_swish (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm13eltwise_swishE"]], "dnnl::algorithm::eltwise_tanh (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12eltwise_tanhE"]], "dnnl::algorithm::eltwise_tanh_use_dst_for_bwd (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm28eltwise_tanh_use_dst_for_bwdE"]], "dnnl::algorithm::lbr_gru (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm7lbr_gruE"]], "dnnl::algorithm::lrn_across_channels (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm19lrn_across_channelsE"]], "dnnl::algorithm::lrn_within_channel (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm18lrn_within_channelE"]], "dnnl::algorithm::pooling_avg (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11pooling_avgE"]], "dnnl::algorithm::pooling_avg_exclude_padding (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm27pooling_avg_exclude_paddingE"]], "dnnl::algorithm::pooling_avg_include_padding (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm27pooling_avg_include_paddingE"]], "dnnl::algorithm::pooling_max (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11pooling_maxE"]], "dnnl::algorithm::reduction_max (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm13reduction_maxE"]], "dnnl::algorithm::reduction_mean (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm14reduction_meanE"]], "dnnl::algorithm::reduction_min (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm13reduction_minE"]], "dnnl::algorithm::reduction_mul (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm13reduction_mulE"]], "dnnl::algorithm::reduction_norm_lp_max (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_max (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_maxE"]], "dnnl::algorithm::reduction_norm_lp_power_p_sum (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm29reduction_norm_lp_power_p_sumE"]], "dnnl::algorithm::reduction_norm_lp_sum (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm21reduction_norm_lp_sumE"]], "dnnl::algorithm::reduction_sum (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm13reduction_sumE"]], "dnnl::algorithm::resampling_linear (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm17resampling_linearE"]], "dnnl::algorithm::resampling_nearest (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm18resampling_nearestE"]], "dnnl::algorithm::softmax_accurate (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm16softmax_accurateE"]], "dnnl::algorithm::softmax_log (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11softmax_logE"]], "dnnl::algorithm::undef (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm5undefE"]], "dnnl::algorithm::vanilla_gru (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11vanilla_gruE"]], "dnnl::algorithm::vanilla_lstm (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm12vanilla_lstmE"]], "dnnl::algorithm::vanilla_rnn (c++ enumerator)": [[158, "_CPPv4N4dnnl9algorithm11vanilla_rnnE"]], "dnnl::normalization_flags (c++ enum)": [[158, "_CPPv4N4dnnl19normalization_flagsE"]], "dnnl::normalization_flags::fuse_norm_relu (c++ enumerator)": [[158, "_CPPv4N4dnnl19normalization_flags14fuse_norm_reluE"]], "dnnl::normalization_flags::none (c++ enumerator)": [[158, "_CPPv4N4dnnl19normalization_flags4noneE"]], "dnnl::normalization_flags::use_global_stats (c++ enumerator)": [[158, "_CPPv4N4dnnl19normalization_flags16use_global_statsE"]], "dnnl::normalization_flags::use_scale (c++ enumerator)": [[158, "_CPPv4N4dnnl19normalization_flags9use_scaleE"]], "dnnl::normalization_flags::use_shift (c++ enumerator)": [[158, "_CPPv4N4dnnl19normalization_flags9use_shiftE"]], "dnnl::primitive (c++ struct)": [[158, "_CPPv4N4dnnl9primitiveE"]], "dnnl::primitive::execute (c++ function)": [[158, "_CPPv4NK4dnnl9primitive7executeERK6streamRKNSt13unordered_mapIi6memoryEE"]], "dnnl::primitive::get_kind (c++ function)": [[158, "_CPPv4NK4dnnl9primitive8get_kindEv"]], "dnnl::primitive::kind (c++ enum)": [[158, "_CPPv4N4dnnl9primitive4kindE"]], "dnnl::primitive::kind::batch_normalization (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind19batch_normalizationE"]], "dnnl::primitive::kind::binary (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind6binaryE"]], "dnnl::primitive::kind::concat (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind6concatE"]], "dnnl::primitive::kind::convolution (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind11convolutionE"]], "dnnl::primitive::kind::deconvolution (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind13deconvolutionE"]], "dnnl::primitive::kind::eltwise (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind7eltwiseE"]], "dnnl::primitive::kind::inner_product (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind13inner_productE"]], "dnnl::primitive::kind::layer_normalization (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind19layer_normalizationE"]], "dnnl::primitive::kind::lrn (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind3lrnE"]], "dnnl::primitive::kind::matmul (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind6matmulE"]], "dnnl::primitive::kind::pooling (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind7poolingE"]], "dnnl::primitive::kind::prelu (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind5preluE"]], "dnnl::primitive::kind::reorder (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind7reorderE"]], "dnnl::primitive::kind::resampling (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind10resamplingE"]], "dnnl::primitive::kind::rnn (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind3rnnE"]], "dnnl::primitive::kind::shuffle (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind7shuffleE"]], "dnnl::primitive::kind::softmax (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind7softmaxE"]], "dnnl::primitive::kind::sum (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind3sumE"]], "dnnl::primitive::kind::undef (c++ enumerator)": [[158, "_CPPv4N4dnnl9primitive4kind5undefE"]], "dnnl::primitive::operator= (c++ function)": [[158, "_CPPv4N4dnnl9primitiveaSERK9primitive"]], "dnnl::primitive::primitive (c++ function)": [[158, "_CPPv4N4dnnl9primitive9primitiveERK19primitive_desc_base"], [158, "_CPPv4N4dnnl9primitive9primitiveEv"]], "dnnl::primitive_desc (c++ struct)": [[158, "_CPPv4N4dnnl14primitive_descE"]], "dnnl::primitive_desc::next_impl (c++ function)": [[158, "_CPPv4N4dnnl14primitive_desc9next_implEv"]], "dnnl::primitive_desc::primitive_desc (c++ function)": [[158, "_CPPv4N4dnnl14primitive_desc14primitive_descEv"]], "dnnl::primitive_desc_base (c++ struct)": [[158, "_CPPv4N4dnnl19primitive_desc_baseE"]], "dnnl::primitive_desc_base::bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base9bias_descEv"]], "dnnl::primitive_desc_base::diff_dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEi"], [158, "_CPPv4NK4dnnl19primitive_desc_base13diff_dst_descEv"]], "dnnl::primitive_desc_base::diff_src_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEi"], [158, "_CPPv4NK4dnnl19primitive_desc_base13diff_src_descEv"]], "dnnl::primitive_desc_base::diff_weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEi"], [158, "_CPPv4NK4dnnl19primitive_desc_base17diff_weights_descEv"]], "dnnl::primitive_desc_base::dst_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEi"], [158, "_CPPv4NK4dnnl19primitive_desc_base8dst_descEv"]], "dnnl::primitive_desc_base::get_activation_kind (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base19get_activation_kindEv"]], "dnnl::primitive_desc_base::get_algorithm (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_algorithmEv"]], "dnnl::primitive_desc_base::get_alpha (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base9get_alphaEv"]], "dnnl::primitive_desc_base::get_axis (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base8get_axisEv"]], "dnnl::primitive_desc_base::get_beta (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base8get_betaEv"]], "dnnl::primitive_desc_base::get_cell_kind (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_cell_kindEv"]], "dnnl::primitive_desc_base::get_dilations (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_dilationsEv"]], "dnnl::primitive_desc_base::get_direction (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_directionEv"]], "dnnl::primitive_desc_base::get_engine (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base10get_engineEv"]], "dnnl::primitive_desc_base::get_epsilon (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base11get_epsilonEv"]], "dnnl::primitive_desc_base::get_factors (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base11get_factorsEv"]], "dnnl::primitive_desc_base::get_flags (c++ function)": [[158, "_CPPv4I0ENK4dnnl19primitive_desc_base9get_flagsE1Tv"]], "dnnl::primitive_desc_base::get_group_size (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base14get_group_sizeEv"]], "dnnl::primitive_desc_base::get_k (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base5get_kEv"]], "dnnl::primitive_desc_base::get_kernel (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base10get_kernelEv"]], "dnnl::primitive_desc_base::get_kind (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base8get_kindEv"]], "dnnl::primitive_desc_base::get_local_size (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base14get_local_sizeEv"]], "dnnl::primitive_desc_base::get_p (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base5get_pEv"]], "dnnl::primitive_desc_base::get_padding_l (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_lEv"]], "dnnl::primitive_desc_base::get_padding_r (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_padding_rEv"]], "dnnl::primitive_desc_base::get_primitive_attr (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base18get_primitive_attrEv"]], "dnnl::primitive_desc_base::get_prop_kind (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13get_prop_kindEv"]], "dnnl::primitive_desc_base::get_strides (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base11get_stridesEv"]], "dnnl::primitive_desc_base::impl_info_str (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base13impl_info_strEv"]], "dnnl::primitive_desc_base::primitive_desc_base (c++ function)": [[158, "_CPPv4N4dnnl19primitive_desc_base19primitive_desc_baseEv"]], "dnnl::primitive_desc_base::query_md (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base8query_mdE5queryi"]], "dnnl::primitive_desc_base::query_s64 (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base9query_s64E5query"]], "dnnl::primitive_desc_base::scratchpad_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base15scratchpad_descEv"]], "dnnl::primitive_desc_base::scratchpad_engine (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base17scratchpad_engineEv"]], "dnnl::primitive_desc_base::src_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base8src_descEi"], [158, "_CPPv4NK4dnnl19primitive_desc_base8src_descEv"]], "dnnl::primitive_desc_base::weights_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEi"], [158, "_CPPv4NK4dnnl19primitive_desc_base12weights_descEv"]], "dnnl::primitive_desc_base::workspace_desc (c++ function)": [[158, "_CPPv4NK4dnnl19primitive_desc_base14workspace_descEv"]], "dnnl::prop_kind (c++ enum)": [[158, "_CPPv4N4dnnl9prop_kindE"]], "dnnl::prop_kind::backward (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind8backwardE"]], "dnnl::prop_kind::backward_bias (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind13backward_biasE"]], "dnnl::prop_kind::backward_data (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind13backward_dataE"]], "dnnl::prop_kind::backward_weights (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind16backward_weightsE"]], "dnnl::prop_kind::forward (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind7forwardE"]], "dnnl::prop_kind::forward_inference (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind17forward_inferenceE"]], "dnnl::prop_kind::forward_scoring (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind15forward_scoringE"]], "dnnl::prop_kind::forward_training (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind16forward_trainingE"]], "dnnl::prop_kind::undef (c++ enumerator)": [[158, "_CPPv4N4dnnl9prop_kind5undefE"]], "dnnl::rnn_primitive_desc_base (c++ struct)": [[158, "_CPPv4N4dnnl23rnn_primitive_desc_baseE"]], "dnnl::rnn_primitive_desc_base::augru_attention_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base20augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base9bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_augru_attention_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base25diff_augru_attention_descEv"]], "dnnl::rnn_primitive_desc_base::diff_bias_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base14diff_bias_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_c_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_iter_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_dst_layer_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_c_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base20diff_src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_iter_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base18diff_src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_src_layer_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base19diff_src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_iter_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base22diff_weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_layer_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base23diff_weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_peephole_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base26diff_weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::diff_weights_projection_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base28diff_weights_projection_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_c_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base15dst_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::dst_iter_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base13dst_iter_descEv"]], "dnnl::rnn_primitive_desc_base::dst_layer_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base14dst_layer_descEv"]], "dnnl::rnn_primitive_desc_base::rnn_primitive_desc_base (c++ function)": [[158, "_CPPv4N4dnnl23rnn_primitive_desc_base23rnn_primitive_desc_baseEv"]], "dnnl::rnn_primitive_desc_base::src_iter_c_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base15src_iter_c_descEv"]], "dnnl::rnn_primitive_desc_base::src_iter_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base13src_iter_descEv"]], "dnnl::rnn_primitive_desc_base::src_layer_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base14src_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_iter_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base17weights_iter_descEv"]], "dnnl::rnn_primitive_desc_base::weights_layer_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base18weights_layer_descEv"]], "dnnl::rnn_primitive_desc_base::weights_peephole_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base21weights_peephole_descEv"]], "dnnl::rnn_primitive_desc_base::weights_projection_desc (c++ function)": [[158, "_CPPv4NK4dnnl23rnn_primitive_desc_base23weights_projection_descEv"]], "dnnl::sycl_interop::execute (c++ function)": [[158, "_CPPv4N4dnnl12sycl_interop7executeERK9primitiveRK6streamRKNSt13unordered_mapIi6memoryEERKNSt6vectorIN2cl4sycl5eventEEE"]], "dnnl::inner_product_backward_data (c++ struct)": [[160, "_CPPv4N4dnnl27inner_product_backward_dataE"]], "dnnl::inner_product_backward_data::inner_product_backward_data (c++ function)": [[160, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataERK14primitive_desc"], [160, "_CPPv4N4dnnl27inner_product_backward_data27inner_product_backward_dataEv"]], "dnnl::inner_product_backward_data::primitive_desc (c++ struct)": [[160, "_CPPv4N4dnnl27inner_product_backward_data14primitive_descE"]], "dnnl::inner_product_backward_data::primitive_desc::diff_dst_desc (c++ function)": [[160, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::diff_src_desc (c++ function)": [[160, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13diff_src_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::get_prop_kind (c++ function)": [[160, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_data::primitive_desc::primitive_desc (c++ function)": [[160, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [160, "_CPPv4N4dnnl27inner_product_backward_data14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_data::primitive_desc::weights_desc (c++ function)": [[160, "_CPPv4NK4dnnl27inner_product_backward_data14primitive_desc12weights_descEv"]], "dnnl::inner_product_backward_weights (c++ struct)": [[160, "_CPPv4N4dnnl30inner_product_backward_weightsE"]], "dnnl::inner_product_backward_weights::inner_product_backward_weights (c++ function)": [[160, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsERK14primitive_desc"], [160, "_CPPv4N4dnnl30inner_product_backward_weights30inner_product_backward_weightsEv"]], "dnnl::inner_product_backward_weights::primitive_desc (c++ struct)": [[160, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_descE"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_bias_desc (c++ function)": [[160, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc14diff_bias_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_dst_desc (c++ function)": [[160, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13diff_dst_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::diff_weights_desc (c++ function)": [[160, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc17diff_weights_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::get_prop_kind (c++ function)": [[160, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_backward_weights::primitive_desc::primitive_desc (c++ function)": [[160, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [160, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN21inner_product_forward14primitive_descERK14primitive_attrb"], [160, "_CPPv4N4dnnl30inner_product_backward_weights14primitive_desc14primitive_descEv"]], "dnnl::inner_product_backward_weights::primitive_desc::src_desc (c++ function)": [[160, "_CPPv4NK4dnnl30inner_product_backward_weights14primitive_desc8src_descEv"]], "dnnl::inner_product_forward (c++ struct)": [[160, "_CPPv4N4dnnl21inner_product_forwardE"]], "dnnl::inner_product_forward::inner_product_forward (c++ function)": [[160, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardERK14primitive_desc"], [160, "_CPPv4N4dnnl21inner_product_forward21inner_product_forwardEv"]], "dnnl::inner_product_forward::primitive_desc (c++ struct)": [[160, "_CPPv4N4dnnl21inner_product_forward14primitive_descE"]], "dnnl::inner_product_forward::primitive_desc::bias_desc (c++ function)": [[160, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc9bias_descEv"]], "dnnl::inner_product_forward::primitive_desc::dst_desc (c++ function)": [[160, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8dst_descEv"]], "dnnl::inner_product_forward::primitive_desc::get_prop_kind (c++ function)": [[160, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc13get_prop_kindEv"]], "dnnl::inner_product_forward::primitive_desc::primitive_desc (c++ function)": [[160, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [160, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [160, "_CPPv4N4dnnl21inner_product_forward14primitive_desc14primitive_descEv"]], "dnnl::inner_product_forward::primitive_desc::src_desc (c++ function)": [[160, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc8src_descEv"]], "dnnl::inner_product_forward::primitive_desc::weights_desc (c++ function)": [[160, "_CPPv4NK4dnnl21inner_product_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward (c++ struct)": [[161, "_CPPv4N4dnnl28layer_normalization_backwardE"]], "dnnl::layer_normalization_backward::layer_normalization_backward (c++ function)": [[161, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardERK14primitive_desc"], [161, "_CPPv4N4dnnl28layer_normalization_backward28layer_normalization_backwardEv"]], "dnnl::layer_normalization_backward::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl28layer_normalization_backward14primitive_descE"]], "dnnl::layer_normalization_backward::primitive_desc::diff_dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_src_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13diff_src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::diff_weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc17diff_weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_epsilon (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_flags (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_backward::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_backward::primitive_desc::mean_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRKN27layer_normalization_forward14primitive_descERK14primitive_attrb"], [161, "_CPPv4N4dnnl28layer_normalization_backward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::src_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::variance_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_backward::primitive_desc::workspace_desc (c++ function)": [[161, "_CPPv4NK4dnnl28layer_normalization_backward14primitive_desc14workspace_descEv"]], "dnnl::layer_normalization_forward (c++ struct)": [[161, "_CPPv4N4dnnl27layer_normalization_forwardE"]], "dnnl::layer_normalization_forward::layer_normalization_forward (c++ function)": [[161, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardERK14primitive_desc"], [161, "_CPPv4N4dnnl27layer_normalization_forward27layer_normalization_forwardEv"]], "dnnl::layer_normalization_forward::primitive_desc (c++ struct)": [[161, "_CPPv4N4dnnl27layer_normalization_forward14primitive_descE"]], "dnnl::layer_normalization_forward::primitive_desc::dst_desc (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8dst_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_epsilon (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc11get_epsilonEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_flags (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9get_flagsEv"]], "dnnl::layer_normalization_forward::primitive_desc::get_prop_kind (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13get_prop_kindEv"]], "dnnl::layer_normalization_forward::primitive_desc::mean_desc (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc9mean_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::primitive_desc (c++ function)": [[161, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [161, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEf19normalization_flagsRK14primitive_attrb"], [161, "_CPPv4N4dnnl27layer_normalization_forward14primitive_desc14primitive_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::src_desc (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc8src_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::variance_desc (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc13variance_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::weights_desc (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc12weights_descEv"]], "dnnl::layer_normalization_forward::primitive_desc::workspace_desc (c++ function)": [[161, "_CPPv4NK4dnnl27layer_normalization_forward14primitive_desc14workspace_descEv"]], "dnnl::lrn_backward (c++ struct)": [[162, "_CPPv4N4dnnl12lrn_backwardE"]], "dnnl::lrn_backward::lrn_backward (c++ function)": [[162, "_CPPv4N4dnnl12lrn_backward12lrn_backwardERK14primitive_desc"], [162, "_CPPv4N4dnnl12lrn_backward12lrn_backwardEv"]], "dnnl::lrn_backward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl12lrn_backward14primitive_descE"]], "dnnl::lrn_backward::primitive_desc::diff_dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_dst_descEv"]], "dnnl::lrn_backward::primitive_desc::diff_src_desc (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13diff_src_descEv"]], "dnnl::lrn_backward::primitive_desc::get_algorithm (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_backward::primitive_desc::get_alpha (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc9get_alphaEv"]], "dnnl::lrn_backward::primitive_desc::get_beta (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc8get_betaEv"]], "dnnl::lrn_backward::primitive_desc::get_k (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc5get_kEv"]], "dnnl::lrn_backward::primitive_desc::get_local_size (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_backward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_backward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEN6memory3dimEfffRKN11lrn_forward14primitive_descERK14primitive_attrb"], [162, "_CPPv4N4dnnl12lrn_backward14primitive_desc14primitive_descEv"]], "dnnl::lrn_backward::primitive_desc::workspace_desc (c++ function)": [[162, "_CPPv4NK4dnnl12lrn_backward14primitive_desc14workspace_descEv"]], "dnnl::lrn_forward (c++ struct)": [[162, "_CPPv4N4dnnl11lrn_forwardE"]], "dnnl::lrn_forward::lrn_forward (c++ function)": [[162, "_CPPv4N4dnnl11lrn_forward11lrn_forwardERK14primitive_desc"], [162, "_CPPv4N4dnnl11lrn_forward11lrn_forwardEv"]], "dnnl::lrn_forward::primitive_desc (c++ struct)": [[162, "_CPPv4N4dnnl11lrn_forward14primitive_descE"]], "dnnl::lrn_forward::primitive_desc::dst_desc (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8dst_descEv"]], "dnnl::lrn_forward::primitive_desc::get_algorithm (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_algorithmEv"]], "dnnl::lrn_forward::primitive_desc::get_alpha (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc9get_alphaEv"]], "dnnl::lrn_forward::primitive_desc::get_beta (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8get_betaEv"]], "dnnl::lrn_forward::primitive_desc::get_k (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc5get_kEv"]], "dnnl::lrn_forward::primitive_desc::get_local_size (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14get_local_sizeEv"]], "dnnl::lrn_forward::primitive_desc::get_prop_kind (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lrn_forward::primitive_desc::primitive_desc (c++ function)": [[162, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEN6memory3dimEfffRK14primitive_attrb"], [162, "_CPPv4N4dnnl11lrn_forward14primitive_desc14primitive_descEv"]], "dnnl::lrn_forward::primitive_desc::src_desc (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc8src_descEv"]], "dnnl::lrn_forward::primitive_desc::workspace_desc (c++ function)": [[162, "_CPPv4NK4dnnl11lrn_forward14primitive_desc14workspace_descEv"]], "dnnl::matmul (c++ struct)": [[163, "_CPPv4N4dnnl6matmulE"]], "dnnl::matmul::matmul (c++ function)": [[163, "_CPPv4N4dnnl6matmul6matmulERK14primitive_desc"], [163, "_CPPv4N4dnnl6matmul6matmulEv"]], "dnnl::matmul::primitive_desc (c++ struct)": [[163, "_CPPv4N4dnnl6matmul14primitive_descE"]], "dnnl::matmul::primitive_desc::bias_desc (c++ function)": [[163, "_CPPv4NK4dnnl6matmul14primitive_desc9bias_descEv"]], "dnnl::matmul::primitive_desc::dst_desc (c++ function)": [[163, "_CPPv4NK4dnnl6matmul14primitive_desc8dst_descEv"]], "dnnl::matmul::primitive_desc::primitive_desc (c++ function)": [[163, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [163, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [163, "_CPPv4N4dnnl6matmul14primitive_desc14primitive_descEv"]], "dnnl::matmul::primitive_desc::src_desc (c++ function)": [[163, "_CPPv4NK4dnnl6matmul14primitive_desc8src_descEv"]], "dnnl::matmul::primitive_desc::weights_desc (c++ function)": [[163, "_CPPv4NK4dnnl6matmul14primitive_desc12weights_descEv"]], "dnnl::pooling_backward (c++ struct)": [[164, "_CPPv4N4dnnl16pooling_backwardE"]], "dnnl::pooling_backward::pooling_backward (c++ function)": [[164, "_CPPv4N4dnnl16pooling_backward16pooling_backwardERK14primitive_desc"], [164, "_CPPv4N4dnnl16pooling_backward16pooling_backwardEv"]], "dnnl::pooling_backward::primitive_desc (c++ struct)": [[164, "_CPPv4N4dnnl16pooling_backward14primitive_descE"]], "dnnl::pooling_backward::primitive_desc::diff_dst_desc (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::pooling_backward::primitive_desc::diff_src_desc (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13diff_src_descEv"]], "dnnl::pooling_backward::primitive_desc::get_algorithm (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_backward::primitive_desc::get_dilations (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_backward::primitive_desc::get_kernel (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc10get_kernelEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_l (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_backward::primitive_desc::get_padding_r (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_backward::primitive_desc::get_prop_kind (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_backward::primitive_desc::get_strides (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc11get_stridesEv"]], "dnnl::pooling_backward::primitive_desc::primitive_desc (c++ function)": [[164, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN15pooling_forward14primitive_descERK14primitive_attrb"], [164, "_CPPv4N4dnnl16pooling_backward14primitive_desc14primitive_descEv"]], "dnnl::pooling_backward::primitive_desc::workspace_desc (c++ function)": [[164, "_CPPv4NK4dnnl16pooling_backward14primitive_desc14workspace_descEv"]], "dnnl::pooling_forward (c++ struct)": [[164, "_CPPv4N4dnnl15pooling_forwardE"]], "dnnl::pooling_forward::pooling_forward (c++ function)": [[164, "_CPPv4N4dnnl15pooling_forward15pooling_forwardERK14primitive_desc"], [164, "_CPPv4N4dnnl15pooling_forward15pooling_forwardEv"]], "dnnl::pooling_forward::primitive_desc (c++ struct)": [[164, "_CPPv4N4dnnl15pooling_forward14primitive_descE"]], "dnnl::pooling_forward::primitive_desc::dst_desc (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8dst_descEv"]], "dnnl::pooling_forward::primitive_desc::get_algorithm (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_algorithmEv"]], "dnnl::pooling_forward::primitive_desc::get_dilations (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_dilationsEv"]], "dnnl::pooling_forward::primitive_desc::get_kernel (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc10get_kernelEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_l (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_lEv"]], "dnnl::pooling_forward::primitive_desc::get_padding_r (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_padding_rEv"]], "dnnl::pooling_forward::primitive_desc::get_prop_kind (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc13get_prop_kindEv"]], "dnnl::pooling_forward::primitive_desc::get_strides (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc11get_stridesEv"]], "dnnl::pooling_forward::primitive_desc::primitive_desc (c++ function)": [[164, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERKN6memory4dimsERK14primitive_attrb"], [164, "_CPPv4N4dnnl15pooling_forward14primitive_desc14primitive_descEv"]], "dnnl::pooling_forward::primitive_desc::src_desc (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc8src_descEv"]], "dnnl::pooling_forward::primitive_desc::workspace_desc (c++ function)": [[164, "_CPPv4NK4dnnl15pooling_forward14primitive_desc14workspace_descEv"]], "dnnl::prelu_backward (c++ struct)": [[165, "_CPPv4N4dnnl14prelu_backwardE"]], "dnnl::prelu_backward::prelu_backward (c++ function)": [[165, "_CPPv4N4dnnl14prelu_backward14prelu_backwardERK14primitive_desc"], [165, "_CPPv4N4dnnl14prelu_backward14prelu_backwardEv"]], "dnnl::prelu_backward::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl14prelu_backward14primitive_descE"]], "dnnl::prelu_backward::primitive_desc::diff_dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_dst_descEv"]], "dnnl::prelu_backward::primitive_desc::diff_src_desc (c++ function)": [[165, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13diff_src_descEv"]], "dnnl::prelu_backward::primitive_desc::get_prop_kind (c++ function)": [[165, "_CPPv4NK4dnnl14prelu_backward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_backward::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN13prelu_forward14primitive_descERK14primitive_attrb"], [165, "_CPPv4N4dnnl14prelu_backward14primitive_desc14primitive_descEv"]], "dnnl::prelu_backward::primitive_desc::src_desc (c++ function)": [[165, "_CPPv4NK4dnnl14prelu_backward14primitive_desc8src_descEv"]], "dnnl::prelu_forward (c++ struct)": [[165, "_CPPv4N4dnnl13prelu_forwardE"]], "dnnl::prelu_forward::prelu_forward (c++ function)": [[165, "_CPPv4N4dnnl13prelu_forward13prelu_forwardERK14primitive_desc"], [165, "_CPPv4N4dnnl13prelu_forward13prelu_forwardEv"]], "dnnl::prelu_forward::primitive_desc (c++ struct)": [[165, "_CPPv4N4dnnl13prelu_forward14primitive_descE"]], "dnnl::prelu_forward::primitive_desc::dst_desc (c++ function)": [[165, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8dst_descEv"]], "dnnl::prelu_forward::primitive_desc::get_prop_kind (c++ function)": [[165, "_CPPv4NK4dnnl13prelu_forward14primitive_desc13get_prop_kindEv"]], "dnnl::prelu_forward::primitive_desc::primitive_desc (c++ function)": [[165, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [165, "_CPPv4N4dnnl13prelu_forward14primitive_desc14primitive_descEv"]], "dnnl::prelu_forward::primitive_desc::src_desc (c++ function)": [[165, "_CPPv4NK4dnnl13prelu_forward14primitive_desc8src_descEv"]], "dnnl::reduction (c++ struct)": [[166, "_CPPv4N4dnnl9reductionE"]], "dnnl::reduction::primitive_desc (c++ struct)": [[166, "_CPPv4N4dnnl9reduction14primitive_descE"]], "dnnl::reduction::primitive_desc::dst_desc (c++ function)": [[166, "_CPPv4NK4dnnl9reduction14primitive_desc8dst_descEv"]], "dnnl::reduction::primitive_desc::get_algorithm (c++ function)": [[166, "_CPPv4NK4dnnl9reduction14primitive_desc13get_algorithmEv"]], "dnnl::reduction::primitive_desc::get_epsilon (c++ function)": [[166, "_CPPv4NK4dnnl9reduction14primitive_desc11get_epsilonEv"]], "dnnl::reduction::primitive_desc::get_p (c++ function)": [[166, "_CPPv4NK4dnnl9reduction14primitive_desc5get_pEv"]], "dnnl::reduction::primitive_desc::primitive_desc (c++ function)": [[166, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descEffRK14primitive_attrb"], [166, "_CPPv4N4dnnl9reduction14primitive_desc14primitive_descEv"]], "dnnl::reduction::primitive_desc::src_desc (c++ function)": [[166, "_CPPv4NK4dnnl9reduction14primitive_desc8src_descEv"]], "dnnl::reduction::reduction (c++ function)": [[166, "_CPPv4N4dnnl9reduction9reductionEv"]], "dnnl::reorder (c++ struct)": [[167, "_CPPv4N4dnnl7reorderE"]], "dnnl::reorder::execute (c++ function)": [[167, "_CPPv4NK4dnnl7reorder7executeERK6streamR6memoryR6memory"]], "dnnl::reorder::primitive_desc (c++ struct)": [[167, "_CPPv4N4dnnl7reorder14primitive_descE"]], "dnnl::reorder::primitive_desc::dst_desc (c++ function)": [[167, "_CPPv4NK4dnnl7reorder14primitive_desc8dst_descEv"]], "dnnl::reorder::primitive_desc::get_dst_engine (c++ function)": [[167, "_CPPv4NK4dnnl7reorder14primitive_desc14get_dst_engineEv"]], "dnnl::reorder::primitive_desc::get_src_engine (c++ function)": [[167, "_CPPv4NK4dnnl7reorder14primitive_desc14get_src_engineEv"]], "dnnl::reorder::primitive_desc::primitive_desc (c++ function)": [[167, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6engineRKN6memory4descERK6engineRKN6memory4descERK14primitive_attrb"], [167, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descERK6memoryRK6memoryRK14primitive_attrb"], [167, "_CPPv4N4dnnl7reorder14primitive_desc14primitive_descEv"]], "dnnl::reorder::primitive_desc::src_desc (c++ function)": [[167, "_CPPv4NK4dnnl7reorder14primitive_desc8src_descEv"]], "dnnl::reorder::reorder (c++ function)": [[167, "_CPPv4N4dnnl7reorder7reorderERK14primitive_desc"], [167, "_CPPv4N4dnnl7reorder7reorderERK6memoryRK6memoryRK14primitive_attr"], [167, "_CPPv4N4dnnl7reorder7reorderEv"]], "dnnl::resampling_backward (c++ struct)": [[168, "_CPPv4N4dnnl19resampling_backwardE"]], "dnnl::resampling_backward::primitive_desc (c++ struct)": [[168, "_CPPv4N4dnnl19resampling_backward14primitive_descE"]], "dnnl::resampling_backward::primitive_desc::diff_dst_desc (c++ function)": [[168, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_dst_descEv"]], "dnnl::resampling_backward::primitive_desc::diff_src_desc (c++ function)": [[168, "_CPPv4NK4dnnl19resampling_backward14primitive_desc13diff_src_descEv"]], "dnnl::resampling_backward::primitive_desc::primitive_desc (c++ function)": [[168, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [168, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descERK6engine9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERKN18resampling_forward14primitive_descERK14primitive_attrb"], [168, "_CPPv4N4dnnl19resampling_backward14primitive_desc14primitive_descEv"]], "dnnl::resampling_backward::resampling_backward (c++ function)": [[168, "_CPPv4N4dnnl19resampling_backward19resampling_backwardERK14primitive_desc"], [168, "_CPPv4N4dnnl19resampling_backward19resampling_backwardEv"]], "dnnl::resampling_forward (c++ struct)": [[168, "_CPPv4N4dnnl18resampling_forwardE"]], "dnnl::resampling_forward::primitive_desc (c++ struct)": [[168, "_CPPv4N4dnnl18resampling_forward14primitive_descE"]], "dnnl::resampling_forward::primitive_desc::dst_desc (c++ function)": [[168, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8dst_descEv"]], "dnnl::resampling_forward::primitive_desc::primitive_desc (c++ function)": [[168, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descERK14primitive_attrb"], [168, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERK14primitive_attrb"], [168, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKNSt6vectorIfEERKN6memory4descERKN6memory4descERK14primitive_attrb"], [168, "_CPPv4N4dnnl18resampling_forward14primitive_desc14primitive_descEv"]], "dnnl::resampling_forward::primitive_desc::src_desc (c++ function)": [[168, "_CPPv4NK4dnnl18resampling_forward14primitive_desc8src_descEv"]], "dnnl::resampling_forward::resampling_forward (c++ function)": [[168, "_CPPv4N4dnnl18resampling_forward18resampling_forwardERK14primitive_desc"], [168, "_CPPv4N4dnnl18resampling_forward18resampling_forwardEv"]], "dnnl::gru_backward (c++ struct)": [[169, "_CPPv4N4dnnl12gru_backwardE"]], "dnnl::gru_backward::gru_backward (c++ function)": [[169, "_CPPv4N4dnnl12gru_backward12gru_backwardERK14primitive_desc"], [169, "_CPPv4N4dnnl12gru_backward12gru_backwardEv"]], "dnnl::gru_backward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl12gru_backward14primitive_descE"]], "dnnl::gru_backward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc9bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_backward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_backward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_directionEv"]], "dnnl::gru_backward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_backward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl12gru_backward14primitive_desc14primitive_descEv"]], "dnnl::gru_backward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::gru_backward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_backward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl12gru_backward14primitive_desc14workspace_descEv"]], "dnnl::gru_forward (c++ struct)": [[169, "_CPPv4N4dnnl11gru_forwardE"]], "dnnl::gru_forward::gru_forward (c++ function)": [[169, "_CPPv4N4dnnl11gru_forward11gru_forwardERK14primitive_desc"], [169, "_CPPv4N4dnnl11gru_forward11gru_forwardEv"]], "dnnl::gru_forward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl11gru_forward14primitive_descE"]], "dnnl::gru_forward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc9bias_descEv"]], "dnnl::gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::gru_forward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::gru_forward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_directionEv"]], "dnnl::gru_forward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::gru_forward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl11gru_forward14primitive_desc14primitive_descEv"]], "dnnl::gru_forward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::gru_forward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::gru_forward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl11gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_backward (c++ struct)": [[169, "_CPPv4N4dnnl16lbr_gru_backwardE"]], "dnnl::lbr_gru_backward::lbr_gru_backward (c++ function)": [[169, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardERK14primitive_desc"], [169, "_CPPv4N4dnnl16lbr_gru_backward16lbr_gru_backwardEv"]], "dnnl::lbr_gru_backward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl16lbr_gru_backward14primitive_descE"]], "dnnl::lbr_gru_backward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_backward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_backward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN11gru_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl16lbr_gru_backward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_backward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl16lbr_gru_backward14primitive_desc14workspace_descEv"]], "dnnl::lbr_gru_forward (c++ struct)": [[169, "_CPPv4N4dnnl15lbr_gru_forwardE"]], "dnnl::lbr_gru_forward::lbr_gru_forward (c++ function)": [[169, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardERK14primitive_desc"], [169, "_CPPv4N4dnnl15lbr_gru_forward15lbr_gru_forwardEv"]], "dnnl::lbr_gru_forward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl15lbr_gru_forward14primitive_descE"]], "dnnl::lbr_gru_forward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc9bias_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_directionEv"]], "dnnl::lbr_gru_forward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lbr_gru_forward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl15lbr_gru_forward14primitive_desc14primitive_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc13src_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14src_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lbr_gru_forward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl15lbr_gru_forward14primitive_desc14workspace_descEv"]], "dnnl::lstm_backward (c++ struct)": [[169, "_CPPv4N4dnnl13lstm_backwardE"]], "dnnl::lstm_backward::lstm_backward (c++ function)": [[169, "_CPPv4N4dnnl13lstm_backward13lstm_backwardERK14primitive_desc"], [169, "_CPPv4N4dnnl13lstm_backward13lstm_backwardEv"]], "dnnl::lstm_backward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl13lstm_backward14primitive_descE"]], "dnnl::lstm_backward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc9bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14diff_bias_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_c_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_c_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc20diff_src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_peephole_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc26diff_weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::diff_weights_projection_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc28diff_weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_c_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_backward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_directionEv"]], "dnnl::lstm_backward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_backward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN12lstm_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl13lstm_backward14primitive_desc14primitive_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_c_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_backward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_peephole_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_backward::primitive_desc::weights_projection_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_backward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl13lstm_backward14primitive_desc14workspace_descEv"]], "dnnl::lstm_forward (c++ struct)": [[169, "_CPPv4N4dnnl12lstm_forwardE"]], "dnnl::lstm_forward::lstm_forward (c++ function)": [[169, "_CPPv4N4dnnl12lstm_forward12lstm_forwardERK14primitive_desc"], [169, "_CPPv4N4dnnl12lstm_forward12lstm_forwardEv"]], "dnnl::lstm_forward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl12lstm_forward14primitive_descE"]], "dnnl::lstm_forward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc9bias_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_c_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15dst_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13dst_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14dst_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_cell_kindEv"]], "dnnl::lstm_forward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_directionEv"]], "dnnl::lstm_forward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13get_prop_kindEv"]], "dnnl::lstm_forward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descERK6engine9prop_kind13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl12lstm_forward14primitive_desc14primitive_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_c_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc15src_iter_c_descEv"]], "dnnl::lstm_forward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc13src_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14src_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc17weights_iter_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc18weights_layer_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_peephole_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc21weights_peephole_descEv"]], "dnnl::lstm_forward::primitive_desc::weights_projection_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc23weights_projection_descEv"]], "dnnl::lstm_forward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl12lstm_forward14primitive_desc14workspace_descEv"]], "dnnl::rnn_direction (c++ enum)": [[169, "_CPPv4N4dnnl13rnn_directionE"]], "dnnl::rnn_direction::bidirectional_concat (c++ enumerator)": [[169, "_CPPv4N4dnnl13rnn_direction20bidirectional_concatE"]], "dnnl::rnn_direction::bidirectional_sum (c++ enumerator)": [[169, "_CPPv4N4dnnl13rnn_direction17bidirectional_sumE"]], "dnnl::rnn_direction::undef (c++ enumerator)": [[169, "_CPPv4N4dnnl13rnn_direction5undefE"]], "dnnl::rnn_direction::unidirectional (c++ enumerator)": [[169, "_CPPv4N4dnnl13rnn_direction14unidirectionalE"]], "dnnl::rnn_direction::unidirectional_left2right (c++ enumerator)": [[169, "_CPPv4N4dnnl13rnn_direction25unidirectional_left2rightE"]], "dnnl::rnn_direction::unidirectional_right2left (c++ enumerator)": [[169, "_CPPv4N4dnnl13rnn_direction25unidirectional_right2leftE"]], "dnnl::rnn_flags (c++ enum)": [[169, "_CPPv4N4dnnl9rnn_flagsE"]], "dnnl::rnn_flags::undef (c++ enumerator)": [[169, "_CPPv4N4dnnl9rnn_flags5undefE"]], "dnnl::vanilla_rnn_backward (c++ struct)": [[169, "_CPPv4N4dnnl20vanilla_rnn_backwardE"]], "dnnl::vanilla_rnn_backward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_descE"]], "dnnl::vanilla_rnn_backward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14diff_bias_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18diff_src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19diff_src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc22diff_weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::diff_weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc23diff_weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_activation_kind (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_alpha (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_beta (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRKN19vanilla_rnn_forward14primitive_descERK14primitive_attrb"], [169, "_CPPv4N4dnnl20vanilla_rnn_backward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_backward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl20vanilla_rnn_backward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_backward::vanilla_rnn_backward (c++ function)": [[169, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardERK14primitive_desc"], [169, "_CPPv4N4dnnl20vanilla_rnn_backward20vanilla_rnn_backwardEv"]], "dnnl::vanilla_rnn_forward (c++ struct)": [[169, "_CPPv4N4dnnl19vanilla_rnn_forwardE"]], "dnnl::vanilla_rnn_forward::primitive_desc (c++ struct)": [[169, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_descE"]], "dnnl::vanilla_rnn_forward::primitive_desc::bias_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9bias_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13dst_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::dst_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14dst_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_activation_kind (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc19get_activation_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_alpha (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc9get_alphaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_beta (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc8get_betaEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_cell_kind (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_cell_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_direction (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_directionEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::get_prop_kind (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13get_prop_kindEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::primitive_desc (c++ function)": [[169, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERK14primitive_attrb"], [169, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithm13rnn_directionRKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descERKN6memory4descEfRK14primitive_attrb"], [169, "_CPPv4N4dnnl19vanilla_rnn_forward14primitive_desc14primitive_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc13src_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::src_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14src_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_iter_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc17weights_iter_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::weights_layer_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc18weights_layer_descEv"]], "dnnl::vanilla_rnn_forward::primitive_desc::workspace_desc (c++ function)": [[169, "_CPPv4NK4dnnl19vanilla_rnn_forward14primitive_desc14workspace_descEv"]], "dnnl::vanilla_rnn_forward::vanilla_rnn_forward (c++ function)": [[169, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardERK14primitive_desc"], [169, "_CPPv4N4dnnl19vanilla_rnn_forward19vanilla_rnn_forwardEv"]], "dnnl::shuffle_backward (c++ struct)": [[170, "_CPPv4N4dnnl16shuffle_backwardE"]], "dnnl::shuffle_backward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl16shuffle_backward14primitive_descE"]], "dnnl::shuffle_backward::primitive_desc::diff_dst_desc (c++ function)": [[170, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_dst_descEv"]], "dnnl::shuffle_backward::primitive_desc::diff_src_desc (c++ function)": [[170, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13diff_src_descEv"]], "dnnl::shuffle_backward::primitive_desc::get_axis (c++ function)": [[170, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc8get_axisEv"]], "dnnl::shuffle_backward::primitive_desc::get_group_size (c++ function)": [[170, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_backward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl16shuffle_backward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_backward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descERK6engineRKN6memory4descERKN6memory4descEiiRKN15shuffle_forward14primitive_descERK14primitive_attrb"], [170, "_CPPv4N4dnnl16shuffle_backward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_backward::shuffle_backward (c++ function)": [[170, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardERK14primitive_desc"], [170, "_CPPv4N4dnnl16shuffle_backward16shuffle_backwardEv"]], "dnnl::shuffle_forward (c++ struct)": [[170, "_CPPv4N4dnnl15shuffle_forwardE"]], "dnnl::shuffle_forward::primitive_desc (c++ struct)": [[170, "_CPPv4N4dnnl15shuffle_forward14primitive_descE"]], "dnnl::shuffle_forward::primitive_desc::dst_desc (c++ function)": [[170, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8dst_descEv"]], "dnnl::shuffle_forward::primitive_desc::get_axis (c++ function)": [[170, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8get_axisEv"]], "dnnl::shuffle_forward::primitive_desc::get_group_size (c++ function)": [[170, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc14get_group_sizeEv"]], "dnnl::shuffle_forward::primitive_desc::get_prop_kind (c++ function)": [[170, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc13get_prop_kindEv"]], "dnnl::shuffle_forward::primitive_desc::primitive_desc (c++ function)": [[170, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descERK6engine9prop_kindRKN6memory4descERKN6memory4descEiiRK14primitive_attrb"], [170, "_CPPv4N4dnnl15shuffle_forward14primitive_desc14primitive_descEv"]], "dnnl::shuffle_forward::primitive_desc::src_desc (c++ function)": [[170, "_CPPv4NK4dnnl15shuffle_forward14primitive_desc8src_descEv"]], "dnnl::shuffle_forward::shuffle_forward (c++ function)": [[170, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardERK14primitive_desc"], [170, "_CPPv4N4dnnl15shuffle_forward15shuffle_forwardEv"]], "dnnl::softmax_backward (c++ struct)": [[171, "_CPPv4N4dnnl16softmax_backwardE"]], "dnnl::softmax_backward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl16softmax_backward14primitive_descE"]], "dnnl::softmax_backward::primitive_desc::diff_dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_dst_descEv"]], "dnnl::softmax_backward::primitive_desc::diff_src_desc (c++ function)": [[171, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13diff_src_descEv"]], "dnnl::softmax_backward::primitive_desc::dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8dst_descEv"]], "dnnl::softmax_backward::primitive_desc::get_algorithm (c++ function)": [[171, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_backward::primitive_desc::get_axis (c++ function)": [[171, "_CPPv4NK4dnnl16softmax_backward14primitive_desc8get_axisEv"]], "dnnl::softmax_backward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl16softmax_backward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_backward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descERK6engine9algorithmRKN6memory4descERKN6memory4descERKN6memory4descEiRKN15softmax_forward14primitive_descERK14primitive_attrb"], [171, "_CPPv4N4dnnl16softmax_backward14primitive_desc14primitive_descEv"]], "dnnl::softmax_backward::softmax_backward (c++ function)": [[171, "_CPPv4N4dnnl16softmax_backward16softmax_backwardERK14primitive_desc"], [171, "_CPPv4N4dnnl16softmax_backward16softmax_backwardEv"]], "dnnl::softmax_forward (c++ struct)": [[171, "_CPPv4N4dnnl15softmax_forwardE"]], "dnnl::softmax_forward::primitive_desc (c++ struct)": [[171, "_CPPv4N4dnnl15softmax_forward14primitive_descE"]], "dnnl::softmax_forward::primitive_desc::dst_desc (c++ function)": [[171, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8dst_descEv"]], "dnnl::softmax_forward::primitive_desc::get_algorithm (c++ function)": [[171, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_algorithmEv"]], "dnnl::softmax_forward::primitive_desc::get_axis (c++ function)": [[171, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8get_axisEv"]], "dnnl::softmax_forward::primitive_desc::get_prop_kind (c++ function)": [[171, "_CPPv4NK4dnnl15softmax_forward14primitive_desc13get_prop_kindEv"]], "dnnl::softmax_forward::primitive_desc::primitive_desc (c++ function)": [[171, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descERK6engine9prop_kind9algorithmRKN6memory4descERKN6memory4descEiRK14primitive_attrb"], [171, "_CPPv4N4dnnl15softmax_forward14primitive_desc14primitive_descEv"]], "dnnl::softmax_forward::primitive_desc::src_desc (c++ function)": [[171, "_CPPv4NK4dnnl15softmax_forward14primitive_desc8src_descEv"]], "dnnl::softmax_forward::softmax_forward (c++ function)": [[171, "_CPPv4N4dnnl15softmax_forward15softmax_forwardERK14primitive_desc"], [171, "_CPPv4N4dnnl15softmax_forward15softmax_forwardEv"]], "dnnl::sum (c++ struct)": [[172, "_CPPv4N4dnnl3sumE"]], "dnnl::sum::primitive_desc (c++ struct)": [[172, "_CPPv4N4dnnl3sum14primitive_descE"]], "dnnl::sum::primitive_desc::dst_desc (c++ function)": [[172, "_CPPv4NK4dnnl3sum14primitive_desc8dst_descEv"]], "dnnl::sum::primitive_desc::primitive_desc (c++ function)": [[172, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKN6memory4descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [172, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descERKNSt6vectorIfEERKNSt6vectorIN6memory4descEEERK6engineRK14primitive_attr"], [172, "_CPPv4N4dnnl3sum14primitive_desc14primitive_descEv"]], "dnnl::sum::primitive_desc::src_desc (c++ function)": [[172, "_CPPv4NK4dnnl3sum14primitive_desc8src_descEi"]], "dnnl::sum::sum (c++ function)": [[172, "_CPPv4N4dnnl3sum3sumERK14primitive_desc"], [172, "_CPPv4N4dnnl3sum3sumEv"]], "begin (c++ function)": [[560, "_CPPv4NK5beginEv"]], "blocked_range (c++ function)": [[560, "_CPPv413blocked_range5Value5Value9size_type"], [560, "_CPPv413blocked_rangeR13blocked_range18proportional_split"], [560, "_CPPv413blocked_rangeR13blocked_range5split"]], "const_iterator (c++ type)": [[560, "_CPPv414const_iterator"]], "empty (c++ function)": [[560, "_CPPv4NK5emptyEv"]], "end (c++ function)": [[560, "_CPPv4NK3endEv"]], "grainsize (c++ function)": [[560, "_CPPv4NK9grainsizeEv"]], "is_divisible (c++ function)": [[560, "_CPPv4NK12is_divisibleEv"]], "size (c++ function)": [[560, "_CPPv4NK4sizeEv"]], "size_type (c++ type)": [[560, "_CPPv49size_type"]], "collaborative_once_flag (c++ function)": [[562, "_CPPv423collaborative_once_flagv"]], "add (c++ function)": [[563, "_CPPv43addRK4Item"], [563, "_CPPv43addRR4Item"]], "clear (c++ function)": [[569, "_CPPv45clearv"]], "filter (c++ function)": [[569, "_CPPv46filterv"], [569, "_CPPv4I0E6filter11filter_modeRK4Body"]], "make_filter (c++ function)": [[569, "_CPPv4I000E11make_filter6filterI1T1UEN6filter4modeERK4Func"]], "operator& (c++ function)": [[569, "_CPPv4I000Ean6filterI1T1UERK6filterI1T1VERK6filterI1V1UE"]], "stop (c++ function)": [[571, "_CPPv44stopv"]], "is_final_scan (c++ function)": [[575, "_CPPv413is_final_scanv"]], "operator bool (c++ function)": [[575, "_CPPv4cvbv"], [850, "_CPPv4NKcvbEv"]], "left (c++ function)": [[580, "_CPPv4NK4leftEv"]], "operator split (c++ function)": [[580, "_CPPv4NKcv5splitEv"]], "proportional_split (c++ function)": [[580, "_CPPv418proportional_splitNSt6size_tENSt6size_tE"]], "right (c++ function)": [[580, "_CPPv4NK5rightEv"]], "attach (c++ struct)": [[751, "_CPPv46attach"]], "initialize (c++ function)": [[751, "_CPPv410initializeN10task_arena6attachE"], [851, "_CPPv410initialize11constraintsj8priority"], [851, "_CPPv410initializeN6oneapi3tbb6attachE"], [851, "_CPPv410initializeij8priority"], [851, "_CPPv410initializev"]], "task_arena (c++ function)": [[751, "_CPPv410task_arenaN10task_arena6attachE"], [851, "_CPPv410task_arena11constraintsj8priority"], [851, "_CPPv410task_arenaN6oneapi3tbb6attachE"], [851, "_CPPv410task_arenaRK10task_arena"], [851, "_CPPv410task_arenaij8priority"]], "broadcast_node (c++ function)": [[754, "_CPPv414broadcast_nodeR5graph"], [754, "_CPPv414broadcast_nodeRK14broadcast_node"]], "try_get (c++ function)": [[754, "_CPPv47try_getR11output_type"], [755, "_CPPv47try_getR1T"], [767, "_CPPv47try_getR6Output"]], "try_put (c++ function)": [[754, "_CPPv47try_putRK10input_type"], [755, "_CPPv47try_putRK1T"]], "buffer_node (c++ function)": [[755, "_CPPv411buffer_nodeR5graph"], [755, "_CPPv411buffer_nodeRK11buffer_node"]], "composite_node (c++ function)": [[756, "_CPPv414composite_nodeR5graph"]], "input_ports (c++ function)": [[756, "_CPPv411input_portsv"]], "output_ports (c++ function)": [[756, "_CPPv412output_portsv"]], "set_external_ports (c++ function)": [[756, "_CPPv418set_external_portsRR16input_ports_typeRR17output_ports_type"]], "cancel (c++ function)": [[764, "_CPPv46cancelv"]], "exception_thrown (c++ function)": [[764, "_CPPv416exception_thrownv"]], "graph (c++ function)": [[764, "_CPPv45graphR18task_group_context"]], "is_cancelled (c++ function)": [[764, "_CPPv412is_cancelledv"]], "reset (c++ function)": [[764, "_CPPv45reset11reset_flags"], [849, "_CPPv45resetv"]], "wait_for_all (c++ function)": [[764, "_CPPv412wait_for_allv"]], "~graph (c++ function)": [[764, "_CPPv4D0v"]], "oneapi::tbb::flow::indexer_node::indexer_node (c++ function)": [[766, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeER5graph"], [766, "_CPPv4N6oneapi3tbb4flow12indexer_node12indexer_nodeERK12indexer_node"]], "oneapi::tbb::flow::indexer_node::input_ports (c++ function)": [[766, "_CPPv4N6oneapi3tbb4flow12indexer_node11input_portsEv"]], "oneapi::tbb::flow::indexer_node::try_get (c++ function)": [[766, "_CPPv4N6oneapi3tbb4flow12indexer_node7try_getER11output_type"]], "activate (c++ function)": [[767, "_CPPv48activatev"]], "input_node (c++ function)": [[767, "_CPPv410input_nodeRK10input_node"], [767, "_CPPv4I0E10input_nodeR5graph4Body"]], "oneapi::tbb::flow::limiter_node::decrementer (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12limiter_node11decrementerEv"]], "oneapi::tbb::flow::limiter_node::limiter_node (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeER5graph6size_t"], [771, "_CPPv4N6oneapi3tbb4flow12limiter_node12limiter_nodeERK12limiter_node"]], "oneapi::tbb::flow::limiter_node::try_get (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_getER1T"]], "oneapi::tbb::flow::limiter_node::try_put (c++ function)": [[771, "_CPPv4N6oneapi3tbb4flow12limiter_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::clear (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14overwrite_node5clearEv"]], "oneapi::tbb::flow::overwrite_node::is_valid (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14overwrite_node8is_validEv"]], "oneapi::tbb::flow::overwrite_node::overwrite_node (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeER5graph"], [777, "_CPPv4N6oneapi3tbb4flow14overwrite_node14overwrite_nodeERK14overwrite_node"]], "oneapi::tbb::flow::overwrite_node::try_get (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_getER1T"]], "oneapi::tbb::flow::overwrite_node::try_put (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14overwrite_node7try_putERK1T"]], "oneapi::tbb::flow::overwrite_node::~overwrite_node (c++ function)": [[777, "_CPPv4N6oneapi3tbb4flow14overwrite_nodeD0Ev"]], "oneapi::tbb::flow::priority_node_queue::priority_queue_node (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeER5graph"], [779, "_CPPv4N6oneapi3tbb4flow19priority_node_queue19priority_queue_nodeERK19priority_queue_node"]], "oneapi::tbb::flow::priority_node_queue::try_get (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_getER1T"]], "oneapi::tbb::flow::priority_node_queue::try_put (c++ function)": [[779, "_CPPv4N6oneapi3tbb4flow19priority_node_queue7try_putERK1T"]], "oneapi::tbb::flow::queue_node::queue_node (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeER5graph"], [780, "_CPPv4N6oneapi3tbb4flow10queue_node10queue_nodeERK10queue_node"]], "oneapi::tbb::flow::queue_node::try_get (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow10queue_node7try_getER1T"]], "oneapi::tbb::flow::queue_node::try_put (c++ function)": [[780, "_CPPv4N6oneapi3tbb4flow10queue_node7try_putERK1T"]], "oneapi::tbb::flow::sequencer_node::sequencer_node (c++ function)": [[785, "_CPPv4I0EN6oneapi3tbb4flow14sequencer_node14sequencer_nodeER5graphRK9Sequencer"], [785, "_CPPv4N6oneapi3tbb4flow14sequencer_node14sequencer_nodeERK14sequencer_node"]], "oneapi::tbb::flow::sequencer_node::try_get (c++ function)": [[785, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_getER1T"]], "oneapi::tbb::flow::sequencer_node::try_put (c++ function)": [[785, "_CPPv4N6oneapi3tbb4flow14sequencer_node7try_putERK1T"]], "oneapi::tbb::flow::split_node::output_ports (c++ function)": [[786, "_CPPv4N6oneapi3tbb4flow10split_node12output_portsEv"]], "oneapi::tbb::flow::split_node::split_node (c++ function)": [[786, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeER5graph"], [786, "_CPPv4N6oneapi3tbb4flow10split_node10split_nodeERK10split_node"]], "oneapi::tbb::flow::split_node::try_put (c++ function)": [[786, "_CPPv4N6oneapi3tbb4flow10split_node7try_putERK9TupleType"]], "oneapi::tbb::flow::split_node::~split_node (c++ function)": [[786, "_CPPv4N6oneapi3tbb4flow10split_nodeD0Ev"]], "cast_to (c++ function)": [[787, "_CPPv4I0ENK7cast_toERK1Vv"]], "is_a (c++ function)": [[787, "_CPPv4I0ENK4is_aEbv"]], "tag (c++ function)": [[787, "_CPPv4NK3tagEv"]], "tagged_msg (c++ function)": [[787, "_CPPv4I00E10tagged_msgRK1TRK1R"]], "oneapi::tbb::flow::write_once_mode::clear (c++ function)": [[788, "_CPPv4N6oneapi3tbb4flow15write_once_mode5clearEv"]], "oneapi::tbb::flow::write_once_mode::is_valid (c++ function)": [[788, "_CPPv4N6oneapi3tbb4flow15write_once_mode8is_validEv"]], "oneapi::tbb::flow::write_once_mode::try_get (c++ function)": [[788, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_getER1T"]], "oneapi::tbb::flow::write_once_mode::try_put (c++ function)": [[788, "_CPPv4N6oneapi3tbb4flow15write_once_mode7try_putERK1T"]], "oneapi::tbb::flow::write_once_mode::write_once_node (c++ function)": [[788, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeER5graph"], [788, "_CPPv4N6oneapi3tbb4flow15write_once_mode15write_once_nodeERK15write_once_node"]], "oneapi::tbb::flow::write_once_mode::~write_once_node (c++ function)": [[788, "_CPPv4N6oneapi3tbb4flow15write_once_modeD0Ev"]], "core_types (c++ function)": [[790, "_CPPv410core_typesv"]], "default_concurrency (c++ function)": [[790, "_CPPv419default_concurrency12numa_node_id"], [790, "_CPPv419default_concurrencyN10task_arena11constraintsE"]], "numa_nodes (c++ function)": [[790, "_CPPv410numa_nodesv"]], "tbbmalloc_clean_all_buffers (c macro)": [[793, "c.TBBMALLOC_CLEAN_ALL_BUFFERS"]], "tbbmalloc_clean_thread_buffers (c macro)": [[793, "c.TBBMALLOC_CLEAN_THREAD_BUFFERS"]], "tbbmalloc_set_huge_size_threshold (c macro)": [[793, "c.TBBMALLOC_SET_HUGE_SIZE_THRESHOLD"]], "tbbmalloc_set_soft_heap_limit (c macro)": [[793, "c.TBBMALLOC_SET_SOFT_HEAP_LIMIT"]], "tbbmalloc_use_huge_pages (c macro)": [[793, "c.TBBMALLOC_USE_HUGE_PAGES"]], "scalable_allocation_command (c function)": [[793, "c.scalable_allocation_command"]], "scalable_allocation_mode (c++ function)": [[793, "_CPPv424scalable_allocation_modei8intptr_t"]], "scalable_msize (c++ function)": [[793, "_CPPv414scalable_msizePv"]], "allocate (c++ function)": [[794, "_CPPv48allocate9size_type"]], "deallocate (c++ function)": [[794, "_CPPv410deallocateP1T9size_type"]], "max_size (c++ function)": [[794, "_CPPv4NK8max_sizeEv"]], "operator!= (c++ function)": [[794, "_CPPv4I00EnebRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "operator== (c++ function)": [[794, "_CPPv4I00EeqbRK23cache_aligned_allocatorI1TERK23cache_aligned_allocatorI1UE"]], "cache_aligned_resource (c++ function)": [[795, "_CPPv422cache_aligned_resourcePNSt3pmr15memory_resourceE"], [795, "_CPPv422cache_aligned_resourcev"]], "do_allocate (c++ function)": [[795, "_CPPv411do_allocate6size_t6size_t"]], "do_deallocate (c++ function)": [[795, "_CPPv413do_deallocatePv6size_t6size_t"]], "do_is_equal (c++ function)": [[795, "_CPPv4NK11do_is_equalERKNSt3pmr15memory_resourceE"]], "upstream_resource (c++ function)": [[795, "_CPPv4NK17upstream_resourceEv"]], "oneapi::tbb::scalable_allocator::allocate (c++ function)": [[796, "_CPPv4N6oneapi3tbb18scalable_allocator8allocateE9size_type"]], "oneapi::tbb::scalable_allocator::deallocate (c++ function)": [[796, "_CPPv4N6oneapi3tbb18scalable_allocator10deallocateEP10value_type9size_type"]], "oneapi::tbb::scalable_allocator::operator!= (c++ function)": [[796, "_CPPv4I00EN6oneapi3tbb18scalable_allocatorneEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::scalable_allocator::operator== (c++ function)": [[796, "_CPPv4I00EN6oneapi3tbb18scalable_allocatoreqEbRK18scalable_allocatorI1TERK18scalable_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::allocate (c++ function)": [[798, "_CPPv4N6oneapi3tbb13tbb_allocator8allocateE9size_type"]], "oneapi::tbb::tbb_allocator::allocator_type (c++ function)": [[798, "_CPPv4N6oneapi3tbb13tbb_allocator14allocator_typeEv"]], "oneapi::tbb::tbb_allocator::deallocate (c++ function)": [[798, "_CPPv4N6oneapi3tbb13tbb_allocator10deallocateEP1T9size_type"]], "oneapi::tbb::tbb_allocator::operator!= (c++ function)": [[798, "_CPPv4I00EN6oneapi3tbb13tbb_allocatorneEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::tbb_allocator::operator== (c++ function)": [[798, "_CPPv4I00EN6oneapi3tbb13tbb_allocatoreqEbRK13tbb_allocatorI1TERK13tbb_allocatorI1UE"]], "oneapi::tbb::mutex::lock (c++ function)": [[800, "_CPPv4N6oneapi3tbb5mutex4lockEv"]], "oneapi::tbb::mutex::mutex (c++ function)": [[800, "_CPPv4N6oneapi3tbb5mutex5mutexEv"]], "oneapi::tbb::mutex::scoped_lock (c++ class)": [[800, "_CPPv4N6oneapi3tbb5mutex11scoped_lockE"]], "oneapi::tbb::mutex::try_lock (c++ function)": [[800, "_CPPv4N6oneapi3tbb5mutex8try_lockEv"]], "oneapi::tbb::mutex::unlock (c++ function)": [[800, "_CPPv4N6oneapi3tbb5mutex6unlockEv"]], "oneapi::tbb::mutex::~mutex (c++ function)": [[800, "_CPPv4N6oneapi3tbb5mutexD0Ev"]], "lock (c++ function)": [[801, "_CPPv44lockv"]], "null_mutex (c++ function)": [[801, "_CPPv410null_mutexv"]], "scoped_lock (c++ class)": [[801, "_CPPv411scoped_lock"]], "try_lock (c++ function)": [[801, "_CPPv48try_lockv"]], "unlock (c++ function)": [[801, "_CPPv46unlockv"]], "~null_mutex (c++ function)": [[801, "_CPPv4D0v"]], "oneapi::tbb::null_rw_mutex::lock (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex4lockEv"]], "oneapi::tbb::null_rw_mutex::lock_shared (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex11lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::null_rw_mutex (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex13null_rw_mutexEv"]], "oneapi::tbb::null_rw_mutex::scoped_lock (c++ class)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex11scoped_lockE"]], "oneapi::tbb::null_rw_mutex::try_lock (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex8try_lockEv"]], "oneapi::tbb::null_rw_mutex::try_lock_shared (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::null_rw_mutex::unlock (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex6unlockEv"]], "oneapi::tbb::null_rw_mutex::unlock_shared (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::null_rw_mutex::~null_rw_mutex (c++ function)": [[802, "_CPPv4N6oneapi3tbb13null_rw_mutexD0Ev"]], "oneapi::tbb::queueing_mutex::queuing_mutex (c++ function)": [[803, "_CPPv4N6oneapi3tbb14queueing_mutex13queuing_mutexEv"]], "oneapi::tbb::queueing_mutex::scoped_lock (c++ class)": [[803, "_CPPv4N6oneapi3tbb14queueing_mutex11scoped_lockE"]], "oneapi::tbb::queueing_mutex::~queuing_mutex (c++ function)": [[803, "_CPPv4N6oneapi3tbb14queueing_mutexD0Ev"]], "oneapi::tbb::queueing_rw_mutex::queuing_rw_mutex (c++ function)": [[804, "_CPPv4N6oneapi3tbb17queueing_rw_mutex16queuing_rw_mutexEv"]], "oneapi::tbb::queueing_rw_mutex::scoped_lock (c++ class)": [[804, "_CPPv4N6oneapi3tbb17queueing_rw_mutex11scoped_lockE"]], "oneapi::tbb::queueing_rw_mutex::~queuing_rw_mutex (c++ function)": [[804, "_CPPv4N6oneapi3tbb17queueing_rw_mutexD0Ev"]], "oneapi::tbb::rw_mutex::lock (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex4lockEv"]], "oneapi::tbb::rw_mutex::lock_shared (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex11lock_sharedEv"]], "oneapi::tbb::rw_mutex::rw_mutex (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex8rw_mutexEv"]], "oneapi::tbb::rw_mutex::scoped_lock (c++ class)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex11scoped_lockE"]], "oneapi::tbb::rw_mutex::try_lock (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex8try_lockEv"]], "oneapi::tbb::rw_mutex::try_lock_shared (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::rw_mutex::unlock (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex6unlockEv"]], "oneapi::tbb::rw_mutex::unlock_shared (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutex13unlock_sharedEv"]], "oneapi::tbb::rw_mutex::~rw_mutex (c++ function)": [[805, "_CPPv4N6oneapi3tbb8rw_mutexD0Ev"]], "oneapi::tbb::speculative_spin_mutex::scoped_lock (c++ class)": [[806, "_CPPv4N6oneapi3tbb22speculative_spin_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_mutex::speculative_spin_mutex (c++ function)": [[806, "_CPPv4N6oneapi3tbb22speculative_spin_mutex22speculative_spin_mutexEv"]], "oneapi::tbb::speculative_spin_mutex::~speculative_spin_mutex (c++ function)": [[806, "_CPPv4N6oneapi3tbb22speculative_spin_mutexD0Ev"]], "oneapi::tbb::speculative_spin_rw_mutex::scoped_lock (c++ class)": [[807, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::speculative_spin_rw_mutex::speculative_spin_rw_mutex (c++ function)": [[807, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutex25speculative_spin_rw_mutexEv"]], "oneapi::tbb::speculative_spin_rw_mutex::~speculative_spin_rw_mutex (c++ function)": [[807, "_CPPv4N6oneapi3tbb25speculative_spin_rw_mutexD0Ev"]], "oneapi::tbb::spin_mutex::lock (c++ function)": [[808, "_CPPv4N6oneapi3tbb10spin_mutex4lockEv"]], "oneapi::tbb::spin_mutex::scoped_lock (c++ class)": [[808, "_CPPv4N6oneapi3tbb10spin_mutex11scoped_lockE"]], "oneapi::tbb::spin_mutex::spin_mutex (c++ function)": [[808, "_CPPv4N6oneapi3tbb10spin_mutex10spin_mutexEv"]], "oneapi::tbb::spin_mutex::try_lock (c++ function)": [[808, "_CPPv4N6oneapi3tbb10spin_mutex8try_lockEv"]], "oneapi::tbb::spin_mutex::unlock (c++ function)": [[808, "_CPPv4N6oneapi3tbb10spin_mutex6unlockEv"]], "oneapi::tbb::spin_mutex::~spin_mutex (c++ function)": [[808, "_CPPv4N6oneapi3tbb10spin_mutexD0Ev"]], "oneapi::tbb::spin_rw_mutex::lock (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex4lockEv"]], "oneapi::tbb::spin_rw_mutex::lock_shared (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex11lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::scoped_lock (c++ class)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex11scoped_lockE"]], "oneapi::tbb::spin_rw_mutex::spin_rw_mutex (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex13spin_rw_mutexEv"]], "oneapi::tbb::spin_rw_mutex::try_lock (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex8try_lockEv"]], "oneapi::tbb::spin_rw_mutex::try_lock_shared (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex15try_lock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::unlock (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex6unlockEv"]], "oneapi::tbb::spin_rw_mutex::unlock_shared (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutex13unlock_sharedEv"]], "oneapi::tbb::spin_rw_mutex::~spin_rw_mutex (c++ function)": [[809, "_CPPv4N6oneapi3tbb13spin_rw_mutexD0Ev"]], "operator< (c++ function)": [[810, "_CPPv4ltRK1TRK1T"], [811, "_CPPv4ltRK5ValueRK5Value"], [817, "_CPPv4ltRK5IndexRK5Index"]], "swap (c++ function)": [[810, "_CPPv44swapR1TR1T"]], "value::value (c++ function)": [[811, "_CPPv4N5Value5ValueERK5Value"]], "value::~value (c++ function)": [[811, "_CPPv4N5ValueD0Ev"]], "operator+ (c++ function)": [[811, "_CPPv4plRK5Value1D"], [817, "_CPPv4plRK5Index1D"], [817, "_CPPv4plRK5IndexRK5Index"]], "operator- (c++ function)": [[811, "_CPPv4miRK5ValueRK5Value"], [817, "_CPPv4miRK5IndexRK5Index"]], "operator= (c++ function)": [[811, "_CPPv4aSRK5Value"], [817, "_CPPv4aSRK5Index"], [850, "_CPPv4aSRR21task_scheduler_handle"]], "std::begin (c++ function)": [[812, "_CPPv4NSt5beginE1c"]], "std::end (c++ function)": [[812, "_CPPv4NSt3endE1c"]], "firstfilterbody::body::operator() (c++ function)": [[813, "_CPPv4NK15FirstFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "lastfilterbody::body::operator() (c++ function)": [[813, "_CPPv4NK14LastFilterBody4BodyclE9InputType"]], "middlefilterbody::body::operator() (c++ function)": [[813, "_CPPv4NK16MiddleFilterBody4BodyclE9InputType"]], "singlefilterbody::body::operator() (c++ function)": [[813, "_CPPv4NK16SingleFilterBody4BodyclERN6oneapi3tbb12flow_controlE"]], "body::body (c++ function)": [[814, "_CPPv4N4Body4BodyERK4Body"], [821, "_CPPv4N4Body4BodyER4Body5split"]], "body::operator() (c++ function)": [[814, "_CPPv4NK4BodyclER5Range"], [815, "_CPPv4NK4BodyclE8ItemType"], [815, "_CPPv4NK4BodyclE8ItemTypeRN6oneapi3tbb6feederI8ItemTypeEE"], [821, "_CPPv4N4BodyclERK5Range12pre_scan_tag"], [821, "_CPPv4N4BodyclERK5Range14final_scan_tag"]], "body::~body (c++ function)": [[814, "_CPPv4N4BodyD0Ev"]], "f::operator() (c++ function)": [[816, "_CPPv4NK1FclE5Index"]], "index::index (c++ function)": [[817, "_CPPv4N5Index5IndexERK5Index"], [817, "_CPPv4N5Index5IndexEi"]], "index::~index (c++ function)": [[817, "_CPPv4N5IndexD0Ev"]], "operator* (c++ function)": [[817, "_CPPv4mlRK5IndexRK5Index"]], "operator++ (c++ function)": [[817, "_CPPv4ppv"]], "operator/ (c++ function)": [[817, "_CPPv4dvRK5IndexRK5Index"]], "operator<= (c++ function)": [[817, "_CPPv4leRK5IndexRK5Index"]], "parallelreducebody::body::body (c++ function)": [[818, "_CPPv4N18ParallelReduceBody4Body4BodyER4Body5split"]], "parallelreducebody::body::join (c++ function)": [[818, "_CPPv4N18ParallelReduceBody4Body4joinER4Body"]], "parallelreducebody::body::operator() (c++ function)": [[818, "_CPPv4N18ParallelReduceBody4BodyclERK5Range"]], "parallelreducebody::body::~body (c++ function)": [[818, "_CPPv4N18ParallelReduceBody4BodyD0Ev"]], "func::operator() (c++ function)": [[819, "_CPPv4NK4FuncclERK5RangeRK5Value"], [833, "_CPPv4N4FuncclERK5Input"]], "reduction::operator() (c++ function)": [[820, "_CPPv4NK9ReductionclERK5ValueRK5Value"]], "body::assign (c++ function)": [[821, "_CPPv4N4Body6assignER4Body"]], "body::reverse_join (c++ function)": [[821, "_CPPv4N4Body12reverse_joinER4Body"]], "combine::operator() (c++ function)": [[822, "_CPPv4NK7CombineclERK5ValueRK5Value"]], "scan::operator() (c++ function)": [[823, "_CPPv4NK4ScanclERK5RangeRK5Valueb"]], "r::r (c++ function)": [[824, "_CPPv4N1R1RER1R18proportional_split"], [824, "_CPPv4N1R1RER1R5split"], [824, "_CPPv4N1R1RERK1R"]], "r::empty (c++ function)": [[824, "_CPPv4NK1R5emptyEv"]], "r::is_divisible (c++ function)": [[824, "_CPPv4NK1R12is_divisibleEv"]], "r::~r (c++ function)": [[824, "_CPPv4N1RD0Ev"]], "x::x (c++ function)": [[825, "_CPPv4N1X1XER1X5split"]], "cr::begin (c++ function)": [[826, "_CPPv4N2CR5beginEv"]], "cr::const_reference (c++ type)": [[826, "_CPPv4N2CR15const_referenceE"]], "cr::difference_type (c++ type)": [[826, "_CPPv4N2CR15difference_typeE"]], "cr::end (c++ function)": [[826, "_CPPv4N2CR3endEv"]], "cr::grainsize (c++ function)": [[826, "_CPPv4NK2CR9grainsizeEv"]], "cr::iterator (c++ type)": [[826, "_CPPv4N2CR8iteratorE"]], "cr::reference (c++ type)": [[826, "_CPPv4N2CR9referenceE"]], "cr::size_type (c++ type)": [[826, "_CPPv4N2CR9size_typeE"]], "cr::value_type (c++ type)": [[826, "_CPPv4N2CR10value_typeE"]], "h::h (c++ function)": [[827, "_CPPv4N1H1HERK1H"]], "h::equal (c++ function)": [[827, "_CPPv4NK1H5equalERK7KeyTypeRK7KeyType"]], "h::hash (c++ function)": [[827, "_CPPv4NK1H4hashERK7KeyType"]], "h::~h (c++ function)": [[827, "_CPPv4N1HD0Ev"]], "asyncnodebody::body::body (c++ function)": [[828, "_CPPv4N13AsyncNodeBody4Body4BodyERK4Body"]], "asyncnodebody::body::operator() (c++ function)": [[828, "_CPPv4N13AsyncNodeBody4BodyclERK5InputR11GatewayType"]], "asyncnodebody::body::~body (c++ function)": [[828, "_CPPv4N13AsyncNodeBody4BodyD0Ev"]], "continuenodebody::body::body (c++ function)": [[829, "_CPPv4N16ContinueNodeBody4Body4BodyERK4Body"]], "continuenodebody::body::operator() (c++ function)": [[829, "_CPPv4N16ContinueNodeBody4BodyclERK12continue_msg"]], "continuenodebody::body::~body (c++ function)": [[829, "_CPPv4N16ContinueNodeBody4BodyD0Ev"]], "functionnodebody::body::body (c++ function)": [[830, "_CPPv4N16FunctionNodeBody4Body4BodyERK4Body"]], "functionnodebody::body::operator() (c++ function)": [[830, "_CPPv4N16FunctionNodeBody4BodyclERK5Input"]], "functionnodebody::body::~body (c++ function)": [[830, "_CPPv4N16FunctionNodeBody4BodyD0Ev"]], "t::release_wait (c++ function)": [[831, "_CPPv4N1T12release_waitEv"]], "t::reserve_wait (c++ function)": [[831, "_CPPv4N1T12reserve_waitEv"]], "t::try_put (c++ function)": [[831, "_CPPv4N1T7try_putERK6Output"]], "inputnodebody::body::body (c++ function)": [[832, "_CPPv4N13InputNodeBody4Body4BodyERK4Body"]], "inputnodebody::body::operator() (c++ function)": [[832, "_CPPv4N13InputNodeBody4BodyclERN6oneapi3tbb12flow_controlE"]], "inputnodebody::body::~body (c++ function)": [[832, "_CPPv4N13InputNodeBody4BodyD0Ev"]], "func::func (c++ function)": [[833, "_CPPv4N4Func4FuncERK4Func"]], "func::~func (c++ function)": [[833, "_CPPv4N4FuncD0Ev"]], "multifunctionnodebody::body::body (c++ function)": [[834, "_CPPv4N21MultifunctionNodeBody4Body4BodyERK4Body"]], "multifunctionnodebody::body::operator() (c++ function)": [[834, "_CPPv4N21MultifunctionNodeBody4BodyclERK5InputR15OutputPortsType"]], "multifunctionnodebody::body::~body (c++ function)": [[834, "_CPPv4N21MultifunctionNodeBody4BodyD0Ev"]], "s::s (c++ function)": [[835, "_CPPv4N1S1SERK1S"]], "s::operator() (c++ function)": [[835, "_CPPv4N1SclERK1T"]], "s::~s (c++ function)": [[835, "_CPPv4N1SD0Ev"]], "mutex_func::m::is_fair_mutex (c++ member)": [[836, "_CPPv4N10mutex_func1M13is_fair_mutexE"]], "mutex_func::m::is_recursive_mutex (c++ member)": [[836, "_CPPv4N10mutex_func1M18is_recursive_mutexE"]], "mutex_func::m::is_rw_mutex (c++ member)": [[836, "_CPPv4N10mutex_func1M11is_rw_mutexE"]], "mutex_func::m::scoped_lock (c++ function)": [[836, "_CPPv4N10mutex_func1M11scoped_lockER1M"], [836, "_CPPv4N10mutex_func1M11scoped_lockEv"]], "mutex_func::m::scoped_lock::acquire (c++ function)": [[836, "_CPPv4N10mutex_func1M11scoped_lock7acquireER1M"]], "mutex_func::m::scoped_lock::release (c++ function)": [[836, "_CPPv4N10mutex_func1M11scoped_lock7releaseEv"]], "mutex_func::m::scoped_lock::try_acquire (c++ function)": [[836, "_CPPv4N10mutex_func1M11scoped_lock11try_acquireER1M"]], "mutex_func::m::~scoped_lock (c++ function)": [[836, "_CPPv4N10mutex_func1MD0Ev"]], "mutex_type::m::scoped_lock (c++ type)": [[836, "_CPPv4N10mutex_type1M11scoped_lockE"]], "rwm::scoped_lock (c++ type)": [[837, "_CPPv4N3RWM11scoped_lockE"]], "rwm::scoped_lock::m::is_fair_mutex (c++ member)": [[837, "_CPPv4N3RWM11scoped_lock1M13is_fair_mutexE"]], "rwm::scoped_lock::m::is_recursive_mutex (c++ member)": [[837, "_CPPv4N3RWM11scoped_lock1M18is_recursive_mutexE"]], "rwm::scoped_lock::m::is_rw_mutex (c++ member)": [[837, "_CPPv4N3RWM11scoped_lock1M11is_rw_mutexE"]], "rwm::scoped_lock::rwm::scoped_lock (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockER3RWMb"], [837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lockEv"]], "rwm::scoped_lock::rwm::scoped_lock::acquire (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::downgrade_to_reader (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock19downgrade_to_readerEv"]], "rwm::scoped_lock::rwm::scoped_lock::release (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock7releaseEv"]], "rwm::scoped_lock::rwm::scoped_lock::try_acquire (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock11try_acquireER3RWMb"]], "rwm::scoped_lock::rwm::scoped_lock::upgrade_to_writer (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWM11scoped_lock17upgrade_to_writerEv"]], "rwm::scoped_lock::rwm::~scoped_lock (c++ function)": [[837, "_CPPv4N3RWM11scoped_lock3RWMD0Ev"]], "suspendfunc::func::func (c++ function)": [[838, "_CPPv4N11SuspendFunc4Func4FuncERK4Func"]], "suspendfunc::func::operator() (c++ function)": [[838, "_CPPv4N11SuspendFunc4FuncclEN6oneapi3tbb4task13suspend_pointE"]], "active_value (c++ function)": [[847, "_CPPv412active_value9parameter"]], "global_control (c++ function)": [[847, "_CPPv414global_control9parameter6size_t"]], "parameter::max_allowed_parallelism (c++ enum)": [[847, "_CPPv4N9parameter23max_allowed_parallelismE"]], "parameter::terminate_on_exception (c++ enum)": [[847, "_CPPv4N9parameter22terminate_on_exceptionE"]], "parameter::thread_stack_size (c++ enum)": [[847, "_CPPv4N9parameter17thread_stack_sizeE"]], "~global_control (c++ function)": [[847, "_CPPv4D0v"]], "cancel_group_execution (c++ function)": [[849, "_CPPv422cancel_group_executionv"]], "capture_fp_settings (c++ function)": [[849, "_CPPv419capture_fp_settingsv"]], "is_group_execution_cancelled (c++ function)": [[849, "_CPPv4NK28is_group_execution_cancelledEv"]], "kind_t::bound (c++ enum)": [[849, "_CPPv4N6kind_t5boundE"]], "kind_t::isolated (c++ enum)": [[849, "_CPPv4N6kind_t8isolatedE"]], "task_group_context (c++ function)": [[849, "_CPPv418task_group_context6kind_t9uintptr_t"]], "traits (c++ function)": [[849, "_CPPv4NK6traitsEv"]], "traits_type::fp_settings (c++ enum)": [[849, "_CPPv4N11traits_type11fp_settingsE"]], "~task_group_context (c++ function)": [[849, "_CPPv4D0v"]], "finalize (c++ function)": [[850, "_CPPv48finalizeR21task_scheduler_handle"], [850, "_CPPv48finalizeR21task_scheduler_handleRKNSt9nothrow_tE"]], "release (c++ function)": [[850, "_CPPv47releasev"]], "task_scheduler_handle (c++ function)": [[850, "_CPPv421task_scheduler_handleN6oneapi3tbb6attachE"], [850, "_CPPv421task_scheduler_handleRR21task_scheduler_handle"], [850, "_CPPv421task_scheduler_handlev"]], "~task_scheduler_handle (c++ function)": [[850, "_CPPv4D0v"]], "automatic (c++ member)": [[851, "_CPPv49automatic"]], "constraints (c++ struct)": [[851, "_CPPv411constraints"]], "constraints::constraints (c++ function)": [[851, "_CPPv4N11constraints11constraintsE12numa_node_idi"]], "constraints::core_type (c++ member)": [[851, "_CPPv4N11constraints9core_typeE"]], "constraints::max_concurrency (c++ member)": [[851, "_CPPv4N11constraints15max_concurrencyE"]], "constraints::max_threads_per_core (c++ member)": [[851, "_CPPv4N11constraints20max_threads_per_coreE"]], "constraints::numa_id (c++ member)": [[851, "_CPPv4N11constraints7numa_idE"]], "constraints::set_core_type (c++ function)": [[851, "_CPPv4N11constraints13set_core_typeE12core_type_id"]], "constraints::set_max_concurrency (c++ function)": [[851, "_CPPv4N11constraints19set_max_concurrencyEi"]], "constraints::set_max_threads_per_core (c++ function)": [[851, "_CPPv4N11constraints24set_max_threads_per_coreEi"]], "constraints::set_numa_id (c++ function)": [[851, "_CPPv4N11constraints11set_numa_idE12numa_node_id"]], "enqueue (c++ function)": [[851, "_CPPv47enqueueRR11task_handle"], [851, "_CPPv4I_1FE7enqueuevRR1F"]], "execute (c++ function)": [[851, "_CPPv4I_1FE7executeDTcl1fEERR1F"]], "is_active (c++ function)": [[851, "_CPPv4NK9is_activeEv"]], "max_concurrency (c++ function)": [[851, "_CPPv4NK15max_concurrencyEv"]], "not_initialized (c++ member)": [[851, "_CPPv415not_initialized"]], "priority::high (c++ enum)": [[851, "_CPPv4N8priority4highE"]], "priority::low (c++ enum)": [[851, "_CPPv4N8priority3lowE"]], "priority::normal (c++ enum)": [[851, "_CPPv4N8priority6normalE"]], "terminate (c++ function)": [[851, "_CPPv49terminatev"]], "~task_arena (c++ function)": [[851, "_CPPv4D0v"]], "is_observing (c++ function)": [[852, "_CPPv4NK12is_observingEv"]], "observe (c++ function)": [[852, "_CPPv47observeb"]], "on_scheduler_entry (c++ function)": [[852, "_CPPv418on_scheduler_entryb"]], "on_scheduler_exit (c++ function)": [[852, "_CPPv417on_scheduler_exitb"]], "task_scheduler_observer (c++ function)": [[852, "_CPPv423task_scheduler_observerR10task_arena"], [852, "_CPPv423task_scheduler_observerv"]], "~task_scheduler_observer (c++ function)": [[852, "_CPPv4D0v"]], "tbb::this_task_arena::current_thread_index (c++ function)": [[853, "_CPPv4N3tbb15this_task_arena20current_thread_indexEv"]], "tbb::this_task_arena::enqueue (c++ function)": [[853, "_CPPv4I0EN3tbb15this_task_arena7enqueueEvRR1F"], [853, "_CPPv4N3tbb15this_task_arena7enqueueERR11task_handle"]], "tbb::this_task_arena::isolate (c++ function)": [[853, "_CPPv4I_1FEN3tbb15this_task_arena7isolateEDTcl1fEERR1F"]], "tbb::this_task_arena::max_concurrency (c++ function)": [[853, "_CPPv4N3tbb15this_task_arena15max_concurrencyEv"]], "oneapi::tbb::task_group::cancel (c++ function)": [[854, "_CPPv4N6oneapi3tbb10task_group6cancelEv"]], "oneapi::tbb::task_group::defer (c++ function)": [[854, "_CPPv4I0EN6oneapi3tbb10task_group5deferE11task_handleRR1F"]], "oneapi::tbb::task_group::is_current_task_group_canceling (c++ function)": [[854, "_CPPv4N6oneapi3tbb10task_group31is_current_task_group_cancelingEv"]], "oneapi::tbb::task_group::run (c++ function)": [[854, "_CPPv4I0EN6oneapi3tbb10task_group3runEvRR4Func"], [854, "_CPPv4N6oneapi3tbb10task_group3runERR11task_handle"]], "oneapi::tbb::task_group::run_and_wait (c++ function)": [[854, "_CPPv4I0EN6oneapi3tbb10task_group12run_and_waitE17task_group_statusRK4Func"]], "oneapi::tbb::task_group::task_group (c++ function)": [[854, "_CPPv4N6oneapi3tbb10task_group10task_groupER18task_group_context"], [854, "_CPPv4N6oneapi3tbb10task_group10task_groupEv"]], "oneapi::tbb::task_group::wait (c++ function)": [[854, "_CPPv4N6oneapi3tbb10task_group4waitEv"]], "oneapi::tbb::task_group::~task_group (c++ function)": [[854, "_CPPv4N6oneapi3tbb10task_groupD0Ev"]], "canceled (c macro)": [[855, "c.canceled"]], "complete (c macro)": [[855, "c.complete"]], "not_complete (c macro)": [[855, "c.not_complete"]], "tbb::task_handle::operator bool (c++ function)": [[856, "_CPPv4NK3tbb11task_handlecvbEv"]], "tbb::task_handle::operator= (c++ function)": [[856, "_CPPv4N3tbb11task_handleaSERR11task_handle"]], "tbb::task_handle::task_handle (c++ function)": [[856, "_CPPv4N3tbb11task_handle11task_handleERR11task_handle"], [856, "_CPPv4N3tbb11task_handle11task_handleEv"]], "tbb::task_handle::~task_handle (c++ function)": [[856, "_CPPv4N3tbb11task_handleD0Ev"]], "oneapi::tbb::combinable::clear (c++ function)": [[858, "_CPPv4N6oneapi3tbb10combinable5clearEv"]], "oneapi::tbb::combinable::combinable (c++ function)": [[858, "_CPPv4I0EN6oneapi3tbb10combinable10combinableE5FInit"], [858, "_CPPv4N6oneapi3tbb10combinable10combinableERK10combinable"], [858, "_CPPv4N6oneapi3tbb10combinable10combinableERR10combinable"], [858, "_CPPv4N6oneapi3tbb10combinable10combinableEv"]], "oneapi::tbb::combinable::combine (c++ function)": [[858, "_CPPv4I0EN6oneapi3tbb10combinable7combineE1T10BinaryFunc"]], "oneapi::tbb::combinable::combine_each (c++ function)": [[858, "_CPPv4I0EN6oneapi3tbb10combinable12combine_eachEv9UnaryFunc"]], "oneapi::tbb::combinable::local (c++ function)": [[858, "_CPPv4N6oneapi3tbb10combinable5localERb"], [858, "_CPPv4N6oneapi3tbb10combinable5localEv"]], "oneapi::tbb::combinable::operator= (c++ function)": [[858, "_CPPv4N6oneapi3tbb10combinableaSERK10combinable"], [858, "_CPPv4N6oneapi3tbb10combinableaSERR10combinable"]], "oneapi::tbb::combinable::~combinable (c++ function)": [[858, "_CPPv4N6oneapi3tbb10combinableD0Ev"]], "ets_key_usage_type::ets_key_per_instance (c++ enum)": [[859, "_CPPv4N18ets_key_usage_type20ets_key_per_instanceE"]], "ets_key_usage_type::ets_no_key (c++ enum)": [[859, "_CPPv4N18ets_key_usage_type10ets_no_keyE"]], "ets_key_usage_type::ets_suspend_aware (c++ enum)": [[859, "_CPPv4N18ets_key_usage_type17ets_suspend_awareE"]], "oneapi::tbb::enumerable_thread_specific::combine (c++ function)": [[860, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific7combineE1T10BinaryFunc"]], "oneapi::tbb::enumerable_thread_specific::combine_each (c++ function)": [[860, "_CPPv4I0EN6oneapi3tbb26enumerable_thread_specific12combine_eachEv9UnaryFunc"]], "oneapi::tbb::enumerable_thread_specific::begin (c++ function)": [[862, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5beginEv"], [862, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5beginEv"]], "oneapi::tbb::enumerable_thread_specific::end (c++ function)": [[862, "_CPPv4N6oneapi3tbb26enumerable_thread_specific3endEv"], [862, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific3endEv"]], "oneapi::tbb::enumerable_thread_specific::range (c++ function)": [[862, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"], [862, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5rangeE6size_t"]], "oneapi::tbb::enumerable_thread_specific::local (c++ function)": [[863, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localERb"], [863, "_CPPv4N6oneapi3tbb26enumerable_thread_specific5localEv"]], "oneapi::tbb::enumerable_thread_specific::empty (c++ function)": [[864, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific5emptyEv"]], "oneapi::tbb::enumerable_thread_specific::size (c++ function)": [[864, "_CPPv4NK6oneapi3tbb26enumerable_thread_specific4sizeEv"]], "oneapi::tbb::flatten2d::begin (c++ function)": [[866, "_CPPv4N6oneapi3tbb9flatten2d5beginEv"], [866, "_CPPv4NK6oneapi3tbb9flatten2d5beginEv"]], "oneapi::tbb::flatten2d::end (c++ function)": [[866, "_CPPv4N6oneapi3tbb9flatten2d3endEv"], [866, "_CPPv4NK6oneapi3tbb9flatten2d3endEv"]], "oneapi::tbb::flatten2d::flatten2d (c++ function)": [[866, "_CPPv4I0EN6oneapi3tbb9flatten2d9flatten2dE11flattened2dI9ContainerERK9ContainerKN9Container14const_iteratorEKN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::flattened2d (c++ function)": [[866, "_CPPv4I0EN6oneapi3tbb9flatten2d11flattened2dERK9Container"], [866, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9Container"], [866, "_CPPv4N6oneapi3tbb9flatten2d11flattened2dERK9ContainerN9Container14const_iteratorEN9Container14const_iteratorE"]], "oneapi::tbb::flatten2d::size (c++ function)": [[866, "_CPPv4NK6oneapi3tbb9flatten2d4sizeEv"]]}})